//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace MedicalManagementSoftware.Panama {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSetPanama")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSetPanama : global::System.Data.DataSet {
        
        private Panama_patientDataTable tablePanama_patient;
        
        private PanamaExamineePersonalDeclarationSelectDataTable tablePanamaExamineePersonalDeclarationSelect;
        
        private PanamaClinicalDataSelectDataTable tablePanamaClinicalDataSelect;
        
        private PanamaPhysicalExplorationSelectDataTable tablePanamaPhysicalExplorationSelect;
        
        private PanamaDiagnosticTestSelectDataTable tablePanamaDiagnosticTestSelect;
        
        private PanamaResultMainSelectDataTable tablePanamaResultMainSelect;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataSetPanama() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected DataSetPanama(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Panama_patient"] != null)) {
                    base.Tables.Add(new Panama_patientDataTable(ds.Tables["Panama_patient"]));
                }
                if ((ds.Tables["PanamaExamineePersonalDeclarationSelect"] != null)) {
                    base.Tables.Add(new PanamaExamineePersonalDeclarationSelectDataTable(ds.Tables["PanamaExamineePersonalDeclarationSelect"]));
                }
                if ((ds.Tables["PanamaClinicalDataSelect"] != null)) {
                    base.Tables.Add(new PanamaClinicalDataSelectDataTable(ds.Tables["PanamaClinicalDataSelect"]));
                }
                if ((ds.Tables["PanamaPhysicalExplorationSelect"] != null)) {
                    base.Tables.Add(new PanamaPhysicalExplorationSelectDataTable(ds.Tables["PanamaPhysicalExplorationSelect"]));
                }
                if ((ds.Tables["PanamaDiagnosticTestSelect"] != null)) {
                    base.Tables.Add(new PanamaDiagnosticTestSelectDataTable(ds.Tables["PanamaDiagnosticTestSelect"]));
                }
                if ((ds.Tables["PanamaResultMainSelect"] != null)) {
                    base.Tables.Add(new PanamaResultMainSelectDataTable(ds.Tables["PanamaResultMainSelect"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Panama_patientDataTable Panama_patient {
            get {
                return this.tablePanama_patient;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PanamaExamineePersonalDeclarationSelectDataTable PanamaExamineePersonalDeclarationSelect {
            get {
                return this.tablePanamaExamineePersonalDeclarationSelect;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PanamaClinicalDataSelectDataTable PanamaClinicalDataSelect {
            get {
                return this.tablePanamaClinicalDataSelect;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PanamaPhysicalExplorationSelectDataTable PanamaPhysicalExplorationSelect {
            get {
                return this.tablePanamaPhysicalExplorationSelect;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PanamaDiagnosticTestSelectDataTable PanamaDiagnosticTestSelect {
            get {
                return this.tablePanamaDiagnosticTestSelect;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PanamaResultMainSelectDataTable PanamaResultMainSelect {
            get {
                return this.tablePanamaResultMainSelect;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DataSetPanama cln = ((DataSetPanama)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Panama_patient"] != null)) {
                    base.Tables.Add(new Panama_patientDataTable(ds.Tables["Panama_patient"]));
                }
                if ((ds.Tables["PanamaExamineePersonalDeclarationSelect"] != null)) {
                    base.Tables.Add(new PanamaExamineePersonalDeclarationSelectDataTable(ds.Tables["PanamaExamineePersonalDeclarationSelect"]));
                }
                if ((ds.Tables["PanamaClinicalDataSelect"] != null)) {
                    base.Tables.Add(new PanamaClinicalDataSelectDataTable(ds.Tables["PanamaClinicalDataSelect"]));
                }
                if ((ds.Tables["PanamaPhysicalExplorationSelect"] != null)) {
                    base.Tables.Add(new PanamaPhysicalExplorationSelectDataTable(ds.Tables["PanamaPhysicalExplorationSelect"]));
                }
                if ((ds.Tables["PanamaDiagnosticTestSelect"] != null)) {
                    base.Tables.Add(new PanamaDiagnosticTestSelectDataTable(ds.Tables["PanamaDiagnosticTestSelect"]));
                }
                if ((ds.Tables["PanamaResultMainSelect"] != null)) {
                    base.Tables.Add(new PanamaResultMainSelectDataTable(ds.Tables["PanamaResultMainSelect"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablePanama_patient = ((Panama_patientDataTable)(base.Tables["Panama_patient"]));
            if ((initTable == true)) {
                if ((this.tablePanama_patient != null)) {
                    this.tablePanama_patient.InitVars();
                }
            }
            this.tablePanamaExamineePersonalDeclarationSelect = ((PanamaExamineePersonalDeclarationSelectDataTable)(base.Tables["PanamaExamineePersonalDeclarationSelect"]));
            if ((initTable == true)) {
                if ((this.tablePanamaExamineePersonalDeclarationSelect != null)) {
                    this.tablePanamaExamineePersonalDeclarationSelect.InitVars();
                }
            }
            this.tablePanamaClinicalDataSelect = ((PanamaClinicalDataSelectDataTable)(base.Tables["PanamaClinicalDataSelect"]));
            if ((initTable == true)) {
                if ((this.tablePanamaClinicalDataSelect != null)) {
                    this.tablePanamaClinicalDataSelect.InitVars();
                }
            }
            this.tablePanamaPhysicalExplorationSelect = ((PanamaPhysicalExplorationSelectDataTable)(base.Tables["PanamaPhysicalExplorationSelect"]));
            if ((initTable == true)) {
                if ((this.tablePanamaPhysicalExplorationSelect != null)) {
                    this.tablePanamaPhysicalExplorationSelect.InitVars();
                }
            }
            this.tablePanamaDiagnosticTestSelect = ((PanamaDiagnosticTestSelectDataTable)(base.Tables["PanamaDiagnosticTestSelect"]));
            if ((initTable == true)) {
                if ((this.tablePanamaDiagnosticTestSelect != null)) {
                    this.tablePanamaDiagnosticTestSelect.InitVars();
                }
            }
            this.tablePanamaResultMainSelect = ((PanamaResultMainSelectDataTable)(base.Tables["PanamaResultMainSelect"]));
            if ((initTable == true)) {
                if ((this.tablePanamaResultMainSelect != null)) {
                    this.tablePanamaResultMainSelect.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DataSetPanama";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSetPanama.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablePanama_patient = new Panama_patientDataTable();
            base.Tables.Add(this.tablePanama_patient);
            this.tablePanamaExamineePersonalDeclarationSelect = new PanamaExamineePersonalDeclarationSelectDataTable();
            base.Tables.Add(this.tablePanamaExamineePersonalDeclarationSelect);
            this.tablePanamaClinicalDataSelect = new PanamaClinicalDataSelectDataTable();
            base.Tables.Add(this.tablePanamaClinicalDataSelect);
            this.tablePanamaPhysicalExplorationSelect = new PanamaPhysicalExplorationSelectDataTable();
            base.Tables.Add(this.tablePanamaPhysicalExplorationSelect);
            this.tablePanamaDiagnosticTestSelect = new PanamaDiagnosticTestSelectDataTable();
            base.Tables.Add(this.tablePanamaDiagnosticTestSelect);
            this.tablePanamaResultMainSelect = new PanamaResultMainSelectDataTable();
            base.Tables.Add(this.tablePanamaResultMainSelect);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializePanama_patient() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializePanamaExamineePersonalDeclarationSelect() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializePanamaClinicalDataSelect() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializePanamaPhysicalExplorationSelect() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializePanamaDiagnosticTestSelect() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializePanamaResultMainSelect() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSetPanama ds = new DataSetPanama();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Panama_patientRowChangeEventHandler(object sender, Panama_patientRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void PanamaExamineePersonalDeclarationSelectRowChangeEventHandler(object sender, PanamaExamineePersonalDeclarationSelectRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void PanamaClinicalDataSelectRowChangeEventHandler(object sender, PanamaClinicalDataSelectRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void PanamaPhysicalExplorationSelectRowChangeEventHandler(object sender, PanamaPhysicalExplorationSelectRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void PanamaDiagnosticTestSelectRowChangeEventHandler(object sender, PanamaDiagnosticTestSelectRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void PanamaResultMainSelectRowChangeEventHandler(object sender, PanamaResultMainSelectRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Panama_patientDataTable : global::System.Data.TypedTableBase<Panama_patientRow> {
            
            private global::System.Data.DataColumn columnpapin;
            
            private global::System.Data.DataColumn columnFullname;
            
            private global::System.Data.DataColumn columnHomeAddress;
            
            private global::System.Data.DataColumn columnDepartment;
            
            private global::System.Data.DataColumn columnposition;
            
            private global::System.Data.DataColumn columngender;
            
            private global::System.Data.DataColumn columnbirthdate;
            
            private global::System.Data.DataColumn columnPassportSeamanBookNo;
            
            private global::System.Data.DataColumn columnRhTyping;
            
            private global::System.Data.DataColumn columnLookOutDuties;
            
            private global::System.Data.DataColumn columnEmergencyDuties;
            
            private global::System.Data.DataColumn columnTypeOfShip;
            
            private global::System.Data.DataColumn columnTradeArea;
            
            private global::System.Data.DataColumn columnspecimen_no;
            
            private global::System.Data.DataColumn columnfitness_date;
            
            private global::System.Data.DataColumn columnpathologist;
            
            private global::System.Data.DataColumn columnvalid_until;
            
            private global::System.Data.DataColumn columnresultid;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Panama_patientDataTable() {
                this.TableName = "Panama_patient";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Panama_patientDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Panama_patientDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn papinColumn {
                get {
                    return this.columnpapin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FullnameColumn {
                get {
                    return this.columnFullname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HomeAddressColumn {
                get {
                    return this.columnHomeAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DepartmentColumn {
                get {
                    return this.columnDepartment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn positionColumn {
                get {
                    return this.columnposition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn genderColumn {
                get {
                    return this.columngender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn birthdateColumn {
                get {
                    return this.columnbirthdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PassportSeamanBookNoColumn {
                get {
                    return this.columnPassportSeamanBookNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RhTypingColumn {
                get {
                    return this.columnRhTyping;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LookOutDutiesColumn {
                get {
                    return this.columnLookOutDuties;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmergencyDutiesColumn {
                get {
                    return this.columnEmergencyDuties;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TypeOfShipColumn {
                get {
                    return this.columnTypeOfShip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradeAreaColumn {
                get {
                    return this.columnTradeArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn specimen_noColumn {
                get {
                    return this.columnspecimen_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fitness_dateColumn {
                get {
                    return this.columnfitness_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn pathologistColumn {
                get {
                    return this.columnpathologist;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn valid_untilColumn {
                get {
                    return this.columnvalid_until;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn resultidColumn {
                get {
                    return this.columnresultid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Panama_patientRow this[int index] {
                get {
                    return ((Panama_patientRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Panama_patientRowChangeEventHandler Panama_patientRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Panama_patientRowChangeEventHandler Panama_patientRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Panama_patientRowChangeEventHandler Panama_patientRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Panama_patientRowChangeEventHandler Panama_patientRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddPanama_patientRow(Panama_patientRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Panama_patientRow AddPanama_patientRow(
                        string papin, 
                        string Fullname, 
                        string HomeAddress, 
                        string Department, 
                        string position, 
                        string gender, 
                        string birthdate, 
                        string PassportSeamanBookNo, 
                        string RhTyping, 
                        string LookOutDuties, 
                        string EmergencyDuties, 
                        string TypeOfShip, 
                        string TradeArea, 
                        string specimen_no, 
                        string fitness_date, 
                        string pathologist, 
                        string valid_until, 
                        string resultid) {
                Panama_patientRow rowPanama_patientRow = ((Panama_patientRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        papin,
                        Fullname,
                        HomeAddress,
                        Department,
                        position,
                        gender,
                        birthdate,
                        PassportSeamanBookNo,
                        RhTyping,
                        LookOutDuties,
                        EmergencyDuties,
                        TypeOfShip,
                        TradeArea,
                        specimen_no,
                        fitness_date,
                        pathologist,
                        valid_until,
                        resultid};
                rowPanama_patientRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPanama_patientRow);
                return rowPanama_patientRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Panama_patientDataTable cln = ((Panama_patientDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Panama_patientDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnpapin = base.Columns["papin"];
                this.columnFullname = base.Columns["Fullname"];
                this.columnHomeAddress = base.Columns["HomeAddress"];
                this.columnDepartment = base.Columns["Department"];
                this.columnposition = base.Columns["position"];
                this.columngender = base.Columns["gender"];
                this.columnbirthdate = base.Columns["birthdate"];
                this.columnPassportSeamanBookNo = base.Columns["PassportSeamanBookNo"];
                this.columnRhTyping = base.Columns["RhTyping"];
                this.columnLookOutDuties = base.Columns["LookOutDuties"];
                this.columnEmergencyDuties = base.Columns["EmergencyDuties"];
                this.columnTypeOfShip = base.Columns["TypeOfShip"];
                this.columnTradeArea = base.Columns["TradeArea"];
                this.columnspecimen_no = base.Columns["specimen_no"];
                this.columnfitness_date = base.Columns["fitness_date"];
                this.columnpathologist = base.Columns["pathologist"];
                this.columnvalid_until = base.Columns["valid_until"];
                this.columnresultid = base.Columns["resultid"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnpapin = new global::System.Data.DataColumn("papin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpapin);
                this.columnFullname = new global::System.Data.DataColumn("Fullname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullname);
                this.columnHomeAddress = new global::System.Data.DataColumn("HomeAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHomeAddress);
                this.columnDepartment = new global::System.Data.DataColumn("Department", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepartment);
                this.columnposition = new global::System.Data.DataColumn("position", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnposition);
                this.columngender = new global::System.Data.DataColumn("gender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngender);
                this.columnbirthdate = new global::System.Data.DataColumn("birthdate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbirthdate);
                this.columnPassportSeamanBookNo = new global::System.Data.DataColumn("PassportSeamanBookNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPassportSeamanBookNo);
                this.columnRhTyping = new global::System.Data.DataColumn("RhTyping", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRhTyping);
                this.columnLookOutDuties = new global::System.Data.DataColumn("LookOutDuties", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLookOutDuties);
                this.columnEmergencyDuties = new global::System.Data.DataColumn("EmergencyDuties", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmergencyDuties);
                this.columnTypeOfShip = new global::System.Data.DataColumn("TypeOfShip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeOfShip);
                this.columnTradeArea = new global::System.Data.DataColumn("TradeArea", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradeArea);
                this.columnspecimen_no = new global::System.Data.DataColumn("specimen_no", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnspecimen_no);
                this.columnfitness_date = new global::System.Data.DataColumn("fitness_date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfitness_date);
                this.columnpathologist = new global::System.Data.DataColumn("pathologist", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpathologist);
                this.columnvalid_until = new global::System.Data.DataColumn("valid_until", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvalid_until);
                this.columnresultid = new global::System.Data.DataColumn("resultid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnresultid);
                this.columnpapin.MaxLength = 50;
                this.columnFullname.ReadOnly = true;
                this.columnFullname.MaxLength = 153;
                this.columnHomeAddress.ReadOnly = true;
                this.columnHomeAddress.MaxLength = 152;
                this.columnDepartment.MaxLength = 20;
                this.columnposition.MaxLength = 50;
                this.columngender.MaxLength = 10;
                this.columnbirthdate.MaxLength = 50;
                this.columnPassportSeamanBookNo.ReadOnly = true;
                this.columnPassportSeamanBookNo.MaxLength = 103;
                this.columnRhTyping.MaxLength = 100;
                this.columnLookOutDuties.MaxLength = 100;
                this.columnEmergencyDuties.MaxLength = 100;
                this.columnTypeOfShip.MaxLength = 100;
                this.columnTradeArea.MaxLength = 100;
                this.columnspecimen_no.MaxLength = 254;
                this.columnfitness_date.MaxLength = 254;
                this.columnpathologist.MaxLength = 254;
                this.columnvalid_until.MaxLength = 254;
                this.columnresultid.MaxLength = 254;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Panama_patientRow NewPanama_patientRow() {
                return ((Panama_patientRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Panama_patientRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Panama_patientRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Panama_patientRowChanged != null)) {
                    this.Panama_patientRowChanged(this, new Panama_patientRowChangeEvent(((Panama_patientRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Panama_patientRowChanging != null)) {
                    this.Panama_patientRowChanging(this, new Panama_patientRowChangeEvent(((Panama_patientRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Panama_patientRowDeleted != null)) {
                    this.Panama_patientRowDeleted(this, new Panama_patientRowChangeEvent(((Panama_patientRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Panama_patientRowDeleting != null)) {
                    this.Panama_patientRowDeleting(this, new Panama_patientRowChangeEvent(((Panama_patientRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovePanama_patientRow(Panama_patientRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetPanama ds = new DataSetPanama();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Panama_patientDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PanamaExamineePersonalDeclarationSelectDataTable : global::System.Data.TypedTableBase<PanamaExamineePersonalDeclarationSelectRow> {
            
            private global::System.Data.DataColumn columnRecId;
            
            private global::System.Data.DataColumn columnHighBloodPressure;
            
            private global::System.Data.DataColumn columnEyeproblem;
            
            private global::System.Data.DataColumn columnEarNoseThroat;
            
            private global::System.Data.DataColumn columnHeartSurgery;
            
            private global::System.Data.DataColumn columnVaricoseveins;
            
            private global::System.Data.DataColumn columnAsthmaBronchitis;
            
            private global::System.Data.DataColumn columnBloodDisorder;
            
            private global::System.Data.DataColumn columnDiabetes;
            
            private global::System.Data.DataColumn columnThyroidProblem;
            
            private global::System.Data.DataColumn columnDigestiveDisorders;
            
            private global::System.Data.DataColumn columnKidneyDisorders;
            
            private global::System.Data.DataColumn columnSkinProblem;
            
            private global::System.Data.DataColumn columnAllergies;
            
            private global::System.Data.DataColumn columnEpilipsy;
            
            private global::System.Data.DataColumn columnSickleCell;
            
            private global::System.Data.DataColumn columnHerinas;
            
            private global::System.Data.DataColumn columnGenitalDisorders;
            
            private global::System.Data.DataColumn columnPregnancy;
            
            private global::System.Data.DataColumn columnSleepproblem;
            
            private global::System.Data.DataColumn columnDoyouSmoke;
            
            private global::System.Data.DataColumn columnSurgeries;
            
            private global::System.Data.DataColumn columnInfectious;
            
            private global::System.Data.DataColumn columnDizzinessFainting;
            
            private global::System.Data.DataColumn columnLossofconsciousness;
            
            private global::System.Data.DataColumn columnPsychiatricProblem;
            
            private global::System.Data.DataColumn columnDepression;
            
            private global::System.Data.DataColumn columnAttemptedsuicide;
            
            private global::System.Data.DataColumn columnLossofmemory;
            
            private global::System.Data.DataColumn columnBalanceProblems;
            
            private global::System.Data.DataColumn columnSevereHeadAches;
            
            private global::System.Data.DataColumn columnVasculardisease;
            
            private global::System.Data.DataColumn columnRestrictedMobility;
            
            private global::System.Data.DataColumn columnBackJointProblem;
            
            private global::System.Data.DataColumn columnAmputation;
            
            private global::System.Data.DataColumn columnFracturesDislocation;
            
            private global::System.Data.DataColumn columnCovid19;
            
            private global::System.Data.DataColumn columnRepatriated;
            
            private global::System.Data.DataColumn columnHospitalized;
            
            private global::System.Data.DataColumn columnSeaDuty;
            
            private global::System.Data.DataColumn columnRevoke;
            
            private global::System.Data.DataColumn columnConsiderDisease;
            
            private global::System.Data.DataColumn columnFitToPerformDuries;
            
            private global::System.Data.DataColumn columnAllergicToAnyMedication;
            
            private global::System.Data.DataColumn columnAlternativeSupliment;
            
            private global::System.Data.DataColumn columnAlternativeSuplimentComment1;
            
            private global::System.Data.DataColumn columnTakenMedications;
            
            private global::System.Data.DataColumn columnTakenMedicationsComment1;
            
            private global::System.Data.DataColumn columnComment1;
            
            private global::System.Data.DataColumn columnResultID;
            
            private global::System.Data.DataColumn columnComment2;
            
            private global::System.Data.DataColumn columnComment3;
            
            private global::System.Data.DataColumn columnComment4;
            
            private global::System.Data.DataColumn columnComment5;
            
            private global::System.Data.DataColumn columnAlternativeSuplimentComment2;
            
            private global::System.Data.DataColumn columnAlternativeSuplimentComment3;
            
            private global::System.Data.DataColumn columnAlternativeSuplimentComment4;
            
            private global::System.Data.DataColumn columnAlternativeSuplimentComment5;
            
            private global::System.Data.DataColumn columnTakenMedicationsComment2;
            
            private global::System.Data.DataColumn columnTakenMedicationsComment3;
            
            private global::System.Data.DataColumn columnTakenMedicationsComment4;
            
            private global::System.Data.DataColumn columnTakenMedicationsComment5;
            
            private global::System.Data.DataColumn columnAlternativeSuplimentComment6;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PanamaExamineePersonalDeclarationSelectDataTable() {
                this.TableName = "PanamaExamineePersonalDeclarationSelect";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PanamaExamineePersonalDeclarationSelectDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected PanamaExamineePersonalDeclarationSelectDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RecIdColumn {
                get {
                    return this.columnRecId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HighBloodPressureColumn {
                get {
                    return this.columnHighBloodPressure;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EyeproblemColumn {
                get {
                    return this.columnEyeproblem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EarNoseThroatColumn {
                get {
                    return this.columnEarNoseThroat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HeartSurgeryColumn {
                get {
                    return this.columnHeartSurgery;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VaricoseveinsColumn {
                get {
                    return this.columnVaricoseveins;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AsthmaBronchitisColumn {
                get {
                    return this.columnAsthmaBronchitis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BloodDisorderColumn {
                get {
                    return this.columnBloodDisorder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DiabetesColumn {
                get {
                    return this.columnDiabetes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ThyroidProblemColumn {
                get {
                    return this.columnThyroidProblem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DigestiveDisordersColumn {
                get {
                    return this.columnDigestiveDisorders;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KidneyDisordersColumn {
                get {
                    return this.columnKidneyDisorders;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SkinProblemColumn {
                get {
                    return this.columnSkinProblem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AllergiesColumn {
                get {
                    return this.columnAllergies;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EpilipsyColumn {
                get {
                    return this.columnEpilipsy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SickleCellColumn {
                get {
                    return this.columnSickleCell;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HerinasColumn {
                get {
                    return this.columnHerinas;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GenitalDisordersColumn {
                get {
                    return this.columnGenitalDisorders;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PregnancyColumn {
                get {
                    return this.columnPregnancy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SleepproblemColumn {
                get {
                    return this.columnSleepproblem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DoyouSmokeColumn {
                get {
                    return this.columnDoyouSmoke;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SurgeriesColumn {
                get {
                    return this.columnSurgeries;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InfectiousColumn {
                get {
                    return this.columnInfectious;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DizzinessFaintingColumn {
                get {
                    return this.columnDizzinessFainting;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LossofconsciousnessColumn {
                get {
                    return this.columnLossofconsciousness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PsychiatricProblemColumn {
                get {
                    return this.columnPsychiatricProblem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DepressionColumn {
                get {
                    return this.columnDepression;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AttemptedsuicideColumn {
                get {
                    return this.columnAttemptedsuicide;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LossofmemoryColumn {
                get {
                    return this.columnLossofmemory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BalanceProblemsColumn {
                get {
                    return this.columnBalanceProblems;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SevereHeadAchesColumn {
                get {
                    return this.columnSevereHeadAches;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VasculardiseaseColumn {
                get {
                    return this.columnVasculardisease;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RestrictedMobilityColumn {
                get {
                    return this.columnRestrictedMobility;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BackJointProblemColumn {
                get {
                    return this.columnBackJointProblem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AmputationColumn {
                get {
                    return this.columnAmputation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FracturesDislocationColumn {
                get {
                    return this.columnFracturesDislocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Covid19Column {
                get {
                    return this.columnCovid19;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RepatriatedColumn {
                get {
                    return this.columnRepatriated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HospitalizedColumn {
                get {
                    return this.columnHospitalized;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SeaDutyColumn {
                get {
                    return this.columnSeaDuty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RevokeColumn {
                get {
                    return this.columnRevoke;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConsiderDiseaseColumn {
                get {
                    return this.columnConsiderDisease;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FitToPerformDuriesColumn {
                get {
                    return this.columnFitToPerformDuries;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AllergicToAnyMedicationColumn {
                get {
                    return this.columnAllergicToAnyMedication;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AlternativeSuplimentColumn {
                get {
                    return this.columnAlternativeSupliment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AlternativeSuplimentComment1Column {
                get {
                    return this.columnAlternativeSuplimentComment1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TakenMedicationsColumn {
                get {
                    return this.columnTakenMedications;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TakenMedicationsComment1Column {
                get {
                    return this.columnTakenMedicationsComment1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Comment1Column {
                get {
                    return this.columnComment1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ResultIDColumn {
                get {
                    return this.columnResultID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Comment2Column {
                get {
                    return this.columnComment2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Comment3Column {
                get {
                    return this.columnComment3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Comment4Column {
                get {
                    return this.columnComment4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Comment5Column {
                get {
                    return this.columnComment5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AlternativeSuplimentComment2Column {
                get {
                    return this.columnAlternativeSuplimentComment2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AlternativeSuplimentComment3Column {
                get {
                    return this.columnAlternativeSuplimentComment3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AlternativeSuplimentComment4Column {
                get {
                    return this.columnAlternativeSuplimentComment4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AlternativeSuplimentComment5Column {
                get {
                    return this.columnAlternativeSuplimentComment5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TakenMedicationsComment2Column {
                get {
                    return this.columnTakenMedicationsComment2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TakenMedicationsComment3Column {
                get {
                    return this.columnTakenMedicationsComment3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TakenMedicationsComment4Column {
                get {
                    return this.columnTakenMedicationsComment4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TakenMedicationsComment5Column {
                get {
                    return this.columnTakenMedicationsComment5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AlternativeSuplimentComment6Column {
                get {
                    return this.columnAlternativeSuplimentComment6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PanamaExamineePersonalDeclarationSelectRow this[int index] {
                get {
                    return ((PanamaExamineePersonalDeclarationSelectRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PanamaExamineePersonalDeclarationSelectRowChangeEventHandler PanamaExamineePersonalDeclarationSelectRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PanamaExamineePersonalDeclarationSelectRowChangeEventHandler PanamaExamineePersonalDeclarationSelectRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PanamaExamineePersonalDeclarationSelectRowChangeEventHandler PanamaExamineePersonalDeclarationSelectRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PanamaExamineePersonalDeclarationSelectRowChangeEventHandler PanamaExamineePersonalDeclarationSelectRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddPanamaExamineePersonalDeclarationSelectRow(PanamaExamineePersonalDeclarationSelectRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PanamaExamineePersonalDeclarationSelectRow AddPanamaExamineePersonalDeclarationSelectRow(
                        string HighBloodPressure, 
                        string Eyeproblem, 
                        string EarNoseThroat, 
                        string HeartSurgery, 
                        string Varicoseveins, 
                        string AsthmaBronchitis, 
                        string BloodDisorder, 
                        string Diabetes, 
                        string ThyroidProblem, 
                        string DigestiveDisorders, 
                        string KidneyDisorders, 
                        string SkinProblem, 
                        string Allergies, 
                        string Epilipsy, 
                        string SickleCell, 
                        string Herinas, 
                        string GenitalDisorders, 
                        string Pregnancy, 
                        string Sleepproblem, 
                        string DoyouSmoke, 
                        string Surgeries, 
                        string Infectious, 
                        string DizzinessFainting, 
                        string Lossofconsciousness, 
                        string PsychiatricProblem, 
                        string Depression, 
                        string Attemptedsuicide, 
                        string Lossofmemory, 
                        string BalanceProblems, 
                        string SevereHeadAches, 
                        string Vasculardisease, 
                        string RestrictedMobility, 
                        string BackJointProblem, 
                        string Amputation, 
                        string FracturesDislocation, 
                        string Covid19, 
                        string Repatriated, 
                        string Hospitalized, 
                        string SeaDuty, 
                        string Revoke, 
                        string ConsiderDisease, 
                        string FitToPerformDuries, 
                        string AllergicToAnyMedication, 
                        string AlternativeSupliment, 
                        string AlternativeSuplimentComment1, 
                        string TakenMedications, 
                        string TakenMedicationsComment1, 
                        string Comment1, 
                        string ResultID, 
                        string Comment2, 
                        string Comment3, 
                        string Comment4, 
                        string Comment5, 
                        string AlternativeSuplimentComment2, 
                        string AlternativeSuplimentComment3, 
                        string AlternativeSuplimentComment4, 
                        string AlternativeSuplimentComment5, 
                        string TakenMedicationsComment2, 
                        string TakenMedicationsComment3, 
                        string TakenMedicationsComment4, 
                        string TakenMedicationsComment5, 
                        string AlternativeSuplimentComment6) {
                PanamaExamineePersonalDeclarationSelectRow rowPanamaExamineePersonalDeclarationSelectRow = ((PanamaExamineePersonalDeclarationSelectRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        HighBloodPressure,
                        Eyeproblem,
                        EarNoseThroat,
                        HeartSurgery,
                        Varicoseveins,
                        AsthmaBronchitis,
                        BloodDisorder,
                        Diabetes,
                        ThyroidProblem,
                        DigestiveDisorders,
                        KidneyDisorders,
                        SkinProblem,
                        Allergies,
                        Epilipsy,
                        SickleCell,
                        Herinas,
                        GenitalDisorders,
                        Pregnancy,
                        Sleepproblem,
                        DoyouSmoke,
                        Surgeries,
                        Infectious,
                        DizzinessFainting,
                        Lossofconsciousness,
                        PsychiatricProblem,
                        Depression,
                        Attemptedsuicide,
                        Lossofmemory,
                        BalanceProblems,
                        SevereHeadAches,
                        Vasculardisease,
                        RestrictedMobility,
                        BackJointProblem,
                        Amputation,
                        FracturesDislocation,
                        Covid19,
                        Repatriated,
                        Hospitalized,
                        SeaDuty,
                        Revoke,
                        ConsiderDisease,
                        FitToPerformDuries,
                        AllergicToAnyMedication,
                        AlternativeSupliment,
                        AlternativeSuplimentComment1,
                        TakenMedications,
                        TakenMedicationsComment1,
                        Comment1,
                        ResultID,
                        Comment2,
                        Comment3,
                        Comment4,
                        Comment5,
                        AlternativeSuplimentComment2,
                        AlternativeSuplimentComment3,
                        AlternativeSuplimentComment4,
                        AlternativeSuplimentComment5,
                        TakenMedicationsComment2,
                        TakenMedicationsComment3,
                        TakenMedicationsComment4,
                        TakenMedicationsComment5,
                        AlternativeSuplimentComment6};
                rowPanamaExamineePersonalDeclarationSelectRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPanamaExamineePersonalDeclarationSelectRow);
                return rowPanamaExamineePersonalDeclarationSelectRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PanamaExamineePersonalDeclarationSelectRow FindByRecIdResultID(int RecId, string ResultID) {
                return ((PanamaExamineePersonalDeclarationSelectRow)(this.Rows.Find(new object[] {
                            RecId,
                            ResultID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PanamaExamineePersonalDeclarationSelectDataTable cln = ((PanamaExamineePersonalDeclarationSelectDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PanamaExamineePersonalDeclarationSelectDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnRecId = base.Columns["RecId"];
                this.columnHighBloodPressure = base.Columns["HighBloodPressure"];
                this.columnEyeproblem = base.Columns["Eyeproblem"];
                this.columnEarNoseThroat = base.Columns["EarNoseThroat"];
                this.columnHeartSurgery = base.Columns["HeartSurgery"];
                this.columnVaricoseveins = base.Columns["Varicoseveins"];
                this.columnAsthmaBronchitis = base.Columns["AsthmaBronchitis"];
                this.columnBloodDisorder = base.Columns["BloodDisorder"];
                this.columnDiabetes = base.Columns["Diabetes"];
                this.columnThyroidProblem = base.Columns["ThyroidProblem"];
                this.columnDigestiveDisorders = base.Columns["DigestiveDisorders"];
                this.columnKidneyDisorders = base.Columns["KidneyDisorders"];
                this.columnSkinProblem = base.Columns["SkinProblem"];
                this.columnAllergies = base.Columns["Allergies"];
                this.columnEpilipsy = base.Columns["Epilipsy"];
                this.columnSickleCell = base.Columns["SickleCell"];
                this.columnHerinas = base.Columns["Herinas"];
                this.columnGenitalDisorders = base.Columns["GenitalDisorders"];
                this.columnPregnancy = base.Columns["Pregnancy"];
                this.columnSleepproblem = base.Columns["Sleepproblem"];
                this.columnDoyouSmoke = base.Columns["DoyouSmoke"];
                this.columnSurgeries = base.Columns["Surgeries"];
                this.columnInfectious = base.Columns["Infectious"];
                this.columnDizzinessFainting = base.Columns["DizzinessFainting"];
                this.columnLossofconsciousness = base.Columns["Lossofconsciousness"];
                this.columnPsychiatricProblem = base.Columns["PsychiatricProblem"];
                this.columnDepression = base.Columns["Depression"];
                this.columnAttemptedsuicide = base.Columns["Attemptedsuicide"];
                this.columnLossofmemory = base.Columns["Lossofmemory"];
                this.columnBalanceProblems = base.Columns["BalanceProblems"];
                this.columnSevereHeadAches = base.Columns["SevereHeadAches"];
                this.columnVasculardisease = base.Columns["Vasculardisease"];
                this.columnRestrictedMobility = base.Columns["RestrictedMobility"];
                this.columnBackJointProblem = base.Columns["BackJointProblem"];
                this.columnAmputation = base.Columns["Amputation"];
                this.columnFracturesDislocation = base.Columns["FracturesDislocation"];
                this.columnCovid19 = base.Columns["Covid19"];
                this.columnRepatriated = base.Columns["Repatriated"];
                this.columnHospitalized = base.Columns["Hospitalized"];
                this.columnSeaDuty = base.Columns["SeaDuty"];
                this.columnRevoke = base.Columns["Revoke"];
                this.columnConsiderDisease = base.Columns["ConsiderDisease"];
                this.columnFitToPerformDuries = base.Columns["FitToPerformDuries"];
                this.columnAllergicToAnyMedication = base.Columns["AllergicToAnyMedication"];
                this.columnAlternativeSupliment = base.Columns["AlternativeSupliment"];
                this.columnAlternativeSuplimentComment1 = base.Columns["AlternativeSuplimentComment1"];
                this.columnTakenMedications = base.Columns["TakenMedications"];
                this.columnTakenMedicationsComment1 = base.Columns["TakenMedicationsComment1"];
                this.columnComment1 = base.Columns["Comment1"];
                this.columnResultID = base.Columns["ResultID"];
                this.columnComment2 = base.Columns["Comment2"];
                this.columnComment3 = base.Columns["Comment3"];
                this.columnComment4 = base.Columns["Comment4"];
                this.columnComment5 = base.Columns["Comment5"];
                this.columnAlternativeSuplimentComment2 = base.Columns["AlternativeSuplimentComment2"];
                this.columnAlternativeSuplimentComment3 = base.Columns["AlternativeSuplimentComment3"];
                this.columnAlternativeSuplimentComment4 = base.Columns["AlternativeSuplimentComment4"];
                this.columnAlternativeSuplimentComment5 = base.Columns["AlternativeSuplimentComment5"];
                this.columnTakenMedicationsComment2 = base.Columns["TakenMedicationsComment2"];
                this.columnTakenMedicationsComment3 = base.Columns["TakenMedicationsComment3"];
                this.columnTakenMedicationsComment4 = base.Columns["TakenMedicationsComment4"];
                this.columnTakenMedicationsComment5 = base.Columns["TakenMedicationsComment5"];
                this.columnAlternativeSuplimentComment6 = base.Columns["AlternativeSuplimentComment6"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnRecId = new global::System.Data.DataColumn("RecId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecId);
                this.columnHighBloodPressure = new global::System.Data.DataColumn("HighBloodPressure", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHighBloodPressure);
                this.columnEyeproblem = new global::System.Data.DataColumn("Eyeproblem", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEyeproblem);
                this.columnEarNoseThroat = new global::System.Data.DataColumn("EarNoseThroat", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEarNoseThroat);
                this.columnHeartSurgery = new global::System.Data.DataColumn("HeartSurgery", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeartSurgery);
                this.columnVaricoseveins = new global::System.Data.DataColumn("Varicoseveins", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVaricoseveins);
                this.columnAsthmaBronchitis = new global::System.Data.DataColumn("AsthmaBronchitis", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAsthmaBronchitis);
                this.columnBloodDisorder = new global::System.Data.DataColumn("BloodDisorder", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBloodDisorder);
                this.columnDiabetes = new global::System.Data.DataColumn("Diabetes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiabetes);
                this.columnThyroidProblem = new global::System.Data.DataColumn("ThyroidProblem", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThyroidProblem);
                this.columnDigestiveDisorders = new global::System.Data.DataColumn("DigestiveDisorders", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDigestiveDisorders);
                this.columnKidneyDisorders = new global::System.Data.DataColumn("KidneyDisorders", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKidneyDisorders);
                this.columnSkinProblem = new global::System.Data.DataColumn("SkinProblem", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSkinProblem);
                this.columnAllergies = new global::System.Data.DataColumn("Allergies", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAllergies);
                this.columnEpilipsy = new global::System.Data.DataColumn("Epilipsy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEpilipsy);
                this.columnSickleCell = new global::System.Data.DataColumn("SickleCell", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSickleCell);
                this.columnHerinas = new global::System.Data.DataColumn("Herinas", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHerinas);
                this.columnGenitalDisorders = new global::System.Data.DataColumn("GenitalDisorders", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGenitalDisorders);
                this.columnPregnancy = new global::System.Data.DataColumn("Pregnancy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPregnancy);
                this.columnSleepproblem = new global::System.Data.DataColumn("Sleepproblem", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSleepproblem);
                this.columnDoyouSmoke = new global::System.Data.DataColumn("DoyouSmoke", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoyouSmoke);
                this.columnSurgeries = new global::System.Data.DataColumn("Surgeries", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSurgeries);
                this.columnInfectious = new global::System.Data.DataColumn("Infectious", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInfectious);
                this.columnDizzinessFainting = new global::System.Data.DataColumn("DizzinessFainting", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDizzinessFainting);
                this.columnLossofconsciousness = new global::System.Data.DataColumn("Lossofconsciousness", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLossofconsciousness);
                this.columnPsychiatricProblem = new global::System.Data.DataColumn("PsychiatricProblem", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPsychiatricProblem);
                this.columnDepression = new global::System.Data.DataColumn("Depression", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepression);
                this.columnAttemptedsuicide = new global::System.Data.DataColumn("Attemptedsuicide", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttemptedsuicide);
                this.columnLossofmemory = new global::System.Data.DataColumn("Lossofmemory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLossofmemory);
                this.columnBalanceProblems = new global::System.Data.DataColumn("BalanceProblems", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalanceProblems);
                this.columnSevereHeadAches = new global::System.Data.DataColumn("SevereHeadAches", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSevereHeadAches);
                this.columnVasculardisease = new global::System.Data.DataColumn("Vasculardisease", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVasculardisease);
                this.columnRestrictedMobility = new global::System.Data.DataColumn("RestrictedMobility", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRestrictedMobility);
                this.columnBackJointProblem = new global::System.Data.DataColumn("BackJointProblem", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBackJointProblem);
                this.columnAmputation = new global::System.Data.DataColumn("Amputation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmputation);
                this.columnFracturesDislocation = new global::System.Data.DataColumn("FracturesDislocation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFracturesDislocation);
                this.columnCovid19 = new global::System.Data.DataColumn("Covid19", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCovid19);
                this.columnRepatriated = new global::System.Data.DataColumn("Repatriated", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRepatriated);
                this.columnHospitalized = new global::System.Data.DataColumn("Hospitalized", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHospitalized);
                this.columnSeaDuty = new global::System.Data.DataColumn("SeaDuty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeaDuty);
                this.columnRevoke = new global::System.Data.DataColumn("Revoke", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRevoke);
                this.columnConsiderDisease = new global::System.Data.DataColumn("ConsiderDisease", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsiderDisease);
                this.columnFitToPerformDuries = new global::System.Data.DataColumn("FitToPerformDuries", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFitToPerformDuries);
                this.columnAllergicToAnyMedication = new global::System.Data.DataColumn("AllergicToAnyMedication", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAllergicToAnyMedication);
                this.columnAlternativeSupliment = new global::System.Data.DataColumn("AlternativeSupliment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlternativeSupliment);
                this.columnAlternativeSuplimentComment1 = new global::System.Data.DataColumn("AlternativeSuplimentComment1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlternativeSuplimentComment1);
                this.columnTakenMedications = new global::System.Data.DataColumn("TakenMedications", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTakenMedications);
                this.columnTakenMedicationsComment1 = new global::System.Data.DataColumn("TakenMedicationsComment1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTakenMedicationsComment1);
                this.columnComment1 = new global::System.Data.DataColumn("Comment1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment1);
                this.columnResultID = new global::System.Data.DataColumn("ResultID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResultID);
                this.columnComment2 = new global::System.Data.DataColumn("Comment2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment2);
                this.columnComment3 = new global::System.Data.DataColumn("Comment3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment3);
                this.columnComment4 = new global::System.Data.DataColumn("Comment4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment4);
                this.columnComment5 = new global::System.Data.DataColumn("Comment5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment5);
                this.columnAlternativeSuplimentComment2 = new global::System.Data.DataColumn("AlternativeSuplimentComment2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlternativeSuplimentComment2);
                this.columnAlternativeSuplimentComment3 = new global::System.Data.DataColumn("AlternativeSuplimentComment3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlternativeSuplimentComment3);
                this.columnAlternativeSuplimentComment4 = new global::System.Data.DataColumn("AlternativeSuplimentComment4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlternativeSuplimentComment4);
                this.columnAlternativeSuplimentComment5 = new global::System.Data.DataColumn("AlternativeSuplimentComment5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlternativeSuplimentComment5);
                this.columnTakenMedicationsComment2 = new global::System.Data.DataColumn("TakenMedicationsComment2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTakenMedicationsComment2);
                this.columnTakenMedicationsComment3 = new global::System.Data.DataColumn("TakenMedicationsComment3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTakenMedicationsComment3);
                this.columnTakenMedicationsComment4 = new global::System.Data.DataColumn("TakenMedicationsComment4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTakenMedicationsComment4);
                this.columnTakenMedicationsComment5 = new global::System.Data.DataColumn("TakenMedicationsComment5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTakenMedicationsComment5);
                this.columnAlternativeSuplimentComment6 = new global::System.Data.DataColumn("AlternativeSuplimentComment6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlternativeSuplimentComment6);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRecId,
                                this.columnResultID}, true));
                this.columnRecId.AutoIncrement = true;
                this.columnRecId.AutoIncrementSeed = -1;
                this.columnRecId.AutoIncrementStep = -1;
                this.columnRecId.AllowDBNull = false;
                this.columnRecId.ReadOnly = true;
                this.columnHighBloodPressure.MaxLength = 100;
                this.columnEyeproblem.MaxLength = 100;
                this.columnEarNoseThroat.MaxLength = 100;
                this.columnHeartSurgery.MaxLength = 100;
                this.columnVaricoseveins.MaxLength = 100;
                this.columnAsthmaBronchitis.MaxLength = 100;
                this.columnBloodDisorder.MaxLength = 100;
                this.columnDiabetes.MaxLength = 100;
                this.columnThyroidProblem.MaxLength = 100;
                this.columnDigestiveDisorders.MaxLength = 100;
                this.columnKidneyDisorders.MaxLength = 100;
                this.columnSkinProblem.MaxLength = 100;
                this.columnAllergies.MaxLength = 100;
                this.columnEpilipsy.MaxLength = 100;
                this.columnSickleCell.MaxLength = 100;
                this.columnHerinas.MaxLength = 100;
                this.columnGenitalDisorders.MaxLength = 100;
                this.columnPregnancy.MaxLength = 100;
                this.columnSleepproblem.MaxLength = 100;
                this.columnDoyouSmoke.MaxLength = 100;
                this.columnSurgeries.MaxLength = 100;
                this.columnInfectious.MaxLength = 100;
                this.columnDizzinessFainting.MaxLength = 100;
                this.columnLossofconsciousness.MaxLength = 100;
                this.columnPsychiatricProblem.MaxLength = 100;
                this.columnDepression.MaxLength = 100;
                this.columnAttemptedsuicide.MaxLength = 100;
                this.columnLossofmemory.MaxLength = 100;
                this.columnBalanceProblems.MaxLength = 100;
                this.columnSevereHeadAches.MaxLength = 100;
                this.columnVasculardisease.MaxLength = 100;
                this.columnRestrictedMobility.MaxLength = 100;
                this.columnBackJointProblem.MaxLength = 100;
                this.columnAmputation.MaxLength = 100;
                this.columnFracturesDislocation.MaxLength = 100;
                this.columnCovid19.MaxLength = 100;
                this.columnRepatriated.MaxLength = 100;
                this.columnHospitalized.MaxLength = 100;
                this.columnSeaDuty.MaxLength = 100;
                this.columnRevoke.MaxLength = 100;
                this.columnConsiderDisease.MaxLength = 100;
                this.columnFitToPerformDuries.MaxLength = 100;
                this.columnAllergicToAnyMedication.MaxLength = 100;
                this.columnAlternativeSupliment.MaxLength = 100;
                this.columnAlternativeSuplimentComment1.MaxLength = 254;
                this.columnTakenMedications.MaxLength = 100;
                this.columnTakenMedicationsComment1.MaxLength = 254;
                this.columnComment1.MaxLength = 254;
                this.columnResultID.AllowDBNull = false;
                this.columnResultID.MaxLength = 100;
                this.columnComment2.MaxLength = 254;
                this.columnComment3.MaxLength = 254;
                this.columnComment4.MaxLength = 254;
                this.columnComment5.MaxLength = 254;
                this.columnAlternativeSuplimentComment2.MaxLength = 254;
                this.columnAlternativeSuplimentComment3.MaxLength = 254;
                this.columnAlternativeSuplimentComment4.MaxLength = 254;
                this.columnAlternativeSuplimentComment5.MaxLength = 254;
                this.columnTakenMedicationsComment2.MaxLength = 254;
                this.columnTakenMedicationsComment3.MaxLength = 254;
                this.columnTakenMedicationsComment4.MaxLength = 254;
                this.columnTakenMedicationsComment5.MaxLength = 254;
                this.columnAlternativeSuplimentComment6.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PanamaExamineePersonalDeclarationSelectRow NewPanamaExamineePersonalDeclarationSelectRow() {
                return ((PanamaExamineePersonalDeclarationSelectRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PanamaExamineePersonalDeclarationSelectRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PanamaExamineePersonalDeclarationSelectRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PanamaExamineePersonalDeclarationSelectRowChanged != null)) {
                    this.PanamaExamineePersonalDeclarationSelectRowChanged(this, new PanamaExamineePersonalDeclarationSelectRowChangeEvent(((PanamaExamineePersonalDeclarationSelectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PanamaExamineePersonalDeclarationSelectRowChanging != null)) {
                    this.PanamaExamineePersonalDeclarationSelectRowChanging(this, new PanamaExamineePersonalDeclarationSelectRowChangeEvent(((PanamaExamineePersonalDeclarationSelectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PanamaExamineePersonalDeclarationSelectRowDeleted != null)) {
                    this.PanamaExamineePersonalDeclarationSelectRowDeleted(this, new PanamaExamineePersonalDeclarationSelectRowChangeEvent(((PanamaExamineePersonalDeclarationSelectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PanamaExamineePersonalDeclarationSelectRowDeleting != null)) {
                    this.PanamaExamineePersonalDeclarationSelectRowDeleting(this, new PanamaExamineePersonalDeclarationSelectRowChangeEvent(((PanamaExamineePersonalDeclarationSelectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovePanamaExamineePersonalDeclarationSelectRow(PanamaExamineePersonalDeclarationSelectRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetPanama ds = new DataSetPanama();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PanamaExamineePersonalDeclarationSelectDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PanamaClinicalDataSelectDataTable : global::System.Data.TypedTableBase<PanamaClinicalDataSelectRow> {
            
            private global::System.Data.DataColumn columnRecId;
            
            private global::System.Data.DataColumn columnResultMainUID;
            
            private global::System.Data.DataColumn columnHeight;
            
            private global::System.Data.DataColumn columnWeight;
            
            private global::System.Data.DataColumn columnBMI;
            
            private global::System.Data.DataColumn columnOxygen;
            
            private global::System.Data.DataColumn columnHeartRate;
            
            private global::System.Data.DataColumn columnRespiratory;
            
            private global::System.Data.DataColumn columnBloodPressure;
            
            private global::System.Data.DataColumn columnDiatolic;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PanamaClinicalDataSelectDataTable() {
                this.TableName = "PanamaClinicalDataSelect";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PanamaClinicalDataSelectDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected PanamaClinicalDataSelectDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RecIdColumn {
                get {
                    return this.columnRecId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ResultMainUIDColumn {
                get {
                    return this.columnResultMainUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HeightColumn {
                get {
                    return this.columnHeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WeightColumn {
                get {
                    return this.columnWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BMIColumn {
                get {
                    return this.columnBMI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OxygenColumn {
                get {
                    return this.columnOxygen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HeartRateColumn {
                get {
                    return this.columnHeartRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RespiratoryColumn {
                get {
                    return this.columnRespiratory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BloodPressureColumn {
                get {
                    return this.columnBloodPressure;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DiatolicColumn {
                get {
                    return this.columnDiatolic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PanamaClinicalDataSelectRow this[int index] {
                get {
                    return ((PanamaClinicalDataSelectRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PanamaClinicalDataSelectRowChangeEventHandler PanamaClinicalDataSelectRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PanamaClinicalDataSelectRowChangeEventHandler PanamaClinicalDataSelectRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PanamaClinicalDataSelectRowChangeEventHandler PanamaClinicalDataSelectRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PanamaClinicalDataSelectRowChangeEventHandler PanamaClinicalDataSelectRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddPanamaClinicalDataSelectRow(PanamaClinicalDataSelectRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PanamaClinicalDataSelectRow AddPanamaClinicalDataSelectRow(string ResultMainUID, string Height, string Weight, string BMI, string Oxygen, string HeartRate, string Respiratory, string BloodPressure, string Diatolic) {
                PanamaClinicalDataSelectRow rowPanamaClinicalDataSelectRow = ((PanamaClinicalDataSelectRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ResultMainUID,
                        Height,
                        Weight,
                        BMI,
                        Oxygen,
                        HeartRate,
                        Respiratory,
                        BloodPressure,
                        Diatolic};
                rowPanamaClinicalDataSelectRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPanamaClinicalDataSelectRow);
                return rowPanamaClinicalDataSelectRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PanamaClinicalDataSelectDataTable cln = ((PanamaClinicalDataSelectDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PanamaClinicalDataSelectDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnRecId = base.Columns["RecId"];
                this.columnResultMainUID = base.Columns["ResultMainUID"];
                this.columnHeight = base.Columns["Height"];
                this.columnWeight = base.Columns["Weight"];
                this.columnBMI = base.Columns["BMI"];
                this.columnOxygen = base.Columns["Oxygen"];
                this.columnHeartRate = base.Columns["HeartRate"];
                this.columnRespiratory = base.Columns["Respiratory"];
                this.columnBloodPressure = base.Columns["BloodPressure"];
                this.columnDiatolic = base.Columns["Diatolic"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnRecId = new global::System.Data.DataColumn("RecId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecId);
                this.columnResultMainUID = new global::System.Data.DataColumn("ResultMainUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResultMainUID);
                this.columnHeight = new global::System.Data.DataColumn("Height", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeight);
                this.columnWeight = new global::System.Data.DataColumn("Weight", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeight);
                this.columnBMI = new global::System.Data.DataColumn("BMI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBMI);
                this.columnOxygen = new global::System.Data.DataColumn("Oxygen", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOxygen);
                this.columnHeartRate = new global::System.Data.DataColumn("HeartRate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeartRate);
                this.columnRespiratory = new global::System.Data.DataColumn("Respiratory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRespiratory);
                this.columnBloodPressure = new global::System.Data.DataColumn("BloodPressure", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBloodPressure);
                this.columnDiatolic = new global::System.Data.DataColumn("Diatolic", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiatolic);
                this.columnRecId.AutoIncrement = true;
                this.columnRecId.AutoIncrementSeed = -1;
                this.columnRecId.AutoIncrementStep = -1;
                this.columnRecId.AllowDBNull = false;
                this.columnRecId.ReadOnly = true;
                this.columnResultMainUID.AllowDBNull = false;
                this.columnResultMainUID.MaxLength = 100;
                this.columnHeight.MaxLength = 100;
                this.columnWeight.MaxLength = 100;
                this.columnBMI.MaxLength = 100;
                this.columnOxygen.MaxLength = 100;
                this.columnHeartRate.MaxLength = 100;
                this.columnRespiratory.MaxLength = 100;
                this.columnBloodPressure.MaxLength = 100;
                this.columnDiatolic.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PanamaClinicalDataSelectRow NewPanamaClinicalDataSelectRow() {
                return ((PanamaClinicalDataSelectRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PanamaClinicalDataSelectRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PanamaClinicalDataSelectRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PanamaClinicalDataSelectRowChanged != null)) {
                    this.PanamaClinicalDataSelectRowChanged(this, new PanamaClinicalDataSelectRowChangeEvent(((PanamaClinicalDataSelectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PanamaClinicalDataSelectRowChanging != null)) {
                    this.PanamaClinicalDataSelectRowChanging(this, new PanamaClinicalDataSelectRowChangeEvent(((PanamaClinicalDataSelectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PanamaClinicalDataSelectRowDeleted != null)) {
                    this.PanamaClinicalDataSelectRowDeleted(this, new PanamaClinicalDataSelectRowChangeEvent(((PanamaClinicalDataSelectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PanamaClinicalDataSelectRowDeleting != null)) {
                    this.PanamaClinicalDataSelectRowDeleting(this, new PanamaClinicalDataSelectRowChangeEvent(((PanamaClinicalDataSelectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovePanamaClinicalDataSelectRow(PanamaClinicalDataSelectRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetPanama ds = new DataSetPanama();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PanamaClinicalDataSelectDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PanamaPhysicalExplorationSelectDataTable : global::System.Data.TypedTableBase<PanamaPhysicalExplorationSelectRow> {
            
            private global::System.Data.DataColumn columnRecID;
            
            private global::System.Data.DataColumn columnHead;
            
            private global::System.Data.DataColumn columnMouth;
            
            private global::System.Data.DataColumn columnDental;
            
            private global::System.Data.DataColumn columnEars;
            
            private global::System.Data.DataColumn columnTympanic;
            
            private global::System.Data.DataColumn columnEyes;
            
            private global::System.Data.DataColumn columnPupils;
            
            private global::System.Data.DataColumn columnOfThalmoscopy;
            
            private global::System.Data.DataColumn columnEyeMovement;
            
            private global::System.Data.DataColumn columnLungs;
            
            private global::System.Data.DataColumn columnBreast;
            
            private global::System.Data.DataColumn columnHeart;
            
            private global::System.Data.DataColumn columnSkin;
            
            private global::System.Data.DataColumn columnVaricoseVenis;
            
            private global::System.Data.DataColumn columnVascular;
            
            private global::System.Data.DataColumn columnAbdomen;
            
            private global::System.Data.DataColumn columnHernias;
            
            private global::System.Data.DataColumn columnAnus;
            
            private global::System.Data.DataColumn columnGu;
            
            private global::System.Data.DataColumn columnUpper;
            
            private global::System.Data.DataColumn columnSpine;
            
            private global::System.Data.DataColumn columnNeurologic;
            
            private global::System.Data.DataColumn columnPsychiatric;
            
            private global::System.Data.DataColumn columnGeneralAppearance;
            
            private global::System.Data.DataColumn columnPhysicalExplorationComment1;
            
            private global::System.Data.DataColumn columnPhysicalExplorationComment2;
            
            private global::System.Data.DataColumn columnPhysicalExplorationComment3;
            
            private global::System.Data.DataColumn columnPhysicalExplorationComment4;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PanamaPhysicalExplorationSelectDataTable() {
                this.TableName = "PanamaPhysicalExplorationSelect";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PanamaPhysicalExplorationSelectDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected PanamaPhysicalExplorationSelectDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RecIDColumn {
                get {
                    return this.columnRecID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HeadColumn {
                get {
                    return this.columnHead;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MouthColumn {
                get {
                    return this.columnMouth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DentalColumn {
                get {
                    return this.columnDental;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EarsColumn {
                get {
                    return this.columnEars;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TympanicColumn {
                get {
                    return this.columnTympanic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EyesColumn {
                get {
                    return this.columnEyes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PupilsColumn {
                get {
                    return this.columnPupils;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OfThalmoscopyColumn {
                get {
                    return this.columnOfThalmoscopy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EyeMovementColumn {
                get {
                    return this.columnEyeMovement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LungsColumn {
                get {
                    return this.columnLungs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BreastColumn {
                get {
                    return this.columnBreast;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HeartColumn {
                get {
                    return this.columnHeart;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SkinColumn {
                get {
                    return this.columnSkin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VaricoseVenisColumn {
                get {
                    return this.columnVaricoseVenis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VascularColumn {
                get {
                    return this.columnVascular;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AbdomenColumn {
                get {
                    return this.columnAbdomen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HerniasColumn {
                get {
                    return this.columnHernias;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnusColumn {
                get {
                    return this.columnAnus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GuColumn {
                get {
                    return this.columnGu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpperColumn {
                get {
                    return this.columnUpper;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpineColumn {
                get {
                    return this.columnSpine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NeurologicColumn {
                get {
                    return this.columnNeurologic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PsychiatricColumn {
                get {
                    return this.columnPsychiatric;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GeneralAppearanceColumn {
                get {
                    return this.columnGeneralAppearance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhysicalExplorationComment1Column {
                get {
                    return this.columnPhysicalExplorationComment1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhysicalExplorationComment2Column {
                get {
                    return this.columnPhysicalExplorationComment2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhysicalExplorationComment3Column {
                get {
                    return this.columnPhysicalExplorationComment3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhysicalExplorationComment4Column {
                get {
                    return this.columnPhysicalExplorationComment4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PanamaPhysicalExplorationSelectRow this[int index] {
                get {
                    return ((PanamaPhysicalExplorationSelectRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PanamaPhysicalExplorationSelectRowChangeEventHandler PanamaPhysicalExplorationSelectRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PanamaPhysicalExplorationSelectRowChangeEventHandler PanamaPhysicalExplorationSelectRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PanamaPhysicalExplorationSelectRowChangeEventHandler PanamaPhysicalExplorationSelectRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PanamaPhysicalExplorationSelectRowChangeEventHandler PanamaPhysicalExplorationSelectRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddPanamaPhysicalExplorationSelectRow(PanamaPhysicalExplorationSelectRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PanamaPhysicalExplorationSelectRow AddPanamaPhysicalExplorationSelectRow(
                        string Head, 
                        string Mouth, 
                        string Dental, 
                        string Ears, 
                        string Tympanic, 
                        string Eyes, 
                        string Pupils, 
                        string OfThalmoscopy, 
                        string EyeMovement, 
                        string Lungs, 
                        string Breast, 
                        string Heart, 
                        string Skin, 
                        string VaricoseVenis, 
                        string Vascular, 
                        string Abdomen, 
                        string Hernias, 
                        string Anus, 
                        string Gu, 
                        string Upper, 
                        string Spine, 
                        string Neurologic, 
                        string Psychiatric, 
                        string GeneralAppearance, 
                        string PhysicalExplorationComment1, 
                        string PhysicalExplorationComment2, 
                        string PhysicalExplorationComment3, 
                        string PhysicalExplorationComment4) {
                PanamaPhysicalExplorationSelectRow rowPanamaPhysicalExplorationSelectRow = ((PanamaPhysicalExplorationSelectRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Head,
                        Mouth,
                        Dental,
                        Ears,
                        Tympanic,
                        Eyes,
                        Pupils,
                        OfThalmoscopy,
                        EyeMovement,
                        Lungs,
                        Breast,
                        Heart,
                        Skin,
                        VaricoseVenis,
                        Vascular,
                        Abdomen,
                        Hernias,
                        Anus,
                        Gu,
                        Upper,
                        Spine,
                        Neurologic,
                        Psychiatric,
                        GeneralAppearance,
                        PhysicalExplorationComment1,
                        PhysicalExplorationComment2,
                        PhysicalExplorationComment3,
                        PhysicalExplorationComment4};
                rowPanamaPhysicalExplorationSelectRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPanamaPhysicalExplorationSelectRow);
                return rowPanamaPhysicalExplorationSelectRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PanamaPhysicalExplorationSelectRow FindByRecID(long RecID) {
                return ((PanamaPhysicalExplorationSelectRow)(this.Rows.Find(new object[] {
                            RecID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PanamaPhysicalExplorationSelectDataTable cln = ((PanamaPhysicalExplorationSelectDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PanamaPhysicalExplorationSelectDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnRecID = base.Columns["RecID"];
                this.columnHead = base.Columns["Head"];
                this.columnMouth = base.Columns["Mouth"];
                this.columnDental = base.Columns["Dental"];
                this.columnEars = base.Columns["Ears"];
                this.columnTympanic = base.Columns["Tympanic"];
                this.columnEyes = base.Columns["Eyes"];
                this.columnPupils = base.Columns["Pupils"];
                this.columnOfThalmoscopy = base.Columns["OfThalmoscopy"];
                this.columnEyeMovement = base.Columns["EyeMovement"];
                this.columnLungs = base.Columns["Lungs"];
                this.columnBreast = base.Columns["Breast"];
                this.columnHeart = base.Columns["Heart"];
                this.columnSkin = base.Columns["Skin"];
                this.columnVaricoseVenis = base.Columns["VaricoseVenis"];
                this.columnVascular = base.Columns["Vascular"];
                this.columnAbdomen = base.Columns["Abdomen"];
                this.columnHernias = base.Columns["Hernias"];
                this.columnAnus = base.Columns["Anus"];
                this.columnGu = base.Columns["Gu"];
                this.columnUpper = base.Columns["Upper"];
                this.columnSpine = base.Columns["Spine"];
                this.columnNeurologic = base.Columns["Neurologic"];
                this.columnPsychiatric = base.Columns["Psychiatric"];
                this.columnGeneralAppearance = base.Columns["GeneralAppearance"];
                this.columnPhysicalExplorationComment1 = base.Columns["PhysicalExplorationComment1"];
                this.columnPhysicalExplorationComment2 = base.Columns["PhysicalExplorationComment2"];
                this.columnPhysicalExplorationComment3 = base.Columns["PhysicalExplorationComment3"];
                this.columnPhysicalExplorationComment4 = base.Columns["PhysicalExplorationComment4"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnRecID = new global::System.Data.DataColumn("RecID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecID);
                this.columnHead = new global::System.Data.DataColumn("Head", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHead);
                this.columnMouth = new global::System.Data.DataColumn("Mouth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMouth);
                this.columnDental = new global::System.Data.DataColumn("Dental", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDental);
                this.columnEars = new global::System.Data.DataColumn("Ears", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEars);
                this.columnTympanic = new global::System.Data.DataColumn("Tympanic", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTympanic);
                this.columnEyes = new global::System.Data.DataColumn("Eyes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEyes);
                this.columnPupils = new global::System.Data.DataColumn("Pupils", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPupils);
                this.columnOfThalmoscopy = new global::System.Data.DataColumn("OfThalmoscopy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfThalmoscopy);
                this.columnEyeMovement = new global::System.Data.DataColumn("EyeMovement", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEyeMovement);
                this.columnLungs = new global::System.Data.DataColumn("Lungs", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLungs);
                this.columnBreast = new global::System.Data.DataColumn("Breast", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBreast);
                this.columnHeart = new global::System.Data.DataColumn("Heart", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeart);
                this.columnSkin = new global::System.Data.DataColumn("Skin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSkin);
                this.columnVaricoseVenis = new global::System.Data.DataColumn("VaricoseVenis", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVaricoseVenis);
                this.columnVascular = new global::System.Data.DataColumn("Vascular", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVascular);
                this.columnAbdomen = new global::System.Data.DataColumn("Abdomen", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbdomen);
                this.columnHernias = new global::System.Data.DataColumn("Hernias", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHernias);
                this.columnAnus = new global::System.Data.DataColumn("Anus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnus);
                this.columnGu = new global::System.Data.DataColumn("Gu", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGu);
                this.columnUpper = new global::System.Data.DataColumn("Upper", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpper);
                this.columnSpine = new global::System.Data.DataColumn("Spine", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpine);
                this.columnNeurologic = new global::System.Data.DataColumn("Neurologic", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNeurologic);
                this.columnPsychiatric = new global::System.Data.DataColumn("Psychiatric", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPsychiatric);
                this.columnGeneralAppearance = new global::System.Data.DataColumn("GeneralAppearance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGeneralAppearance);
                this.columnPhysicalExplorationComment1 = new global::System.Data.DataColumn("PhysicalExplorationComment1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhysicalExplorationComment1);
                this.columnPhysicalExplorationComment2 = new global::System.Data.DataColumn("PhysicalExplorationComment2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhysicalExplorationComment2);
                this.columnPhysicalExplorationComment3 = new global::System.Data.DataColumn("PhysicalExplorationComment3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhysicalExplorationComment3);
                this.columnPhysicalExplorationComment4 = new global::System.Data.DataColumn("PhysicalExplorationComment4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhysicalExplorationComment4);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRecID}, true));
                this.columnRecID.AutoIncrement = true;
                this.columnRecID.AutoIncrementSeed = -1;
                this.columnRecID.AutoIncrementStep = -1;
                this.columnRecID.AllowDBNull = false;
                this.columnRecID.ReadOnly = true;
                this.columnRecID.Unique = true;
                this.columnHead.MaxLength = 20;
                this.columnMouth.MaxLength = 20;
                this.columnDental.MaxLength = 20;
                this.columnEars.MaxLength = 20;
                this.columnTympanic.MaxLength = 20;
                this.columnEyes.MaxLength = 20;
                this.columnPupils.MaxLength = 20;
                this.columnOfThalmoscopy.MaxLength = 20;
                this.columnEyeMovement.MaxLength = 20;
                this.columnLungs.MaxLength = 20;
                this.columnBreast.MaxLength = 20;
                this.columnHeart.MaxLength = 20;
                this.columnSkin.MaxLength = 20;
                this.columnVaricoseVenis.MaxLength = 20;
                this.columnVascular.MaxLength = 20;
                this.columnAbdomen.MaxLength = 20;
                this.columnHernias.MaxLength = 20;
                this.columnAnus.MaxLength = 20;
                this.columnGu.MaxLength = 20;
                this.columnUpper.MaxLength = 20;
                this.columnSpine.MaxLength = 20;
                this.columnNeurologic.MaxLength = 20;
                this.columnPsychiatric.MaxLength = 20;
                this.columnGeneralAppearance.MaxLength = 20;
                this.columnPhysicalExplorationComment1.MaxLength = 254;
                this.columnPhysicalExplorationComment2.MaxLength = 254;
                this.columnPhysicalExplorationComment3.MaxLength = 254;
                this.columnPhysicalExplorationComment4.MaxLength = 254;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PanamaPhysicalExplorationSelectRow NewPanamaPhysicalExplorationSelectRow() {
                return ((PanamaPhysicalExplorationSelectRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PanamaPhysicalExplorationSelectRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PanamaPhysicalExplorationSelectRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PanamaPhysicalExplorationSelectRowChanged != null)) {
                    this.PanamaPhysicalExplorationSelectRowChanged(this, new PanamaPhysicalExplorationSelectRowChangeEvent(((PanamaPhysicalExplorationSelectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PanamaPhysicalExplorationSelectRowChanging != null)) {
                    this.PanamaPhysicalExplorationSelectRowChanging(this, new PanamaPhysicalExplorationSelectRowChangeEvent(((PanamaPhysicalExplorationSelectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PanamaPhysicalExplorationSelectRowDeleted != null)) {
                    this.PanamaPhysicalExplorationSelectRowDeleted(this, new PanamaPhysicalExplorationSelectRowChangeEvent(((PanamaPhysicalExplorationSelectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PanamaPhysicalExplorationSelectRowDeleting != null)) {
                    this.PanamaPhysicalExplorationSelectRowDeleting(this, new PanamaPhysicalExplorationSelectRowChangeEvent(((PanamaPhysicalExplorationSelectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovePanamaPhysicalExplorationSelectRow(PanamaPhysicalExplorationSelectRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetPanama ds = new DataSetPanama();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PanamaPhysicalExplorationSelectDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PanamaDiagnosticTestSelectDataTable : global::System.Data.TypedTableBase<PanamaDiagnosticTestSelectRow> {
            
            private global::System.Data.DataColumn columnRecID;
            
            private global::System.Data.DataColumn columnResultMainUID;
            
            private global::System.Data.DataColumn columnHemogram;
            
            private global::System.Data.DataColumn columnHemogramNormal;
            
            private global::System.Data.DataColumn columnHemogramAbNormal;
            
            private global::System.Data.DataColumn columnHemogramOservation;
            
            private global::System.Data.DataColumn columnLipid;
            
            private global::System.Data.DataColumn columnLipidNormal;
            
            private global::System.Data.DataColumn columnLipidAbNormal;
            
            private global::System.Data.DataColumn columnLipidObservation;
            
            private global::System.Data.DataColumn columnCreatinine;
            
            private global::System.Data.DataColumn columnCreatinineNormal;
            
            private global::System.Data.DataColumn columnCreatinineAbnormal;
            
            private global::System.Data.DataColumn columnCreatinineObservation;
            
            private global::System.Data.DataColumn columnCholesterol;
            
            private global::System.Data.DataColumn columnCholesterolNormal;
            
            private global::System.Data.DataColumn columnCholesterolAbnormal;
            
            private global::System.Data.DataColumn columnCholesterolObservation;
            
            private global::System.Data.DataColumn columnTriglycerides;
            
            private global::System.Data.DataColumn columnTriglyceridesNormal;
            
            private global::System.Data.DataColumn columnTriglyceridesAbnormal;
            
            private global::System.Data.DataColumn columnTriglyceridesObservation;
            
            private global::System.Data.DataColumn columnGlucose;
            
            private global::System.Data.DataColumn columnGlucoseNormal;
            
            private global::System.Data.DataColumn columnGlucoseAbNormal;
            
            private global::System.Data.DataColumn columnGlucoseObservation;
            
            private global::System.Data.DataColumn columnNitrogen;
            
            private global::System.Data.DataColumn columnNitrogenNormal;
            
            private global::System.Data.DataColumn columnNitrogenAbnormal;
            
            private global::System.Data.DataColumn columnNitrogenObservation;
            
            private global::System.Data.DataColumn columnRhTyping;
            
            private global::System.Data.DataColumn columnRhTypingNormal;
            
            private global::System.Data.DataColumn columnRhTypingAbnormal;
            
            private global::System.Data.DataColumn columnRhTypingObservation;
            
            private global::System.Data.DataColumn columnHiv;
            
            private global::System.Data.DataColumn columnHivNormal;
            
            private global::System.Data.DataColumn columnHivAbnormal;
            
            private global::System.Data.DataColumn columnHivObservation;
            
            private global::System.Data.DataColumn columnVdrl;
            
            private global::System.Data.DataColumn columnVdrlNormal;
            
            private global::System.Data.DataColumn columnVdrlAbnormal;
            
            private global::System.Data.DataColumn columnVdrlObservation;
            
            private global::System.Data.DataColumn columnGch;
            
            private global::System.Data.DataColumn columnGchNormal;
            
            private global::System.Data.DataColumn columnGchAbnormal;
            
            private global::System.Data.DataColumn columnGchObservation;
            
            private global::System.Data.DataColumn columnGeneralUrien;
            
            private global::System.Data.DataColumn columnGeneralUrineNormal;
            
            private global::System.Data.DataColumn columnGeneralUrineAbNormal;
            
            private global::System.Data.DataColumn columnGeneralUrineObservation;
            
            private global::System.Data.DataColumn columnStool;
            
            private global::System.Data.DataColumn columnStoolNormal;
            
            private global::System.Data.DataColumn columnStoolAbNormal;
            
            private global::System.Data.DataColumn columnStoolObservation;
            
            private global::System.Data.DataColumn columnDrugtest;
            
            private global::System.Data.DataColumn columnDrugTestNormal;
            
            private global::System.Data.DataColumn columnDrugTestAbNormal;
            
            private global::System.Data.DataColumn columnDrugTestObservation;
            
            private global::System.Data.DataColumn columnAlcohol;
            
            private global::System.Data.DataColumn columnAlcoholNormal;
            
            private global::System.Data.DataColumn columnAlcoholAbNormal;
            
            private global::System.Data.DataColumn columnAlcoholObservation;
            
            private global::System.Data.DataColumn columnBreast;
            
            private global::System.Data.DataColumn columnBreastExaminationNormal;
            
            private global::System.Data.DataColumn columnBreastExaminationAbNormal;
            
            private global::System.Data.DataColumn columnBreastExaminationObservation;
            
            private global::System.Data.DataColumn columnPapTest;
            
            private global::System.Data.DataColumn columnPaptestJNormal;
            
            private global::System.Data.DataColumn columnPapAbnormal;
            
            private global::System.Data.DataColumn columnPapObservation;
            
            private global::System.Data.DataColumn columnPsa;
            
            private global::System.Data.DataColumn columnPsaNormal;
            
            private global::System.Data.DataColumn columnPsaAbNormal;
            
            private global::System.Data.DataColumn columnPsaObservation;
            
            private global::System.Data.DataColumn columnXray;
            
            private global::System.Data.DataColumn columnXrayDate;
            
            private global::System.Data.DataColumn columnXrayObservation;
            
            private global::System.Data.DataColumn columnEkg;
            
            private global::System.Data.DataColumn columnEkgDate;
            
            private global::System.Data.DataColumn columnEkgObservation;
            
            private global::System.Data.DataColumn columnSarsCovidByPcr;
            
            private global::System.Data.DataColumn columnSarsCovidByAntigens;
            
            private global::System.Data.DataColumn columnOtherTest;
            
            private global::System.Data.DataColumn columnOtherTestResult;
            
            private global::System.Data.DataColumn columnDiagnosticComment1;
            
            private global::System.Data.DataColumn columnDiagnosticComment2;
            
            private global::System.Data.DataColumn columnDiagnosticComment3;
            
            private global::System.Data.DataColumn columnDiagnosticComment4;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PanamaDiagnosticTestSelectDataTable() {
                this.TableName = "PanamaDiagnosticTestSelect";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PanamaDiagnosticTestSelectDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected PanamaDiagnosticTestSelectDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RecIDColumn {
                get {
                    return this.columnRecID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ResultMainUIDColumn {
                get {
                    return this.columnResultMainUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HemogramColumn {
                get {
                    return this.columnHemogram;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HemogramNormalColumn {
                get {
                    return this.columnHemogramNormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HemogramAbNormalColumn {
                get {
                    return this.columnHemogramAbNormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HemogramOservationColumn {
                get {
                    return this.columnHemogramOservation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LipidColumn {
                get {
                    return this.columnLipid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LipidNormalColumn {
                get {
                    return this.columnLipidNormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LipidAbNormalColumn {
                get {
                    return this.columnLipidAbNormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LipidObservationColumn {
                get {
                    return this.columnLipidObservation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreatinineColumn {
                get {
                    return this.columnCreatinine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreatinineNormalColumn {
                get {
                    return this.columnCreatinineNormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreatinineAbnormalColumn {
                get {
                    return this.columnCreatinineAbnormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreatinineObservationColumn {
                get {
                    return this.columnCreatinineObservation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CholesterolColumn {
                get {
                    return this.columnCholesterol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CholesterolNormalColumn {
                get {
                    return this.columnCholesterolNormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CholesterolAbnormalColumn {
                get {
                    return this.columnCholesterolAbnormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CholesterolObservationColumn {
                get {
                    return this.columnCholesterolObservation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TriglyceridesColumn {
                get {
                    return this.columnTriglycerides;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TriglyceridesNormalColumn {
                get {
                    return this.columnTriglyceridesNormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TriglyceridesAbnormalColumn {
                get {
                    return this.columnTriglyceridesAbnormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TriglyceridesObservationColumn {
                get {
                    return this.columnTriglyceridesObservation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GlucoseColumn {
                get {
                    return this.columnGlucose;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GlucoseNormalColumn {
                get {
                    return this.columnGlucoseNormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GlucoseAbNormalColumn {
                get {
                    return this.columnGlucoseAbNormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GlucoseObservationColumn {
                get {
                    return this.columnGlucoseObservation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NitrogenColumn {
                get {
                    return this.columnNitrogen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NitrogenNormalColumn {
                get {
                    return this.columnNitrogenNormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NitrogenAbnormalColumn {
                get {
                    return this.columnNitrogenAbnormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NitrogenObservationColumn {
                get {
                    return this.columnNitrogenObservation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RhTypingColumn {
                get {
                    return this.columnRhTyping;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RhTypingNormalColumn {
                get {
                    return this.columnRhTypingNormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RhTypingAbnormalColumn {
                get {
                    return this.columnRhTypingAbnormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RhTypingObservationColumn {
                get {
                    return this.columnRhTypingObservation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HivColumn {
                get {
                    return this.columnHiv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HivNormalColumn {
                get {
                    return this.columnHivNormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HivAbnormalColumn {
                get {
                    return this.columnHivAbnormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HivObservationColumn {
                get {
                    return this.columnHivObservation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VdrlColumn {
                get {
                    return this.columnVdrl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VdrlNormalColumn {
                get {
                    return this.columnVdrlNormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VdrlAbnormalColumn {
                get {
                    return this.columnVdrlAbnormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VdrlObservationColumn {
                get {
                    return this.columnVdrlObservation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GchColumn {
                get {
                    return this.columnGch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GchNormalColumn {
                get {
                    return this.columnGchNormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GchAbnormalColumn {
                get {
                    return this.columnGchAbnormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GchObservationColumn {
                get {
                    return this.columnGchObservation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GeneralUrienColumn {
                get {
                    return this.columnGeneralUrien;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GeneralUrineNormalColumn {
                get {
                    return this.columnGeneralUrineNormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GeneralUrineAbNormalColumn {
                get {
                    return this.columnGeneralUrineAbNormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GeneralUrineObservationColumn {
                get {
                    return this.columnGeneralUrineObservation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StoolColumn {
                get {
                    return this.columnStool;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StoolNormalColumn {
                get {
                    return this.columnStoolNormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StoolAbNormalColumn {
                get {
                    return this.columnStoolAbNormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StoolObservationColumn {
                get {
                    return this.columnStoolObservation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DrugtestColumn {
                get {
                    return this.columnDrugtest;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DrugTestNormalColumn {
                get {
                    return this.columnDrugTestNormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DrugTestAbNormalColumn {
                get {
                    return this.columnDrugTestAbNormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DrugTestObservationColumn {
                get {
                    return this.columnDrugTestObservation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AlcoholColumn {
                get {
                    return this.columnAlcohol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AlcoholNormalColumn {
                get {
                    return this.columnAlcoholNormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AlcoholAbNormalColumn {
                get {
                    return this.columnAlcoholAbNormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AlcoholObservationColumn {
                get {
                    return this.columnAlcoholObservation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BreastColumn {
                get {
                    return this.columnBreast;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BreastExaminationNormalColumn {
                get {
                    return this.columnBreastExaminationNormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BreastExaminationAbNormalColumn {
                get {
                    return this.columnBreastExaminationAbNormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BreastExaminationObservationColumn {
                get {
                    return this.columnBreastExaminationObservation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PapTestColumn {
                get {
                    return this.columnPapTest;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PaptestJNormalColumn {
                get {
                    return this.columnPaptestJNormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PapAbnormalColumn {
                get {
                    return this.columnPapAbnormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PapObservationColumn {
                get {
                    return this.columnPapObservation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PsaColumn {
                get {
                    return this.columnPsa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PsaNormalColumn {
                get {
                    return this.columnPsaNormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PsaAbNormalColumn {
                get {
                    return this.columnPsaAbNormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PsaObservationColumn {
                get {
                    return this.columnPsaObservation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn XrayColumn {
                get {
                    return this.columnXray;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn XrayDateColumn {
                get {
                    return this.columnXrayDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn XrayObservationColumn {
                get {
                    return this.columnXrayObservation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EkgColumn {
                get {
                    return this.columnEkg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EkgDateColumn {
                get {
                    return this.columnEkgDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EkgObservationColumn {
                get {
                    return this.columnEkgObservation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SarsCovidByPcrColumn {
                get {
                    return this.columnSarsCovidByPcr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SarsCovidByAntigensColumn {
                get {
                    return this.columnSarsCovidByAntigens;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherTestColumn {
                get {
                    return this.columnOtherTest;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherTestResultColumn {
                get {
                    return this.columnOtherTestResult;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DiagnosticComment1Column {
                get {
                    return this.columnDiagnosticComment1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DiagnosticComment2Column {
                get {
                    return this.columnDiagnosticComment2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DiagnosticComment3Column {
                get {
                    return this.columnDiagnosticComment3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DiagnosticComment4Column {
                get {
                    return this.columnDiagnosticComment4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PanamaDiagnosticTestSelectRow this[int index] {
                get {
                    return ((PanamaDiagnosticTestSelectRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PanamaDiagnosticTestSelectRowChangeEventHandler PanamaDiagnosticTestSelectRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PanamaDiagnosticTestSelectRowChangeEventHandler PanamaDiagnosticTestSelectRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PanamaDiagnosticTestSelectRowChangeEventHandler PanamaDiagnosticTestSelectRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PanamaDiagnosticTestSelectRowChangeEventHandler PanamaDiagnosticTestSelectRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddPanamaDiagnosticTestSelectRow(PanamaDiagnosticTestSelectRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PanamaDiagnosticTestSelectRow AddPanamaDiagnosticTestSelectRow(
                        string ResultMainUID, 
                        string Hemogram, 
                        string HemogramNormal, 
                        string HemogramAbNormal, 
                        string HemogramOservation, 
                        string Lipid, 
                        string LipidNormal, 
                        string LipidAbNormal, 
                        string LipidObservation, 
                        string Creatinine, 
                        string CreatinineNormal, 
                        string CreatinineAbnormal, 
                        string CreatinineObservation, 
                        string Cholesterol, 
                        string CholesterolNormal, 
                        string CholesterolAbnormal, 
                        string CholesterolObservation, 
                        string Triglycerides, 
                        string TriglyceridesNormal, 
                        string TriglyceridesAbnormal, 
                        string TriglyceridesObservation, 
                        string Glucose, 
                        string GlucoseNormal, 
                        string GlucoseAbNormal, 
                        string GlucoseObservation, 
                        string Nitrogen, 
                        string NitrogenNormal, 
                        string NitrogenAbnormal, 
                        string NitrogenObservation, 
                        string RhTyping, 
                        string RhTypingNormal, 
                        string RhTypingAbnormal, 
                        string RhTypingObservation, 
                        string Hiv, 
                        string HivNormal, 
                        string HivAbnormal, 
                        string HivObservation, 
                        string Vdrl, 
                        string VdrlNormal, 
                        string VdrlAbnormal, 
                        string VdrlObservation, 
                        string Gch, 
                        string GchNormal, 
                        string GchAbnormal, 
                        string GchObservation, 
                        string GeneralUrien, 
                        string GeneralUrineNormal, 
                        string GeneralUrineAbNormal, 
                        string GeneralUrineObservation, 
                        string Stool, 
                        string StoolNormal, 
                        string StoolAbNormal, 
                        string StoolObservation, 
                        string Drugtest, 
                        string DrugTestNormal, 
                        string DrugTestAbNormal, 
                        string DrugTestObservation, 
                        string Alcohol, 
                        string AlcoholNormal, 
                        string AlcoholAbNormal, 
                        string AlcoholObservation, 
                        string Breast, 
                        string BreastExaminationNormal, 
                        string BreastExaminationAbNormal, 
                        string BreastExaminationObservation, 
                        string PapTest, 
                        string PaptestJNormal, 
                        string PapAbnormal, 
                        string PapObservation, 
                        string Psa, 
                        string PsaNormal, 
                        string PsaAbNormal, 
                        string PsaObservation, 
                        string Xray, 
                        string XrayDate, 
                        string XrayObservation, 
                        string Ekg, 
                        string EkgDate, 
                        string EkgObservation, 
                        string SarsCovidByPcr, 
                        string SarsCovidByAntigens, 
                        string OtherTest, 
                        string OtherTestResult, 
                        string DiagnosticComment1, 
                        string DiagnosticComment2, 
                        string DiagnosticComment3, 
                        string DiagnosticComment4) {
                PanamaDiagnosticTestSelectRow rowPanamaDiagnosticTestSelectRow = ((PanamaDiagnosticTestSelectRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ResultMainUID,
                        Hemogram,
                        HemogramNormal,
                        HemogramAbNormal,
                        HemogramOservation,
                        Lipid,
                        LipidNormal,
                        LipidAbNormal,
                        LipidObservation,
                        Creatinine,
                        CreatinineNormal,
                        CreatinineAbnormal,
                        CreatinineObservation,
                        Cholesterol,
                        CholesterolNormal,
                        CholesterolAbnormal,
                        CholesterolObservation,
                        Triglycerides,
                        TriglyceridesNormal,
                        TriglyceridesAbnormal,
                        TriglyceridesObservation,
                        Glucose,
                        GlucoseNormal,
                        GlucoseAbNormal,
                        GlucoseObservation,
                        Nitrogen,
                        NitrogenNormal,
                        NitrogenAbnormal,
                        NitrogenObservation,
                        RhTyping,
                        RhTypingNormal,
                        RhTypingAbnormal,
                        RhTypingObservation,
                        Hiv,
                        HivNormal,
                        HivAbnormal,
                        HivObservation,
                        Vdrl,
                        VdrlNormal,
                        VdrlAbnormal,
                        VdrlObservation,
                        Gch,
                        GchNormal,
                        GchAbnormal,
                        GchObservation,
                        GeneralUrien,
                        GeneralUrineNormal,
                        GeneralUrineAbNormal,
                        GeneralUrineObservation,
                        Stool,
                        StoolNormal,
                        StoolAbNormal,
                        StoolObservation,
                        Drugtest,
                        DrugTestNormal,
                        DrugTestAbNormal,
                        DrugTestObservation,
                        Alcohol,
                        AlcoholNormal,
                        AlcoholAbNormal,
                        AlcoholObservation,
                        Breast,
                        BreastExaminationNormal,
                        BreastExaminationAbNormal,
                        BreastExaminationObservation,
                        PapTest,
                        PaptestJNormal,
                        PapAbnormal,
                        PapObservation,
                        Psa,
                        PsaNormal,
                        PsaAbNormal,
                        PsaObservation,
                        Xray,
                        XrayDate,
                        XrayObservation,
                        Ekg,
                        EkgDate,
                        EkgObservation,
                        SarsCovidByPcr,
                        SarsCovidByAntigens,
                        OtherTest,
                        OtherTestResult,
                        DiagnosticComment1,
                        DiagnosticComment2,
                        DiagnosticComment3,
                        DiagnosticComment4};
                rowPanamaDiagnosticTestSelectRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPanamaDiagnosticTestSelectRow);
                return rowPanamaDiagnosticTestSelectRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PanamaDiagnosticTestSelectRow FindByRecIDResultMainUID(long RecID, string ResultMainUID) {
                return ((PanamaDiagnosticTestSelectRow)(this.Rows.Find(new object[] {
                            RecID,
                            ResultMainUID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PanamaDiagnosticTestSelectDataTable cln = ((PanamaDiagnosticTestSelectDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PanamaDiagnosticTestSelectDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnRecID = base.Columns["RecID"];
                this.columnResultMainUID = base.Columns["ResultMainUID"];
                this.columnHemogram = base.Columns["Hemogram"];
                this.columnHemogramNormal = base.Columns["HemogramNormal"];
                this.columnHemogramAbNormal = base.Columns["HemogramAbNormal"];
                this.columnHemogramOservation = base.Columns["HemogramOservation"];
                this.columnLipid = base.Columns["Lipid"];
                this.columnLipidNormal = base.Columns["LipidNormal"];
                this.columnLipidAbNormal = base.Columns["LipidAbNormal"];
                this.columnLipidObservation = base.Columns["LipidObservation"];
                this.columnCreatinine = base.Columns["Creatinine"];
                this.columnCreatinineNormal = base.Columns["CreatinineNormal"];
                this.columnCreatinineAbnormal = base.Columns["CreatinineAbnormal"];
                this.columnCreatinineObservation = base.Columns["CreatinineObservation"];
                this.columnCholesterol = base.Columns["Cholesterol"];
                this.columnCholesterolNormal = base.Columns["CholesterolNormal"];
                this.columnCholesterolAbnormal = base.Columns["CholesterolAbnormal"];
                this.columnCholesterolObservation = base.Columns["CholesterolObservation"];
                this.columnTriglycerides = base.Columns["Triglycerides"];
                this.columnTriglyceridesNormal = base.Columns["TriglyceridesNormal"];
                this.columnTriglyceridesAbnormal = base.Columns["TriglyceridesAbnormal"];
                this.columnTriglyceridesObservation = base.Columns["TriglyceridesObservation"];
                this.columnGlucose = base.Columns["Glucose"];
                this.columnGlucoseNormal = base.Columns["GlucoseNormal"];
                this.columnGlucoseAbNormal = base.Columns["GlucoseAbNormal"];
                this.columnGlucoseObservation = base.Columns["GlucoseObservation"];
                this.columnNitrogen = base.Columns["Nitrogen"];
                this.columnNitrogenNormal = base.Columns["NitrogenNormal"];
                this.columnNitrogenAbnormal = base.Columns["NitrogenAbnormal"];
                this.columnNitrogenObservation = base.Columns["NitrogenObservation"];
                this.columnRhTyping = base.Columns["RhTyping"];
                this.columnRhTypingNormal = base.Columns["RhTypingNormal"];
                this.columnRhTypingAbnormal = base.Columns["RhTypingAbnormal"];
                this.columnRhTypingObservation = base.Columns["RhTypingObservation"];
                this.columnHiv = base.Columns["Hiv"];
                this.columnHivNormal = base.Columns["HivNormal"];
                this.columnHivAbnormal = base.Columns["HivAbnormal"];
                this.columnHivObservation = base.Columns["HivObservation"];
                this.columnVdrl = base.Columns["Vdrl"];
                this.columnVdrlNormal = base.Columns["VdrlNormal"];
                this.columnVdrlAbnormal = base.Columns["VdrlAbnormal"];
                this.columnVdrlObservation = base.Columns["VdrlObservation"];
                this.columnGch = base.Columns["Gch"];
                this.columnGchNormal = base.Columns["GchNormal"];
                this.columnGchAbnormal = base.Columns["GchAbnormal"];
                this.columnGchObservation = base.Columns["GchObservation"];
                this.columnGeneralUrien = base.Columns["GeneralUrien"];
                this.columnGeneralUrineNormal = base.Columns["GeneralUrineNormal"];
                this.columnGeneralUrineAbNormal = base.Columns["GeneralUrineAbNormal"];
                this.columnGeneralUrineObservation = base.Columns["GeneralUrineObservation"];
                this.columnStool = base.Columns["Stool"];
                this.columnStoolNormal = base.Columns["StoolNormal"];
                this.columnStoolAbNormal = base.Columns["StoolAbNormal"];
                this.columnStoolObservation = base.Columns["StoolObservation"];
                this.columnDrugtest = base.Columns["Drugtest"];
                this.columnDrugTestNormal = base.Columns["DrugTestNormal"];
                this.columnDrugTestAbNormal = base.Columns["DrugTestAbNormal"];
                this.columnDrugTestObservation = base.Columns["DrugTestObservation"];
                this.columnAlcohol = base.Columns["Alcohol"];
                this.columnAlcoholNormal = base.Columns["AlcoholNormal"];
                this.columnAlcoholAbNormal = base.Columns["AlcoholAbNormal"];
                this.columnAlcoholObservation = base.Columns["AlcoholObservation"];
                this.columnBreast = base.Columns["Breast"];
                this.columnBreastExaminationNormal = base.Columns["BreastExaminationNormal"];
                this.columnBreastExaminationAbNormal = base.Columns["BreastExaminationAbNormal"];
                this.columnBreastExaminationObservation = base.Columns["BreastExaminationObservation"];
                this.columnPapTest = base.Columns["PapTest"];
                this.columnPaptestJNormal = base.Columns["PaptestJNormal"];
                this.columnPapAbnormal = base.Columns["PapAbnormal"];
                this.columnPapObservation = base.Columns["PapObservation"];
                this.columnPsa = base.Columns["Psa"];
                this.columnPsaNormal = base.Columns["PsaNormal"];
                this.columnPsaAbNormal = base.Columns["PsaAbNormal"];
                this.columnPsaObservation = base.Columns["PsaObservation"];
                this.columnXray = base.Columns["Xray"];
                this.columnXrayDate = base.Columns["XrayDate"];
                this.columnXrayObservation = base.Columns["XrayObservation"];
                this.columnEkg = base.Columns["Ekg"];
                this.columnEkgDate = base.Columns["EkgDate"];
                this.columnEkgObservation = base.Columns["EkgObservation"];
                this.columnSarsCovidByPcr = base.Columns["SarsCovidByPcr"];
                this.columnSarsCovidByAntigens = base.Columns["SarsCovidByAntigens"];
                this.columnOtherTest = base.Columns["OtherTest"];
                this.columnOtherTestResult = base.Columns["OtherTestResult"];
                this.columnDiagnosticComment1 = base.Columns["DiagnosticComment1"];
                this.columnDiagnosticComment2 = base.Columns["DiagnosticComment2"];
                this.columnDiagnosticComment3 = base.Columns["DiagnosticComment3"];
                this.columnDiagnosticComment4 = base.Columns["DiagnosticComment4"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnRecID = new global::System.Data.DataColumn("RecID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecID);
                this.columnResultMainUID = new global::System.Data.DataColumn("ResultMainUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResultMainUID);
                this.columnHemogram = new global::System.Data.DataColumn("Hemogram", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHemogram);
                this.columnHemogramNormal = new global::System.Data.DataColumn("HemogramNormal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHemogramNormal);
                this.columnHemogramAbNormal = new global::System.Data.DataColumn("HemogramAbNormal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHemogramAbNormal);
                this.columnHemogramOservation = new global::System.Data.DataColumn("HemogramOservation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHemogramOservation);
                this.columnLipid = new global::System.Data.DataColumn("Lipid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLipid);
                this.columnLipidNormal = new global::System.Data.DataColumn("LipidNormal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLipidNormal);
                this.columnLipidAbNormal = new global::System.Data.DataColumn("LipidAbNormal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLipidAbNormal);
                this.columnLipidObservation = new global::System.Data.DataColumn("LipidObservation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLipidObservation);
                this.columnCreatinine = new global::System.Data.DataColumn("Creatinine", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatinine);
                this.columnCreatinineNormal = new global::System.Data.DataColumn("CreatinineNormal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatinineNormal);
                this.columnCreatinineAbnormal = new global::System.Data.DataColumn("CreatinineAbnormal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatinineAbnormal);
                this.columnCreatinineObservation = new global::System.Data.DataColumn("CreatinineObservation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatinineObservation);
                this.columnCholesterol = new global::System.Data.DataColumn("Cholesterol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCholesterol);
                this.columnCholesterolNormal = new global::System.Data.DataColumn("CholesterolNormal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCholesterolNormal);
                this.columnCholesterolAbnormal = new global::System.Data.DataColumn("CholesterolAbnormal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCholesterolAbnormal);
                this.columnCholesterolObservation = new global::System.Data.DataColumn("CholesterolObservation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCholesterolObservation);
                this.columnTriglycerides = new global::System.Data.DataColumn("Triglycerides", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTriglycerides);
                this.columnTriglyceridesNormal = new global::System.Data.DataColumn("TriglyceridesNormal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTriglyceridesNormal);
                this.columnTriglyceridesAbnormal = new global::System.Data.DataColumn("TriglyceridesAbnormal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTriglyceridesAbnormal);
                this.columnTriglyceridesObservation = new global::System.Data.DataColumn("TriglyceridesObservation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTriglyceridesObservation);
                this.columnGlucose = new global::System.Data.DataColumn("Glucose", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGlucose);
                this.columnGlucoseNormal = new global::System.Data.DataColumn("GlucoseNormal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGlucoseNormal);
                this.columnGlucoseAbNormal = new global::System.Data.DataColumn("GlucoseAbNormal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGlucoseAbNormal);
                this.columnGlucoseObservation = new global::System.Data.DataColumn("GlucoseObservation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGlucoseObservation);
                this.columnNitrogen = new global::System.Data.DataColumn("Nitrogen", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNitrogen);
                this.columnNitrogenNormal = new global::System.Data.DataColumn("NitrogenNormal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNitrogenNormal);
                this.columnNitrogenAbnormal = new global::System.Data.DataColumn("NitrogenAbnormal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNitrogenAbnormal);
                this.columnNitrogenObservation = new global::System.Data.DataColumn("NitrogenObservation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNitrogenObservation);
                this.columnRhTyping = new global::System.Data.DataColumn("RhTyping", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRhTyping);
                this.columnRhTypingNormal = new global::System.Data.DataColumn("RhTypingNormal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRhTypingNormal);
                this.columnRhTypingAbnormal = new global::System.Data.DataColumn("RhTypingAbnormal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRhTypingAbnormal);
                this.columnRhTypingObservation = new global::System.Data.DataColumn("RhTypingObservation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRhTypingObservation);
                this.columnHiv = new global::System.Data.DataColumn("Hiv", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHiv);
                this.columnHivNormal = new global::System.Data.DataColumn("HivNormal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHivNormal);
                this.columnHivAbnormal = new global::System.Data.DataColumn("HivAbnormal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHivAbnormal);
                this.columnHivObservation = new global::System.Data.DataColumn("HivObservation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHivObservation);
                this.columnVdrl = new global::System.Data.DataColumn("Vdrl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVdrl);
                this.columnVdrlNormal = new global::System.Data.DataColumn("VdrlNormal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVdrlNormal);
                this.columnVdrlAbnormal = new global::System.Data.DataColumn("VdrlAbnormal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVdrlAbnormal);
                this.columnVdrlObservation = new global::System.Data.DataColumn("VdrlObservation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVdrlObservation);
                this.columnGch = new global::System.Data.DataColumn("Gch", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGch);
                this.columnGchNormal = new global::System.Data.DataColumn("GchNormal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGchNormal);
                this.columnGchAbnormal = new global::System.Data.DataColumn("GchAbnormal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGchAbnormal);
                this.columnGchObservation = new global::System.Data.DataColumn("GchObservation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGchObservation);
                this.columnGeneralUrien = new global::System.Data.DataColumn("GeneralUrien", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGeneralUrien);
                this.columnGeneralUrineNormal = new global::System.Data.DataColumn("GeneralUrineNormal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGeneralUrineNormal);
                this.columnGeneralUrineAbNormal = new global::System.Data.DataColumn("GeneralUrineAbNormal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGeneralUrineAbNormal);
                this.columnGeneralUrineObservation = new global::System.Data.DataColumn("GeneralUrineObservation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGeneralUrineObservation);
                this.columnStool = new global::System.Data.DataColumn("Stool", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStool);
                this.columnStoolNormal = new global::System.Data.DataColumn("StoolNormal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStoolNormal);
                this.columnStoolAbNormal = new global::System.Data.DataColumn("StoolAbNormal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStoolAbNormal);
                this.columnStoolObservation = new global::System.Data.DataColumn("StoolObservation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStoolObservation);
                this.columnDrugtest = new global::System.Data.DataColumn("Drugtest", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrugtest);
                this.columnDrugTestNormal = new global::System.Data.DataColumn("DrugTestNormal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrugTestNormal);
                this.columnDrugTestAbNormal = new global::System.Data.DataColumn("DrugTestAbNormal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrugTestAbNormal);
                this.columnDrugTestObservation = new global::System.Data.DataColumn("DrugTestObservation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrugTestObservation);
                this.columnAlcohol = new global::System.Data.DataColumn("Alcohol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlcohol);
                this.columnAlcoholNormal = new global::System.Data.DataColumn("AlcoholNormal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlcoholNormal);
                this.columnAlcoholAbNormal = new global::System.Data.DataColumn("AlcoholAbNormal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlcoholAbNormal);
                this.columnAlcoholObservation = new global::System.Data.DataColumn("AlcoholObservation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlcoholObservation);
                this.columnBreast = new global::System.Data.DataColumn("Breast", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBreast);
                this.columnBreastExaminationNormal = new global::System.Data.DataColumn("BreastExaminationNormal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBreastExaminationNormal);
                this.columnBreastExaminationAbNormal = new global::System.Data.DataColumn("BreastExaminationAbNormal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBreastExaminationAbNormal);
                this.columnBreastExaminationObservation = new global::System.Data.DataColumn("BreastExaminationObservation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBreastExaminationObservation);
                this.columnPapTest = new global::System.Data.DataColumn("PapTest", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPapTest);
                this.columnPaptestJNormal = new global::System.Data.DataColumn("PaptestJNormal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaptestJNormal);
                this.columnPapAbnormal = new global::System.Data.DataColumn("PapAbnormal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPapAbnormal);
                this.columnPapObservation = new global::System.Data.DataColumn("PapObservation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPapObservation);
                this.columnPsa = new global::System.Data.DataColumn("Psa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPsa);
                this.columnPsaNormal = new global::System.Data.DataColumn("PsaNormal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPsaNormal);
                this.columnPsaAbNormal = new global::System.Data.DataColumn("PsaAbNormal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPsaAbNormal);
                this.columnPsaObservation = new global::System.Data.DataColumn("PsaObservation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPsaObservation);
                this.columnXray = new global::System.Data.DataColumn("Xray", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXray);
                this.columnXrayDate = new global::System.Data.DataColumn("XrayDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXrayDate);
                this.columnXrayObservation = new global::System.Data.DataColumn("XrayObservation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXrayObservation);
                this.columnEkg = new global::System.Data.DataColumn("Ekg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEkg);
                this.columnEkgDate = new global::System.Data.DataColumn("EkgDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEkgDate);
                this.columnEkgObservation = new global::System.Data.DataColumn("EkgObservation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEkgObservation);
                this.columnSarsCovidByPcr = new global::System.Data.DataColumn("SarsCovidByPcr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSarsCovidByPcr);
                this.columnSarsCovidByAntigens = new global::System.Data.DataColumn("SarsCovidByAntigens", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSarsCovidByAntigens);
                this.columnOtherTest = new global::System.Data.DataColumn("OtherTest", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherTest);
                this.columnOtherTestResult = new global::System.Data.DataColumn("OtherTestResult", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherTestResult);
                this.columnDiagnosticComment1 = new global::System.Data.DataColumn("DiagnosticComment1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiagnosticComment1);
                this.columnDiagnosticComment2 = new global::System.Data.DataColumn("DiagnosticComment2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiagnosticComment2);
                this.columnDiagnosticComment3 = new global::System.Data.DataColumn("DiagnosticComment3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiagnosticComment3);
                this.columnDiagnosticComment4 = new global::System.Data.DataColumn("DiagnosticComment4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiagnosticComment4);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRecID,
                                this.columnResultMainUID}, true));
                this.columnRecID.AutoIncrement = true;
                this.columnRecID.AutoIncrementSeed = -1;
                this.columnRecID.AutoIncrementStep = -1;
                this.columnRecID.AllowDBNull = false;
                this.columnRecID.ReadOnly = true;
                this.columnResultMainUID.AllowDBNull = false;
                this.columnResultMainUID.MaxLength = 100;
                this.columnHemogram.MaxLength = 20;
                this.columnHemogramNormal.MaxLength = 100;
                this.columnHemogramAbNormal.MaxLength = 100;
                this.columnHemogramOservation.MaxLength = 100;
                this.columnLipid.MaxLength = 20;
                this.columnLipidNormal.MaxLength = 100;
                this.columnLipidAbNormal.MaxLength = 100;
                this.columnLipidObservation.MaxLength = 100;
                this.columnCreatinine.MaxLength = 20;
                this.columnCreatinineNormal.MaxLength = 100;
                this.columnCreatinineAbnormal.MaxLength = 100;
                this.columnCreatinineObservation.MaxLength = 100;
                this.columnCholesterol.MaxLength = 20;
                this.columnCholesterolNormal.MaxLength = 100;
                this.columnCholesterolAbnormal.MaxLength = 100;
                this.columnCholesterolObservation.MaxLength = 100;
                this.columnTriglycerides.MaxLength = 20;
                this.columnTriglyceridesNormal.MaxLength = 100;
                this.columnTriglyceridesAbnormal.MaxLength = 100;
                this.columnTriglyceridesObservation.MaxLength = 100;
                this.columnGlucose.MaxLength = 20;
                this.columnGlucoseNormal.MaxLength = 100;
                this.columnGlucoseAbNormal.MaxLength = 100;
                this.columnGlucoseObservation.MaxLength = 100;
                this.columnNitrogen.MaxLength = 100;
                this.columnNitrogenNormal.MaxLength = 100;
                this.columnNitrogenAbnormal.MaxLength = 100;
                this.columnNitrogenObservation.MaxLength = 100;
                this.columnRhTyping.MaxLength = 20;
                this.columnRhTypingNormal.MaxLength = 100;
                this.columnRhTypingAbnormal.MaxLength = 100;
                this.columnRhTypingObservation.MaxLength = 100;
                this.columnHiv.MaxLength = 20;
                this.columnHivNormal.MaxLength = 100;
                this.columnHivAbnormal.MaxLength = 100;
                this.columnHivObservation.MaxLength = 100;
                this.columnVdrl.MaxLength = 20;
                this.columnVdrlNormal.MaxLength = 100;
                this.columnVdrlAbnormal.MaxLength = 100;
                this.columnVdrlObservation.MaxLength = 100;
                this.columnGch.MaxLength = 20;
                this.columnGchNormal.MaxLength = 100;
                this.columnGchAbnormal.MaxLength = 100;
                this.columnGchObservation.MaxLength = 100;
                this.columnGeneralUrien.MaxLength = 20;
                this.columnGeneralUrineNormal.MaxLength = 100;
                this.columnGeneralUrineAbNormal.MaxLength = 100;
                this.columnGeneralUrineObservation.MaxLength = 100;
                this.columnStool.MaxLength = 20;
                this.columnStoolNormal.MaxLength = 100;
                this.columnStoolAbNormal.MaxLength = 100;
                this.columnStoolObservation.MaxLength = 100;
                this.columnDrugtest.MaxLength = 20;
                this.columnDrugTestNormal.MaxLength = 100;
                this.columnDrugTestAbNormal.MaxLength = 100;
                this.columnDrugTestObservation.MaxLength = 100;
                this.columnAlcohol.MaxLength = 20;
                this.columnAlcoholNormal.MaxLength = 100;
                this.columnAlcoholAbNormal.MaxLength = 100;
                this.columnAlcoholObservation.MaxLength = 100;
                this.columnBreast.MaxLength = 20;
                this.columnBreastExaminationNormal.MaxLength = 100;
                this.columnBreastExaminationAbNormal.MaxLength = 100;
                this.columnBreastExaminationObservation.MaxLength = 100;
                this.columnPapTest.MaxLength = 20;
                this.columnPaptestJNormal.MaxLength = 100;
                this.columnPapAbnormal.MaxLength = 100;
                this.columnPapObservation.MaxLength = 100;
                this.columnPsa.MaxLength = 100;
                this.columnPsaNormal.MaxLength = 100;
                this.columnPsaAbNormal.MaxLength = 100;
                this.columnPsaObservation.MaxLength = 100;
                this.columnXray.MaxLength = 20;
                this.columnXrayDate.MaxLength = 100;
                this.columnXrayObservation.MaxLength = 100;
                this.columnEkg.MaxLength = 20;
                this.columnEkgDate.MaxLength = 100;
                this.columnEkgObservation.MaxLength = 100;
                this.columnSarsCovidByPcr.MaxLength = 100;
                this.columnSarsCovidByAntigens.MaxLength = 100;
                this.columnOtherTest.MaxLength = 100;
                this.columnOtherTestResult.MaxLength = 100;
                this.columnDiagnosticComment1.MaxLength = 254;
                this.columnDiagnosticComment2.MaxLength = 254;
                this.columnDiagnosticComment3.MaxLength = 254;
                this.columnDiagnosticComment4.MaxLength = 254;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PanamaDiagnosticTestSelectRow NewPanamaDiagnosticTestSelectRow() {
                return ((PanamaDiagnosticTestSelectRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PanamaDiagnosticTestSelectRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PanamaDiagnosticTestSelectRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PanamaDiagnosticTestSelectRowChanged != null)) {
                    this.PanamaDiagnosticTestSelectRowChanged(this, new PanamaDiagnosticTestSelectRowChangeEvent(((PanamaDiagnosticTestSelectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PanamaDiagnosticTestSelectRowChanging != null)) {
                    this.PanamaDiagnosticTestSelectRowChanging(this, new PanamaDiagnosticTestSelectRowChangeEvent(((PanamaDiagnosticTestSelectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PanamaDiagnosticTestSelectRowDeleted != null)) {
                    this.PanamaDiagnosticTestSelectRowDeleted(this, new PanamaDiagnosticTestSelectRowChangeEvent(((PanamaDiagnosticTestSelectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PanamaDiagnosticTestSelectRowDeleting != null)) {
                    this.PanamaDiagnosticTestSelectRowDeleting(this, new PanamaDiagnosticTestSelectRowChangeEvent(((PanamaDiagnosticTestSelectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovePanamaDiagnosticTestSelectRow(PanamaDiagnosticTestSelectRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetPanama ds = new DataSetPanama();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PanamaDiagnosticTestSelectDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PanamaResultMainSelectDataTable : global::System.Data.TypedTableBase<PanamaResultMainSelectRow> {
            
            private global::System.Data.DataColumn columnRecId;
            
            private global::System.Data.DataColumn columnResultId;
            
            private global::System.Data.DataColumn columnPapin;
            
            private global::System.Data.DataColumn columnFitForLookOut;
            
            private global::System.Data.DataColumn columnNonFitForLookOut;
            
            private global::System.Data.DataColumn columnDeckServiceFit;
            
            private global::System.Data.DataColumn columnEngineFit;
            
            private global::System.Data.DataColumn columnCateringFit;
            
            private global::System.Data.DataColumn columnOtherServiceFit;
            
            private global::System.Data.DataColumn columnDeckServiceUnFit;
            
            private global::System.Data.DataColumn columnEngineUnFit;
            
            private global::System.Data.DataColumn columnCateringUnFit;
            
            private global::System.Data.DataColumn columnOtherUnFit;
            
            private global::System.Data.DataColumn columnWithOutRestrictions;
            
            private global::System.Data.DataColumn columncbVisualAidRequiredYes;
            
            private global::System.Data.DataColumn columncbVisualAidRequiredNo;
            
            private global::System.Data.DataColumn columnassessmentComment1;
            
            private global::System.Data.DataColumn columnMedicalCertificateExpiration;
            
            private global::System.Data.DataColumn columnMedicalCertificateIssued;
            
            private global::System.Data.DataColumn columnNumberOfMedicalCertificate;
            
            private global::System.Data.DataColumn columnPhysicianName;
            
            private global::System.Data.DataColumn columnWithRestrictions;
            
            private global::System.Data.DataColumn columnassessmentComment2;
            
            private global::System.Data.DataColumn columnassessmentComment3;
            
            private global::System.Data.DataColumn columnassessmentComment4;
            
            private global::System.Data.DataColumn columnassessmentComment5;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PanamaResultMainSelectDataTable() {
                this.TableName = "PanamaResultMainSelect";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PanamaResultMainSelectDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected PanamaResultMainSelectDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RecIdColumn {
                get {
                    return this.columnRecId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ResultIdColumn {
                get {
                    return this.columnResultId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PapinColumn {
                get {
                    return this.columnPapin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FitForLookOutColumn {
                get {
                    return this.columnFitForLookOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NonFitForLookOutColumn {
                get {
                    return this.columnNonFitForLookOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeckServiceFitColumn {
                get {
                    return this.columnDeckServiceFit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EngineFitColumn {
                get {
                    return this.columnEngineFit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CateringFitColumn {
                get {
                    return this.columnCateringFit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherServiceFitColumn {
                get {
                    return this.columnOtherServiceFit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeckServiceUnFitColumn {
                get {
                    return this.columnDeckServiceUnFit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EngineUnFitColumn {
                get {
                    return this.columnEngineUnFit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CateringUnFitColumn {
                get {
                    return this.columnCateringUnFit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherUnFitColumn {
                get {
                    return this.columnOtherUnFit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WithOutRestrictionsColumn {
                get {
                    return this.columnWithOutRestrictions;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cbVisualAidRequiredYesColumn {
                get {
                    return this.columncbVisualAidRequiredYes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cbVisualAidRequiredNoColumn {
                get {
                    return this.columncbVisualAidRequiredNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn assessmentComment1Column {
                get {
                    return this.columnassessmentComment1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MedicalCertificateExpirationColumn {
                get {
                    return this.columnMedicalCertificateExpiration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MedicalCertificateIssuedColumn {
                get {
                    return this.columnMedicalCertificateIssued;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumberOfMedicalCertificateColumn {
                get {
                    return this.columnNumberOfMedicalCertificate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhysicianNameColumn {
                get {
                    return this.columnPhysicianName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WithRestrictionsColumn {
                get {
                    return this.columnWithRestrictions;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn assessmentComment2Column {
                get {
                    return this.columnassessmentComment2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn assessmentComment3Column {
                get {
                    return this.columnassessmentComment3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn assessmentComment4Column {
                get {
                    return this.columnassessmentComment4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn assessmentComment5Column {
                get {
                    return this.columnassessmentComment5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PanamaResultMainSelectRow this[int index] {
                get {
                    return ((PanamaResultMainSelectRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PanamaResultMainSelectRowChangeEventHandler PanamaResultMainSelectRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PanamaResultMainSelectRowChangeEventHandler PanamaResultMainSelectRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PanamaResultMainSelectRowChangeEventHandler PanamaResultMainSelectRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PanamaResultMainSelectRowChangeEventHandler PanamaResultMainSelectRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddPanamaResultMainSelectRow(PanamaResultMainSelectRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PanamaResultMainSelectRow AddPanamaResultMainSelectRow(
                        string ResultId, 
                        string Papin, 
                        string FitForLookOut, 
                        string NonFitForLookOut, 
                        string DeckServiceFit, 
                        string EngineFit, 
                        string CateringFit, 
                        string OtherServiceFit, 
                        string DeckServiceUnFit, 
                        string EngineUnFit, 
                        string CateringUnFit, 
                        string OtherUnFit, 
                        string WithOutRestrictions, 
                        string cbVisualAidRequiredYes, 
                        string cbVisualAidRequiredNo, 
                        string assessmentComment1, 
                        string MedicalCertificateExpiration, 
                        string MedicalCertificateIssued, 
                        string NumberOfMedicalCertificate, 
                        string PhysicianName, 
                        string WithRestrictions, 
                        string assessmentComment2, 
                        string assessmentComment3, 
                        string assessmentComment4, 
                        string assessmentComment5) {
                PanamaResultMainSelectRow rowPanamaResultMainSelectRow = ((PanamaResultMainSelectRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ResultId,
                        Papin,
                        FitForLookOut,
                        NonFitForLookOut,
                        DeckServiceFit,
                        EngineFit,
                        CateringFit,
                        OtherServiceFit,
                        DeckServiceUnFit,
                        EngineUnFit,
                        CateringUnFit,
                        OtherUnFit,
                        WithOutRestrictions,
                        cbVisualAidRequiredYes,
                        cbVisualAidRequiredNo,
                        assessmentComment1,
                        MedicalCertificateExpiration,
                        MedicalCertificateIssued,
                        NumberOfMedicalCertificate,
                        PhysicianName,
                        WithRestrictions,
                        assessmentComment2,
                        assessmentComment3,
                        assessmentComment4,
                        assessmentComment5};
                rowPanamaResultMainSelectRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPanamaResultMainSelectRow);
                return rowPanamaResultMainSelectRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PanamaResultMainSelectRow FindByRecIdResultId(long RecId, string ResultId) {
                return ((PanamaResultMainSelectRow)(this.Rows.Find(new object[] {
                            RecId,
                            ResultId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PanamaResultMainSelectDataTable cln = ((PanamaResultMainSelectDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PanamaResultMainSelectDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnRecId = base.Columns["RecId"];
                this.columnResultId = base.Columns["ResultId"];
                this.columnPapin = base.Columns["Papin"];
                this.columnFitForLookOut = base.Columns["FitForLookOut"];
                this.columnNonFitForLookOut = base.Columns["NonFitForLookOut"];
                this.columnDeckServiceFit = base.Columns["DeckServiceFit"];
                this.columnEngineFit = base.Columns["EngineFit"];
                this.columnCateringFit = base.Columns["CateringFit"];
                this.columnOtherServiceFit = base.Columns["OtherServiceFit"];
                this.columnDeckServiceUnFit = base.Columns["DeckServiceUnFit"];
                this.columnEngineUnFit = base.Columns["EngineUnFit"];
                this.columnCateringUnFit = base.Columns["CateringUnFit"];
                this.columnOtherUnFit = base.Columns["OtherUnFit"];
                this.columnWithOutRestrictions = base.Columns["WithOutRestrictions"];
                this.columncbVisualAidRequiredYes = base.Columns["cbVisualAidRequiredYes"];
                this.columncbVisualAidRequiredNo = base.Columns["cbVisualAidRequiredNo"];
                this.columnassessmentComment1 = base.Columns["assessmentComment1"];
                this.columnMedicalCertificateExpiration = base.Columns["MedicalCertificateExpiration"];
                this.columnMedicalCertificateIssued = base.Columns["MedicalCertificateIssued"];
                this.columnNumberOfMedicalCertificate = base.Columns["NumberOfMedicalCertificate"];
                this.columnPhysicianName = base.Columns["PhysicianName"];
                this.columnWithRestrictions = base.Columns["WithRestrictions"];
                this.columnassessmentComment2 = base.Columns["assessmentComment2"];
                this.columnassessmentComment3 = base.Columns["assessmentComment3"];
                this.columnassessmentComment4 = base.Columns["assessmentComment4"];
                this.columnassessmentComment5 = base.Columns["assessmentComment5"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnRecId = new global::System.Data.DataColumn("RecId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecId);
                this.columnResultId = new global::System.Data.DataColumn("ResultId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResultId);
                this.columnPapin = new global::System.Data.DataColumn("Papin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPapin);
                this.columnFitForLookOut = new global::System.Data.DataColumn("FitForLookOut", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFitForLookOut);
                this.columnNonFitForLookOut = new global::System.Data.DataColumn("NonFitForLookOut", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNonFitForLookOut);
                this.columnDeckServiceFit = new global::System.Data.DataColumn("DeckServiceFit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeckServiceFit);
                this.columnEngineFit = new global::System.Data.DataColumn("EngineFit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEngineFit);
                this.columnCateringFit = new global::System.Data.DataColumn("CateringFit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCateringFit);
                this.columnOtherServiceFit = new global::System.Data.DataColumn("OtherServiceFit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherServiceFit);
                this.columnDeckServiceUnFit = new global::System.Data.DataColumn("DeckServiceUnFit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeckServiceUnFit);
                this.columnEngineUnFit = new global::System.Data.DataColumn("EngineUnFit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEngineUnFit);
                this.columnCateringUnFit = new global::System.Data.DataColumn("CateringUnFit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCateringUnFit);
                this.columnOtherUnFit = new global::System.Data.DataColumn("OtherUnFit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherUnFit);
                this.columnWithOutRestrictions = new global::System.Data.DataColumn("WithOutRestrictions", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWithOutRestrictions);
                this.columncbVisualAidRequiredYes = new global::System.Data.DataColumn("cbVisualAidRequiredYes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncbVisualAidRequiredYes);
                this.columncbVisualAidRequiredNo = new global::System.Data.DataColumn("cbVisualAidRequiredNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncbVisualAidRequiredNo);
                this.columnassessmentComment1 = new global::System.Data.DataColumn("assessmentComment1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnassessmentComment1);
                this.columnMedicalCertificateExpiration = new global::System.Data.DataColumn("MedicalCertificateExpiration", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMedicalCertificateExpiration);
                this.columnMedicalCertificateIssued = new global::System.Data.DataColumn("MedicalCertificateIssued", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMedicalCertificateIssued);
                this.columnNumberOfMedicalCertificate = new global::System.Data.DataColumn("NumberOfMedicalCertificate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberOfMedicalCertificate);
                this.columnPhysicianName = new global::System.Data.DataColumn("PhysicianName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhysicianName);
                this.columnWithRestrictions = new global::System.Data.DataColumn("WithRestrictions", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWithRestrictions);
                this.columnassessmentComment2 = new global::System.Data.DataColumn("assessmentComment2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnassessmentComment2);
                this.columnassessmentComment3 = new global::System.Data.DataColumn("assessmentComment3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnassessmentComment3);
                this.columnassessmentComment4 = new global::System.Data.DataColumn("assessmentComment4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnassessmentComment4);
                this.columnassessmentComment5 = new global::System.Data.DataColumn("assessmentComment5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnassessmentComment5);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRecId,
                                this.columnResultId}, true));
                this.columnRecId.AutoIncrement = true;
                this.columnRecId.AutoIncrementSeed = -1;
                this.columnRecId.AutoIncrementStep = -1;
                this.columnRecId.AllowDBNull = false;
                this.columnRecId.ReadOnly = true;
                this.columnResultId.AllowDBNull = false;
                this.columnResultId.MaxLength = 1000;
                this.columnPapin.MaxLength = 100;
                this.columnFitForLookOut.MaxLength = 20;
                this.columnNonFitForLookOut.MaxLength = 20;
                this.columnDeckServiceFit.MaxLength = 20;
                this.columnEngineFit.MaxLength = 20;
                this.columnCateringFit.MaxLength = 20;
                this.columnOtherServiceFit.MaxLength = 20;
                this.columnDeckServiceUnFit.MaxLength = 20;
                this.columnEngineUnFit.MaxLength = 20;
                this.columnCateringUnFit.MaxLength = 20;
                this.columnOtherUnFit.MaxLength = 20;
                this.columnWithOutRestrictions.MaxLength = 20;
                this.columncbVisualAidRequiredYes.MaxLength = 20;
                this.columncbVisualAidRequiredNo.MaxLength = 20;
                this.columnassessmentComment1.MaxLength = 20;
                this.columnMedicalCertificateExpiration.MaxLength = 100;
                this.columnMedicalCertificateIssued.MaxLength = 100;
                this.columnNumberOfMedicalCertificate.MaxLength = 20;
                this.columnPhysicianName.MaxLength = 100;
                this.columnWithRestrictions.MaxLength = 20;
                this.columnassessmentComment2.MaxLength = 254;
                this.columnassessmentComment3.MaxLength = 254;
                this.columnassessmentComment4.MaxLength = 254;
                this.columnassessmentComment5.MaxLength = 254;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PanamaResultMainSelectRow NewPanamaResultMainSelectRow() {
                return ((PanamaResultMainSelectRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PanamaResultMainSelectRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PanamaResultMainSelectRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PanamaResultMainSelectRowChanged != null)) {
                    this.PanamaResultMainSelectRowChanged(this, new PanamaResultMainSelectRowChangeEvent(((PanamaResultMainSelectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PanamaResultMainSelectRowChanging != null)) {
                    this.PanamaResultMainSelectRowChanging(this, new PanamaResultMainSelectRowChangeEvent(((PanamaResultMainSelectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PanamaResultMainSelectRowDeleted != null)) {
                    this.PanamaResultMainSelectRowDeleted(this, new PanamaResultMainSelectRowChangeEvent(((PanamaResultMainSelectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PanamaResultMainSelectRowDeleting != null)) {
                    this.PanamaResultMainSelectRowDeleting(this, new PanamaResultMainSelectRowChangeEvent(((PanamaResultMainSelectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovePanamaResultMainSelectRow(PanamaResultMainSelectRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetPanama ds = new DataSetPanama();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PanamaResultMainSelectDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Panama_patientRow : global::System.Data.DataRow {
            
            private Panama_patientDataTable tablePanama_patient;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Panama_patientRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePanama_patient = ((Panama_patientDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string papin {
                get {
                    try {
                        return ((string)(this[this.tablePanama_patient.papinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'papin\' in table \'Panama_patient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanama_patient.papinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Fullname {
                get {
                    try {
                        return ((string)(this[this.tablePanama_patient.FullnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fullname\' in table \'Panama_patient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanama_patient.FullnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HomeAddress {
                get {
                    try {
                        return ((string)(this[this.tablePanama_patient.HomeAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HomeAddress\' in table \'Panama_patient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanama_patient.HomeAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Department {
                get {
                    try {
                        return ((string)(this[this.tablePanama_patient.DepartmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Department\' in table \'Panama_patient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanama_patient.DepartmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string position {
                get {
                    try {
                        return ((string)(this[this.tablePanama_patient.positionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'position\' in table \'Panama_patient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanama_patient.positionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string gender {
                get {
                    try {
                        return ((string)(this[this.tablePanama_patient.genderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'gender\' in table \'Panama_patient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanama_patient.genderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string birthdate {
                get {
                    try {
                        return ((string)(this[this.tablePanama_patient.birthdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'birthdate\' in table \'Panama_patient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanama_patient.birthdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PassportSeamanBookNo {
                get {
                    try {
                        return ((string)(this[this.tablePanama_patient.PassportSeamanBookNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PassportSeamanBookNo\' in table \'Panama_patient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanama_patient.PassportSeamanBookNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RhTyping {
                get {
                    try {
                        return ((string)(this[this.tablePanama_patient.RhTypingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RhTyping\' in table \'Panama_patient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanama_patient.RhTypingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LookOutDuties {
                get {
                    try {
                        return ((string)(this[this.tablePanama_patient.LookOutDutiesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LookOutDuties\' in table \'Panama_patient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanama_patient.LookOutDutiesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EmergencyDuties {
                get {
                    try {
                        return ((string)(this[this.tablePanama_patient.EmergencyDutiesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmergencyDuties\' in table \'Panama_patient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanama_patient.EmergencyDutiesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TypeOfShip {
                get {
                    try {
                        return ((string)(this[this.tablePanama_patient.TypeOfShipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TypeOfShip\' in table \'Panama_patient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanama_patient.TypeOfShipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TradeArea {
                get {
                    try {
                        return ((string)(this[this.tablePanama_patient.TradeAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TradeArea\' in table \'Panama_patient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanama_patient.TradeAreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string specimen_no {
                get {
                    try {
                        return ((string)(this[this.tablePanama_patient.specimen_noColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'specimen_no\' in table \'Panama_patient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanama_patient.specimen_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string fitness_date {
                get {
                    try {
                        return ((string)(this[this.tablePanama_patient.fitness_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fitness_date\' in table \'Panama_patient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanama_patient.fitness_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string pathologist {
                get {
                    try {
                        return ((string)(this[this.tablePanama_patient.pathologistColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pathologist\' in table \'Panama_patient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanama_patient.pathologistColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string valid_until {
                get {
                    try {
                        return ((string)(this[this.tablePanama_patient.valid_untilColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'valid_until\' in table \'Panama_patient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanama_patient.valid_untilColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string resultid {
                get {
                    try {
                        return ((string)(this[this.tablePanama_patient.resultidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'resultid\' in table \'Panama_patient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanama_patient.resultidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspapinNull() {
                return this.IsNull(this.tablePanama_patient.papinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpapinNull() {
                this[this.tablePanama_patient.papinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFullnameNull() {
                return this.IsNull(this.tablePanama_patient.FullnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFullnameNull() {
                this[this.tablePanama_patient.FullnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHomeAddressNull() {
                return this.IsNull(this.tablePanama_patient.HomeAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHomeAddressNull() {
                this[this.tablePanama_patient.HomeAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDepartmentNull() {
                return this.IsNull(this.tablePanama_patient.DepartmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDepartmentNull() {
                this[this.tablePanama_patient.DepartmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspositionNull() {
                return this.IsNull(this.tablePanama_patient.positionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpositionNull() {
                this[this.tablePanama_patient.positionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsgenderNull() {
                return this.IsNull(this.tablePanama_patient.genderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetgenderNull() {
                this[this.tablePanama_patient.genderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsbirthdateNull() {
                return this.IsNull(this.tablePanama_patient.birthdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetbirthdateNull() {
                this[this.tablePanama_patient.birthdateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPassportSeamanBookNoNull() {
                return this.IsNull(this.tablePanama_patient.PassportSeamanBookNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPassportSeamanBookNoNull() {
                this[this.tablePanama_patient.PassportSeamanBookNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRhTypingNull() {
                return this.IsNull(this.tablePanama_patient.RhTypingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRhTypingNull() {
                this[this.tablePanama_patient.RhTypingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLookOutDutiesNull() {
                return this.IsNull(this.tablePanama_patient.LookOutDutiesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLookOutDutiesNull() {
                this[this.tablePanama_patient.LookOutDutiesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEmergencyDutiesNull() {
                return this.IsNull(this.tablePanama_patient.EmergencyDutiesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEmergencyDutiesNull() {
                this[this.tablePanama_patient.EmergencyDutiesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTypeOfShipNull() {
                return this.IsNull(this.tablePanama_patient.TypeOfShipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTypeOfShipNull() {
                this[this.tablePanama_patient.TypeOfShipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTradeAreaNull() {
                return this.IsNull(this.tablePanama_patient.TradeAreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTradeAreaNull() {
                this[this.tablePanama_patient.TradeAreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isspecimen_noNull() {
                return this.IsNull(this.tablePanama_patient.specimen_noColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setspecimen_noNull() {
                this[this.tablePanama_patient.specimen_noColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isfitness_dateNull() {
                return this.IsNull(this.tablePanama_patient.fitness_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setfitness_dateNull() {
                this[this.tablePanama_patient.fitness_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspathologistNull() {
                return this.IsNull(this.tablePanama_patient.pathologistColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpathologistNull() {
                this[this.tablePanama_patient.pathologistColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isvalid_untilNull() {
                return this.IsNull(this.tablePanama_patient.valid_untilColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setvalid_untilNull() {
                this[this.tablePanama_patient.valid_untilColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsresultidNull() {
                return this.IsNull(this.tablePanama_patient.resultidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetresultidNull() {
                this[this.tablePanama_patient.resultidColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PanamaExamineePersonalDeclarationSelectRow : global::System.Data.DataRow {
            
            private PanamaExamineePersonalDeclarationSelectDataTable tablePanamaExamineePersonalDeclarationSelect;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PanamaExamineePersonalDeclarationSelectRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePanamaExamineePersonalDeclarationSelect = ((PanamaExamineePersonalDeclarationSelectDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RecId {
                get {
                    return ((int)(this[this.tablePanamaExamineePersonalDeclarationSelect.RecIdColumn]));
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.RecIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HighBloodPressure {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.HighBloodPressureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HighBloodPressure\' in table \'PanamaExamineePersonalDeclarat" +
                                "ionSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.HighBloodPressureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Eyeproblem {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.EyeproblemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Eyeproblem\' in table \'PanamaExamineePersonalDeclarationSele" +
                                "ct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.EyeproblemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EarNoseThroat {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.EarNoseThroatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EarNoseThroat\' in table \'PanamaExamineePersonalDeclarationS" +
                                "elect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.EarNoseThroatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HeartSurgery {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.HeartSurgeryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HeartSurgery\' in table \'PanamaExamineePersonalDeclarationSe" +
                                "lect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.HeartSurgeryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Varicoseveins {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.VaricoseveinsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Varicoseveins\' in table \'PanamaExamineePersonalDeclarationS" +
                                "elect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.VaricoseveinsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AsthmaBronchitis {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.AsthmaBronchitisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AsthmaBronchitis\' in table \'PanamaExamineePersonalDeclarati" +
                                "onSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.AsthmaBronchitisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BloodDisorder {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.BloodDisorderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BloodDisorder\' in table \'PanamaExamineePersonalDeclarationS" +
                                "elect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.BloodDisorderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Diabetes {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.DiabetesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Diabetes\' in table \'PanamaExamineePersonalDeclarationSelect" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.DiabetesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ThyroidProblem {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.ThyroidProblemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ThyroidProblem\' in table \'PanamaExamineePersonalDeclaration" +
                                "Select\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.ThyroidProblemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DigestiveDisorders {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.DigestiveDisordersColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DigestiveDisorders\' in table \'PanamaExamineePersonalDeclara" +
                                "tionSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.DigestiveDisordersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KidneyDisorders {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.KidneyDisordersColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KidneyDisorders\' in table \'PanamaExamineePersonalDeclaratio" +
                                "nSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.KidneyDisordersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SkinProblem {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.SkinProblemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SkinProblem\' in table \'PanamaExamineePersonalDeclarationSel" +
                                "ect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.SkinProblemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Allergies {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.AllergiesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Allergies\' in table \'PanamaExamineePersonalDeclarationSelec" +
                                "t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.AllergiesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Epilipsy {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.EpilipsyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Epilipsy\' in table \'PanamaExamineePersonalDeclarationSelect" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.EpilipsyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SickleCell {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.SickleCellColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SickleCell\' in table \'PanamaExamineePersonalDeclarationSele" +
                                "ct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.SickleCellColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Herinas {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.HerinasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Herinas\' in table \'PanamaExamineePersonalDeclarationSelect\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.HerinasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GenitalDisorders {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.GenitalDisordersColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GenitalDisorders\' in table \'PanamaExamineePersonalDeclarati" +
                                "onSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.GenitalDisordersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Pregnancy {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.PregnancyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pregnancy\' in table \'PanamaExamineePersonalDeclarationSelec" +
                                "t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.PregnancyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Sleepproblem {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.SleepproblemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sleepproblem\' in table \'PanamaExamineePersonalDeclarationSe" +
                                "lect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.SleepproblemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DoyouSmoke {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.DoyouSmokeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DoyouSmoke\' in table \'PanamaExamineePersonalDeclarationSele" +
                                "ct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.DoyouSmokeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Surgeries {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.SurgeriesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Surgeries\' in table \'PanamaExamineePersonalDeclarationSelec" +
                                "t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.SurgeriesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Infectious {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.InfectiousColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Infectious\' in table \'PanamaExamineePersonalDeclarationSele" +
                                "ct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.InfectiousColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DizzinessFainting {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.DizzinessFaintingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DizzinessFainting\' in table \'PanamaExamineePersonalDeclarat" +
                                "ionSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.DizzinessFaintingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Lossofconsciousness {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.LossofconsciousnessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Lossofconsciousness\' in table \'PanamaExamineePersonalDeclar" +
                                "ationSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.LossofconsciousnessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PsychiatricProblem {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.PsychiatricProblemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PsychiatricProblem\' in table \'PanamaExamineePersonalDeclara" +
                                "tionSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.PsychiatricProblemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Depression {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.DepressionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Depression\' in table \'PanamaExamineePersonalDeclarationSele" +
                                "ct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.DepressionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Attemptedsuicide {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.AttemptedsuicideColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Attemptedsuicide\' in table \'PanamaExamineePersonalDeclarati" +
                                "onSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.AttemptedsuicideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Lossofmemory {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.LossofmemoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Lossofmemory\' in table \'PanamaExamineePersonalDeclarationSe" +
                                "lect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.LossofmemoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BalanceProblems {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.BalanceProblemsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BalanceProblems\' in table \'PanamaExamineePersonalDeclaratio" +
                                "nSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.BalanceProblemsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SevereHeadAches {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.SevereHeadAchesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SevereHeadAches\' in table \'PanamaExamineePersonalDeclaratio" +
                                "nSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.SevereHeadAchesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Vasculardisease {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.VasculardiseaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Vasculardisease\' in table \'PanamaExamineePersonalDeclaratio" +
                                "nSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.VasculardiseaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RestrictedMobility {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.RestrictedMobilityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RestrictedMobility\' in table \'PanamaExamineePersonalDeclara" +
                                "tionSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.RestrictedMobilityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BackJointProblem {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.BackJointProblemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BackJointProblem\' in table \'PanamaExamineePersonalDeclarati" +
                                "onSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.BackJointProblemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Amputation {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.AmputationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amputation\' in table \'PanamaExamineePersonalDeclarationSele" +
                                "ct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.AmputationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FracturesDislocation {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.FracturesDislocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FracturesDislocation\' in table \'PanamaExamineePersonalDecla" +
                                "rationSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.FracturesDislocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Covid19 {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.Covid19Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Covid19\' in table \'PanamaExamineePersonalDeclarationSelect\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.Covid19Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Repatriated {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.RepatriatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Repatriated\' in table \'PanamaExamineePersonalDeclarationSel" +
                                "ect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.RepatriatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Hospitalized {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.HospitalizedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hospitalized\' in table \'PanamaExamineePersonalDeclarationSe" +
                                "lect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.HospitalizedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SeaDuty {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.SeaDutyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SeaDuty\' in table \'PanamaExamineePersonalDeclarationSelect\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.SeaDutyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Revoke {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.RevokeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Revoke\' in table \'PanamaExamineePersonalDeclarationSelect\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.RevokeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ConsiderDisease {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.ConsiderDiseaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConsiderDisease\' in table \'PanamaExamineePersonalDeclaratio" +
                                "nSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.ConsiderDiseaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FitToPerformDuries {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.FitToPerformDuriesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FitToPerformDuries\' in table \'PanamaExamineePersonalDeclara" +
                                "tionSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.FitToPerformDuriesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AllergicToAnyMedication {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.AllergicToAnyMedicationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AllergicToAnyMedication\' in table \'PanamaExamineePersonalDe" +
                                "clarationSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.AllergicToAnyMedicationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AlternativeSupliment {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.AlternativeSuplimentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AlternativeSupliment\' in table \'PanamaExamineePersonalDecla" +
                                "rationSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.AlternativeSuplimentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AlternativeSuplimentComment1 {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.AlternativeSuplimentComment1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AlternativeSuplimentComment1\' in table \'PanamaExamineePerso" +
                                "nalDeclarationSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.AlternativeSuplimentComment1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TakenMedications {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.TakenMedicationsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TakenMedications\' in table \'PanamaExamineePersonalDeclarati" +
                                "onSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.TakenMedicationsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TakenMedicationsComment1 {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.TakenMedicationsComment1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TakenMedicationsComment1\' in table \'PanamaExamineePersonalD" +
                                "eclarationSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.TakenMedicationsComment1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Comment1 {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.Comment1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comment1\' in table \'PanamaExamineePersonalDeclarationSelect" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.Comment1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ResultID {
                get {
                    return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.ResultIDColumn]));
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.ResultIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Comment2 {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.Comment2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comment2\' in table \'PanamaExamineePersonalDeclarationSelect" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.Comment2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Comment3 {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.Comment3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comment3\' in table \'PanamaExamineePersonalDeclarationSelect" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.Comment3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Comment4 {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.Comment4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comment4\' in table \'PanamaExamineePersonalDeclarationSelect" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.Comment4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Comment5 {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.Comment5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comment5\' in table \'PanamaExamineePersonalDeclarationSelect" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.Comment5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AlternativeSuplimentComment2 {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.AlternativeSuplimentComment2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AlternativeSuplimentComment2\' in table \'PanamaExamineePerso" +
                                "nalDeclarationSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.AlternativeSuplimentComment2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AlternativeSuplimentComment3 {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.AlternativeSuplimentComment3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AlternativeSuplimentComment3\' in table \'PanamaExamineePerso" +
                                "nalDeclarationSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.AlternativeSuplimentComment3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AlternativeSuplimentComment4 {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.AlternativeSuplimentComment4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AlternativeSuplimentComment4\' in table \'PanamaExamineePerso" +
                                "nalDeclarationSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.AlternativeSuplimentComment4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AlternativeSuplimentComment5 {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.AlternativeSuplimentComment5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AlternativeSuplimentComment5\' in table \'PanamaExamineePerso" +
                                "nalDeclarationSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.AlternativeSuplimentComment5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TakenMedicationsComment2 {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.TakenMedicationsComment2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TakenMedicationsComment2\' in table \'PanamaExamineePersonalD" +
                                "eclarationSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.TakenMedicationsComment2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TakenMedicationsComment3 {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.TakenMedicationsComment3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TakenMedicationsComment3\' in table \'PanamaExamineePersonalD" +
                                "eclarationSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.TakenMedicationsComment3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TakenMedicationsComment4 {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.TakenMedicationsComment4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TakenMedicationsComment4\' in table \'PanamaExamineePersonalD" +
                                "eclarationSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.TakenMedicationsComment4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TakenMedicationsComment5 {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.TakenMedicationsComment5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TakenMedicationsComment5\' in table \'PanamaExamineePersonalD" +
                                "eclarationSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.TakenMedicationsComment5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AlternativeSuplimentComment6 {
                get {
                    try {
                        return ((string)(this[this.tablePanamaExamineePersonalDeclarationSelect.AlternativeSuplimentComment6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AlternativeSuplimentComment6\' in table \'PanamaExamineePerso" +
                                "nalDeclarationSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaExamineePersonalDeclarationSelect.AlternativeSuplimentComment6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHighBloodPressureNull() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.HighBloodPressureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHighBloodPressureNull() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.HighBloodPressureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEyeproblemNull() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.EyeproblemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEyeproblemNull() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.EyeproblemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEarNoseThroatNull() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.EarNoseThroatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEarNoseThroatNull() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.EarNoseThroatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHeartSurgeryNull() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.HeartSurgeryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHeartSurgeryNull() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.HeartSurgeryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVaricoseveinsNull() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.VaricoseveinsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVaricoseveinsNull() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.VaricoseveinsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAsthmaBronchitisNull() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.AsthmaBronchitisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAsthmaBronchitisNull() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.AsthmaBronchitisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBloodDisorderNull() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.BloodDisorderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBloodDisorderNull() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.BloodDisorderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDiabetesNull() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.DiabetesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDiabetesNull() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.DiabetesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsThyroidProblemNull() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.ThyroidProblemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetThyroidProblemNull() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.ThyroidProblemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDigestiveDisordersNull() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.DigestiveDisordersColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDigestiveDisordersNull() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.DigestiveDisordersColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKidneyDisordersNull() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.KidneyDisordersColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKidneyDisordersNull() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.KidneyDisordersColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSkinProblemNull() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.SkinProblemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSkinProblemNull() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.SkinProblemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAllergiesNull() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.AllergiesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAllergiesNull() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.AllergiesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEpilipsyNull() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.EpilipsyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEpilipsyNull() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.EpilipsyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSickleCellNull() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.SickleCellColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSickleCellNull() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.SickleCellColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHerinasNull() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.HerinasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHerinasNull() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.HerinasColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGenitalDisordersNull() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.GenitalDisordersColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGenitalDisordersNull() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.GenitalDisordersColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPregnancyNull() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.PregnancyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPregnancyNull() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.PregnancyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSleepproblemNull() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.SleepproblemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSleepproblemNull() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.SleepproblemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDoyouSmokeNull() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.DoyouSmokeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDoyouSmokeNull() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.DoyouSmokeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSurgeriesNull() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.SurgeriesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSurgeriesNull() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.SurgeriesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInfectiousNull() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.InfectiousColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInfectiousNull() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.InfectiousColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDizzinessFaintingNull() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.DizzinessFaintingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDizzinessFaintingNull() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.DizzinessFaintingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLossofconsciousnessNull() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.LossofconsciousnessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLossofconsciousnessNull() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.LossofconsciousnessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPsychiatricProblemNull() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.PsychiatricProblemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPsychiatricProblemNull() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.PsychiatricProblemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDepressionNull() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.DepressionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDepressionNull() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.DepressionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAttemptedsuicideNull() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.AttemptedsuicideColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAttemptedsuicideNull() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.AttemptedsuicideColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLossofmemoryNull() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.LossofmemoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLossofmemoryNull() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.LossofmemoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBalanceProblemsNull() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.BalanceProblemsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBalanceProblemsNull() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.BalanceProblemsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSevereHeadAchesNull() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.SevereHeadAchesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSevereHeadAchesNull() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.SevereHeadAchesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVasculardiseaseNull() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.VasculardiseaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVasculardiseaseNull() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.VasculardiseaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRestrictedMobilityNull() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.RestrictedMobilityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRestrictedMobilityNull() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.RestrictedMobilityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBackJointProblemNull() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.BackJointProblemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBackJointProblemNull() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.BackJointProblemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAmputationNull() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.AmputationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAmputationNull() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.AmputationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFracturesDislocationNull() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.FracturesDislocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFracturesDislocationNull() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.FracturesDislocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCovid19Null() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.Covid19Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCovid19Null() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.Covid19Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRepatriatedNull() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.RepatriatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRepatriatedNull() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.RepatriatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHospitalizedNull() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.HospitalizedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHospitalizedNull() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.HospitalizedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSeaDutyNull() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.SeaDutyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSeaDutyNull() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.SeaDutyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRevokeNull() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.RevokeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRevokeNull() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.RevokeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConsiderDiseaseNull() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.ConsiderDiseaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConsiderDiseaseNull() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.ConsiderDiseaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFitToPerformDuriesNull() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.FitToPerformDuriesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFitToPerformDuriesNull() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.FitToPerformDuriesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAllergicToAnyMedicationNull() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.AllergicToAnyMedicationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAllergicToAnyMedicationNull() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.AllergicToAnyMedicationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAlternativeSuplimentNull() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.AlternativeSuplimentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAlternativeSuplimentNull() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.AlternativeSuplimentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAlternativeSuplimentComment1Null() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.AlternativeSuplimentComment1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAlternativeSuplimentComment1Null() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.AlternativeSuplimentComment1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTakenMedicationsNull() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.TakenMedicationsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTakenMedicationsNull() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.TakenMedicationsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTakenMedicationsComment1Null() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.TakenMedicationsComment1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTakenMedicationsComment1Null() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.TakenMedicationsComment1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsComment1Null() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.Comment1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetComment1Null() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.Comment1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsComment2Null() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.Comment2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetComment2Null() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.Comment2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsComment3Null() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.Comment3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetComment3Null() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.Comment3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsComment4Null() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.Comment4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetComment4Null() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.Comment4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsComment5Null() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.Comment5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetComment5Null() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.Comment5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAlternativeSuplimentComment2Null() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.AlternativeSuplimentComment2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAlternativeSuplimentComment2Null() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.AlternativeSuplimentComment2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAlternativeSuplimentComment3Null() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.AlternativeSuplimentComment3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAlternativeSuplimentComment3Null() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.AlternativeSuplimentComment3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAlternativeSuplimentComment4Null() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.AlternativeSuplimentComment4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAlternativeSuplimentComment4Null() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.AlternativeSuplimentComment4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAlternativeSuplimentComment5Null() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.AlternativeSuplimentComment5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAlternativeSuplimentComment5Null() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.AlternativeSuplimentComment5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTakenMedicationsComment2Null() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.TakenMedicationsComment2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTakenMedicationsComment2Null() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.TakenMedicationsComment2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTakenMedicationsComment3Null() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.TakenMedicationsComment3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTakenMedicationsComment3Null() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.TakenMedicationsComment3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTakenMedicationsComment4Null() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.TakenMedicationsComment4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTakenMedicationsComment4Null() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.TakenMedicationsComment4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTakenMedicationsComment5Null() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.TakenMedicationsComment5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTakenMedicationsComment5Null() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.TakenMedicationsComment5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAlternativeSuplimentComment6Null() {
                return this.IsNull(this.tablePanamaExamineePersonalDeclarationSelect.AlternativeSuplimentComment6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAlternativeSuplimentComment6Null() {
                this[this.tablePanamaExamineePersonalDeclarationSelect.AlternativeSuplimentComment6Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PanamaClinicalDataSelectRow : global::System.Data.DataRow {
            
            private PanamaClinicalDataSelectDataTable tablePanamaClinicalDataSelect;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PanamaClinicalDataSelectRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePanamaClinicalDataSelect = ((PanamaClinicalDataSelectDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RecId {
                get {
                    return ((int)(this[this.tablePanamaClinicalDataSelect.RecIdColumn]));
                }
                set {
                    this[this.tablePanamaClinicalDataSelect.RecIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ResultMainUID {
                get {
                    return ((string)(this[this.tablePanamaClinicalDataSelect.ResultMainUIDColumn]));
                }
                set {
                    this[this.tablePanamaClinicalDataSelect.ResultMainUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Height {
                get {
                    try {
                        return ((string)(this[this.tablePanamaClinicalDataSelect.HeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Height\' in table \'PanamaClinicalDataSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaClinicalDataSelect.HeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Weight {
                get {
                    try {
                        return ((string)(this[this.tablePanamaClinicalDataSelect.WeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Weight\' in table \'PanamaClinicalDataSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaClinicalDataSelect.WeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BMI {
                get {
                    try {
                        return ((string)(this[this.tablePanamaClinicalDataSelect.BMIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BMI\' in table \'PanamaClinicalDataSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaClinicalDataSelect.BMIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Oxygen {
                get {
                    try {
                        return ((string)(this[this.tablePanamaClinicalDataSelect.OxygenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Oxygen\' in table \'PanamaClinicalDataSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaClinicalDataSelect.OxygenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HeartRate {
                get {
                    try {
                        return ((string)(this[this.tablePanamaClinicalDataSelect.HeartRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HeartRate\' in table \'PanamaClinicalDataSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaClinicalDataSelect.HeartRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Respiratory {
                get {
                    try {
                        return ((string)(this[this.tablePanamaClinicalDataSelect.RespiratoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Respiratory\' in table \'PanamaClinicalDataSelect\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablePanamaClinicalDataSelect.RespiratoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BloodPressure {
                get {
                    try {
                        return ((string)(this[this.tablePanamaClinicalDataSelect.BloodPressureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BloodPressure\' in table \'PanamaClinicalDataSelect\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePanamaClinicalDataSelect.BloodPressureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Diatolic {
                get {
                    try {
                        return ((string)(this[this.tablePanamaClinicalDataSelect.DiatolicColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Diatolic\' in table \'PanamaClinicalDataSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaClinicalDataSelect.DiatolicColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHeightNull() {
                return this.IsNull(this.tablePanamaClinicalDataSelect.HeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHeightNull() {
                this[this.tablePanamaClinicalDataSelect.HeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWeightNull() {
                return this.IsNull(this.tablePanamaClinicalDataSelect.WeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWeightNull() {
                this[this.tablePanamaClinicalDataSelect.WeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBMINull() {
                return this.IsNull(this.tablePanamaClinicalDataSelect.BMIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBMINull() {
                this[this.tablePanamaClinicalDataSelect.BMIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOxygenNull() {
                return this.IsNull(this.tablePanamaClinicalDataSelect.OxygenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOxygenNull() {
                this[this.tablePanamaClinicalDataSelect.OxygenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHeartRateNull() {
                return this.IsNull(this.tablePanamaClinicalDataSelect.HeartRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHeartRateNull() {
                this[this.tablePanamaClinicalDataSelect.HeartRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRespiratoryNull() {
                return this.IsNull(this.tablePanamaClinicalDataSelect.RespiratoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRespiratoryNull() {
                this[this.tablePanamaClinicalDataSelect.RespiratoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBloodPressureNull() {
                return this.IsNull(this.tablePanamaClinicalDataSelect.BloodPressureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBloodPressureNull() {
                this[this.tablePanamaClinicalDataSelect.BloodPressureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDiatolicNull() {
                return this.IsNull(this.tablePanamaClinicalDataSelect.DiatolicColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDiatolicNull() {
                this[this.tablePanamaClinicalDataSelect.DiatolicColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PanamaPhysicalExplorationSelectRow : global::System.Data.DataRow {
            
            private PanamaPhysicalExplorationSelectDataTable tablePanamaPhysicalExplorationSelect;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PanamaPhysicalExplorationSelectRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePanamaPhysicalExplorationSelect = ((PanamaPhysicalExplorationSelectDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long RecID {
                get {
                    return ((long)(this[this.tablePanamaPhysicalExplorationSelect.RecIDColumn]));
                }
                set {
                    this[this.tablePanamaPhysicalExplorationSelect.RecIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Head {
                get {
                    try {
                        return ((string)(this[this.tablePanamaPhysicalExplorationSelect.HeadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Head\' in table \'PanamaPhysicalExplorationSelect\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablePanamaPhysicalExplorationSelect.HeadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Mouth {
                get {
                    try {
                        return ((string)(this[this.tablePanamaPhysicalExplorationSelect.MouthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mouth\' in table \'PanamaPhysicalExplorationSelect\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablePanamaPhysicalExplorationSelect.MouthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Dental {
                get {
                    try {
                        return ((string)(this[this.tablePanamaPhysicalExplorationSelect.DentalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dental\' in table \'PanamaPhysicalExplorationSelect\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePanamaPhysicalExplorationSelect.DentalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ears {
                get {
                    try {
                        return ((string)(this[this.tablePanamaPhysicalExplorationSelect.EarsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ears\' in table \'PanamaPhysicalExplorationSelect\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablePanamaPhysicalExplorationSelect.EarsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Tympanic {
                get {
                    try {
                        return ((string)(this[this.tablePanamaPhysicalExplorationSelect.TympanicColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tympanic\' in table \'PanamaPhysicalExplorationSelect\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablePanamaPhysicalExplorationSelect.TympanicColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Eyes {
                get {
                    try {
                        return ((string)(this[this.tablePanamaPhysicalExplorationSelect.EyesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Eyes\' in table \'PanamaPhysicalExplorationSelect\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablePanamaPhysicalExplorationSelect.EyesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Pupils {
                get {
                    try {
                        return ((string)(this[this.tablePanamaPhysicalExplorationSelect.PupilsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pupils\' in table \'PanamaPhysicalExplorationSelect\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePanamaPhysicalExplorationSelect.PupilsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OfThalmoscopy {
                get {
                    try {
                        return ((string)(this[this.tablePanamaPhysicalExplorationSelect.OfThalmoscopyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OfThalmoscopy\' in table \'PanamaPhysicalExplorationSelect\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaPhysicalExplorationSelect.OfThalmoscopyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EyeMovement {
                get {
                    try {
                        return ((string)(this[this.tablePanamaPhysicalExplorationSelect.EyeMovementColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EyeMovement\' in table \'PanamaPhysicalExplorationSelect\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaPhysicalExplorationSelect.EyeMovementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Lungs {
                get {
                    try {
                        return ((string)(this[this.tablePanamaPhysicalExplorationSelect.LungsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Lungs\' in table \'PanamaPhysicalExplorationSelect\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablePanamaPhysicalExplorationSelect.LungsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Breast {
                get {
                    try {
                        return ((string)(this[this.tablePanamaPhysicalExplorationSelect.BreastColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Breast\' in table \'PanamaPhysicalExplorationSelect\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePanamaPhysicalExplorationSelect.BreastColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Heart {
                get {
                    try {
                        return ((string)(this[this.tablePanamaPhysicalExplorationSelect.HeartColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Heart\' in table \'PanamaPhysicalExplorationSelect\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablePanamaPhysicalExplorationSelect.HeartColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Skin {
                get {
                    try {
                        return ((string)(this[this.tablePanamaPhysicalExplorationSelect.SkinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Skin\' in table \'PanamaPhysicalExplorationSelect\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablePanamaPhysicalExplorationSelect.SkinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VaricoseVenis {
                get {
                    try {
                        return ((string)(this[this.tablePanamaPhysicalExplorationSelect.VaricoseVenisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VaricoseVenis\' in table \'PanamaPhysicalExplorationSelect\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaPhysicalExplorationSelect.VaricoseVenisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Vascular {
                get {
                    try {
                        return ((string)(this[this.tablePanamaPhysicalExplorationSelect.VascularColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Vascular\' in table \'PanamaPhysicalExplorationSelect\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablePanamaPhysicalExplorationSelect.VascularColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Abdomen {
                get {
                    try {
                        return ((string)(this[this.tablePanamaPhysicalExplorationSelect.AbdomenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Abdomen\' in table \'PanamaPhysicalExplorationSelect\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePanamaPhysicalExplorationSelect.AbdomenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Hernias {
                get {
                    try {
                        return ((string)(this[this.tablePanamaPhysicalExplorationSelect.HerniasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hernias\' in table \'PanamaPhysicalExplorationSelect\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePanamaPhysicalExplorationSelect.HerniasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Anus {
                get {
                    try {
                        return ((string)(this[this.tablePanamaPhysicalExplorationSelect.AnusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Anus\' in table \'PanamaPhysicalExplorationSelect\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablePanamaPhysicalExplorationSelect.AnusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Gu {
                get {
                    try {
                        return ((string)(this[this.tablePanamaPhysicalExplorationSelect.GuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gu\' in table \'PanamaPhysicalExplorationSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaPhysicalExplorationSelect.GuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Upper {
                get {
                    try {
                        return ((string)(this[this.tablePanamaPhysicalExplorationSelect.UpperColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Upper\' in table \'PanamaPhysicalExplorationSelect\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablePanamaPhysicalExplorationSelect.UpperColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Spine {
                get {
                    try {
                        return ((string)(this[this.tablePanamaPhysicalExplorationSelect.SpineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Spine\' in table \'PanamaPhysicalExplorationSelect\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablePanamaPhysicalExplorationSelect.SpineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Neurologic {
                get {
                    try {
                        return ((string)(this[this.tablePanamaPhysicalExplorationSelect.NeurologicColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Neurologic\' in table \'PanamaPhysicalExplorationSelect\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaPhysicalExplorationSelect.NeurologicColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Psychiatric {
                get {
                    try {
                        return ((string)(this[this.tablePanamaPhysicalExplorationSelect.PsychiatricColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Psychiatric\' in table \'PanamaPhysicalExplorationSelect\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaPhysicalExplorationSelect.PsychiatricColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GeneralAppearance {
                get {
                    try {
                        return ((string)(this[this.tablePanamaPhysicalExplorationSelect.GeneralAppearanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GeneralAppearance\' in table \'PanamaPhysicalExplorationSelec" +
                                "t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaPhysicalExplorationSelect.GeneralAppearanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PhysicalExplorationComment1 {
                get {
                    try {
                        return ((string)(this[this.tablePanamaPhysicalExplorationSelect.PhysicalExplorationComment1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhysicalExplorationComment1\' in table \'PanamaPhysicalExplor" +
                                "ationSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaPhysicalExplorationSelect.PhysicalExplorationComment1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PhysicalExplorationComment2 {
                get {
                    try {
                        return ((string)(this[this.tablePanamaPhysicalExplorationSelect.PhysicalExplorationComment2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhysicalExplorationComment2\' in table \'PanamaPhysicalExplor" +
                                "ationSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaPhysicalExplorationSelect.PhysicalExplorationComment2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PhysicalExplorationComment3 {
                get {
                    try {
                        return ((string)(this[this.tablePanamaPhysicalExplorationSelect.PhysicalExplorationComment3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhysicalExplorationComment3\' in table \'PanamaPhysicalExplor" +
                                "ationSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaPhysicalExplorationSelect.PhysicalExplorationComment3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PhysicalExplorationComment4 {
                get {
                    try {
                        return ((string)(this[this.tablePanamaPhysicalExplorationSelect.PhysicalExplorationComment4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhysicalExplorationComment4\' in table \'PanamaPhysicalExplor" +
                                "ationSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaPhysicalExplorationSelect.PhysicalExplorationComment4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHeadNull() {
                return this.IsNull(this.tablePanamaPhysicalExplorationSelect.HeadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHeadNull() {
                this[this.tablePanamaPhysicalExplorationSelect.HeadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMouthNull() {
                return this.IsNull(this.tablePanamaPhysicalExplorationSelect.MouthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMouthNull() {
                this[this.tablePanamaPhysicalExplorationSelect.MouthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDentalNull() {
                return this.IsNull(this.tablePanamaPhysicalExplorationSelect.DentalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDentalNull() {
                this[this.tablePanamaPhysicalExplorationSelect.DentalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEarsNull() {
                return this.IsNull(this.tablePanamaPhysicalExplorationSelect.EarsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEarsNull() {
                this[this.tablePanamaPhysicalExplorationSelect.EarsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTympanicNull() {
                return this.IsNull(this.tablePanamaPhysicalExplorationSelect.TympanicColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTympanicNull() {
                this[this.tablePanamaPhysicalExplorationSelect.TympanicColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEyesNull() {
                return this.IsNull(this.tablePanamaPhysicalExplorationSelect.EyesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEyesNull() {
                this[this.tablePanamaPhysicalExplorationSelect.EyesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPupilsNull() {
                return this.IsNull(this.tablePanamaPhysicalExplorationSelect.PupilsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPupilsNull() {
                this[this.tablePanamaPhysicalExplorationSelect.PupilsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOfThalmoscopyNull() {
                return this.IsNull(this.tablePanamaPhysicalExplorationSelect.OfThalmoscopyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOfThalmoscopyNull() {
                this[this.tablePanamaPhysicalExplorationSelect.OfThalmoscopyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEyeMovementNull() {
                return this.IsNull(this.tablePanamaPhysicalExplorationSelect.EyeMovementColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEyeMovementNull() {
                this[this.tablePanamaPhysicalExplorationSelect.EyeMovementColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLungsNull() {
                return this.IsNull(this.tablePanamaPhysicalExplorationSelect.LungsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLungsNull() {
                this[this.tablePanamaPhysicalExplorationSelect.LungsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBreastNull() {
                return this.IsNull(this.tablePanamaPhysicalExplorationSelect.BreastColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBreastNull() {
                this[this.tablePanamaPhysicalExplorationSelect.BreastColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHeartNull() {
                return this.IsNull(this.tablePanamaPhysicalExplorationSelect.HeartColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHeartNull() {
                this[this.tablePanamaPhysicalExplorationSelect.HeartColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSkinNull() {
                return this.IsNull(this.tablePanamaPhysicalExplorationSelect.SkinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSkinNull() {
                this[this.tablePanamaPhysicalExplorationSelect.SkinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVaricoseVenisNull() {
                return this.IsNull(this.tablePanamaPhysicalExplorationSelect.VaricoseVenisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVaricoseVenisNull() {
                this[this.tablePanamaPhysicalExplorationSelect.VaricoseVenisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVascularNull() {
                return this.IsNull(this.tablePanamaPhysicalExplorationSelect.VascularColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVascularNull() {
                this[this.tablePanamaPhysicalExplorationSelect.VascularColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAbdomenNull() {
                return this.IsNull(this.tablePanamaPhysicalExplorationSelect.AbdomenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAbdomenNull() {
                this[this.tablePanamaPhysicalExplorationSelect.AbdomenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHerniasNull() {
                return this.IsNull(this.tablePanamaPhysicalExplorationSelect.HerniasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHerniasNull() {
                this[this.tablePanamaPhysicalExplorationSelect.HerniasColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAnusNull() {
                return this.IsNull(this.tablePanamaPhysicalExplorationSelect.AnusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAnusNull() {
                this[this.tablePanamaPhysicalExplorationSelect.AnusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGuNull() {
                return this.IsNull(this.tablePanamaPhysicalExplorationSelect.GuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGuNull() {
                this[this.tablePanamaPhysicalExplorationSelect.GuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUpperNull() {
                return this.IsNull(this.tablePanamaPhysicalExplorationSelect.UpperColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUpperNull() {
                this[this.tablePanamaPhysicalExplorationSelect.UpperColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpineNull() {
                return this.IsNull(this.tablePanamaPhysicalExplorationSelect.SpineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpineNull() {
                this[this.tablePanamaPhysicalExplorationSelect.SpineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNeurologicNull() {
                return this.IsNull(this.tablePanamaPhysicalExplorationSelect.NeurologicColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNeurologicNull() {
                this[this.tablePanamaPhysicalExplorationSelect.NeurologicColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPsychiatricNull() {
                return this.IsNull(this.tablePanamaPhysicalExplorationSelect.PsychiatricColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPsychiatricNull() {
                this[this.tablePanamaPhysicalExplorationSelect.PsychiatricColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGeneralAppearanceNull() {
                return this.IsNull(this.tablePanamaPhysicalExplorationSelect.GeneralAppearanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGeneralAppearanceNull() {
                this[this.tablePanamaPhysicalExplorationSelect.GeneralAppearanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPhysicalExplorationComment1Null() {
                return this.IsNull(this.tablePanamaPhysicalExplorationSelect.PhysicalExplorationComment1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPhysicalExplorationComment1Null() {
                this[this.tablePanamaPhysicalExplorationSelect.PhysicalExplorationComment1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPhysicalExplorationComment2Null() {
                return this.IsNull(this.tablePanamaPhysicalExplorationSelect.PhysicalExplorationComment2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPhysicalExplorationComment2Null() {
                this[this.tablePanamaPhysicalExplorationSelect.PhysicalExplorationComment2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPhysicalExplorationComment3Null() {
                return this.IsNull(this.tablePanamaPhysicalExplorationSelect.PhysicalExplorationComment3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPhysicalExplorationComment3Null() {
                this[this.tablePanamaPhysicalExplorationSelect.PhysicalExplorationComment3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPhysicalExplorationComment4Null() {
                return this.IsNull(this.tablePanamaPhysicalExplorationSelect.PhysicalExplorationComment4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPhysicalExplorationComment4Null() {
                this[this.tablePanamaPhysicalExplorationSelect.PhysicalExplorationComment4Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PanamaDiagnosticTestSelectRow : global::System.Data.DataRow {
            
            private PanamaDiagnosticTestSelectDataTable tablePanamaDiagnosticTestSelect;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PanamaDiagnosticTestSelectRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePanamaDiagnosticTestSelect = ((PanamaDiagnosticTestSelectDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long RecID {
                get {
                    return ((long)(this[this.tablePanamaDiagnosticTestSelect.RecIDColumn]));
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.RecIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ResultMainUID {
                get {
                    return ((string)(this[this.tablePanamaDiagnosticTestSelect.ResultMainUIDColumn]));
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.ResultMainUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Hemogram {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.HemogramColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hemogram\' in table \'PanamaDiagnosticTestSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.HemogramColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HemogramNormal {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.HemogramNormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HemogramNormal\' in table \'PanamaDiagnosticTestSelect\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.HemogramNormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HemogramAbNormal {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.HemogramAbNormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HemogramAbNormal\' in table \'PanamaDiagnosticTestSelect\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.HemogramAbNormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HemogramOservation {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.HemogramOservationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HemogramOservation\' in table \'PanamaDiagnosticTestSelect\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.HemogramOservationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Lipid {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.LipidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Lipid\' in table \'PanamaDiagnosticTestSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.LipidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LipidNormal {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.LipidNormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LipidNormal\' in table \'PanamaDiagnosticTestSelect\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.LipidNormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LipidAbNormal {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.LipidAbNormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LipidAbNormal\' in table \'PanamaDiagnosticTestSelect\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.LipidAbNormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LipidObservation {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.LipidObservationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LipidObservation\' in table \'PanamaDiagnosticTestSelect\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.LipidObservationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Creatinine {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.CreatinineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Creatinine\' in table \'PanamaDiagnosticTestSelect\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.CreatinineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CreatinineNormal {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.CreatinineNormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatinineNormal\' in table \'PanamaDiagnosticTestSelect\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.CreatinineNormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CreatinineAbnormal {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.CreatinineAbnormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatinineAbnormal\' in table \'PanamaDiagnosticTestSelect\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.CreatinineAbnormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CreatinineObservation {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.CreatinineObservationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatinineObservation\' in table \'PanamaDiagnosticTestSelect" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.CreatinineObservationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Cholesterol {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.CholesterolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cholesterol\' in table \'PanamaDiagnosticTestSelect\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.CholesterolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CholesterolNormal {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.CholesterolNormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CholesterolNormal\' in table \'PanamaDiagnosticTestSelect\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.CholesterolNormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CholesterolAbnormal {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.CholesterolAbnormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CholesterolAbnormal\' in table \'PanamaDiagnosticTestSelect\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.CholesterolAbnormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CholesterolObservation {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.CholesterolObservationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CholesterolObservation\' in table \'PanamaDiagnosticTestSelec" +
                                "t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.CholesterolObservationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Triglycerides {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.TriglyceridesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Triglycerides\' in table \'PanamaDiagnosticTestSelect\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.TriglyceridesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TriglyceridesNormal {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.TriglyceridesNormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TriglyceridesNormal\' in table \'PanamaDiagnosticTestSelect\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.TriglyceridesNormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TriglyceridesAbnormal {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.TriglyceridesAbnormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TriglyceridesAbnormal\' in table \'PanamaDiagnosticTestSelect" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.TriglyceridesAbnormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TriglyceridesObservation {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.TriglyceridesObservationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TriglyceridesObservation\' in table \'PanamaDiagnosticTestSel" +
                                "ect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.TriglyceridesObservationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Glucose {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.GlucoseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Glucose\' in table \'PanamaDiagnosticTestSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.GlucoseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GlucoseNormal {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.GlucoseNormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GlucoseNormal\' in table \'PanamaDiagnosticTestSelect\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.GlucoseNormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GlucoseAbNormal {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.GlucoseAbNormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GlucoseAbNormal\' in table \'PanamaDiagnosticTestSelect\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.GlucoseAbNormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GlucoseObservation {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.GlucoseObservationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GlucoseObservation\' in table \'PanamaDiagnosticTestSelect\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.GlucoseObservationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Nitrogen {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.NitrogenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nitrogen\' in table \'PanamaDiagnosticTestSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.NitrogenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NitrogenNormal {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.NitrogenNormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NitrogenNormal\' in table \'PanamaDiagnosticTestSelect\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.NitrogenNormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NitrogenAbnormal {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.NitrogenAbnormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NitrogenAbnormal\' in table \'PanamaDiagnosticTestSelect\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.NitrogenAbnormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NitrogenObservation {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.NitrogenObservationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NitrogenObservation\' in table \'PanamaDiagnosticTestSelect\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.NitrogenObservationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RhTyping {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.RhTypingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RhTyping\' in table \'PanamaDiagnosticTestSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.RhTypingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RhTypingNormal {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.RhTypingNormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RhTypingNormal\' in table \'PanamaDiagnosticTestSelect\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.RhTypingNormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RhTypingAbnormal {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.RhTypingAbnormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RhTypingAbnormal\' in table \'PanamaDiagnosticTestSelect\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.RhTypingAbnormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RhTypingObservation {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.RhTypingObservationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RhTypingObservation\' in table \'PanamaDiagnosticTestSelect\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.RhTypingObservationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Hiv {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.HivColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hiv\' in table \'PanamaDiagnosticTestSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.HivColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HivNormal {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.HivNormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HivNormal\' in table \'PanamaDiagnosticTestSelect\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.HivNormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HivAbnormal {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.HivAbnormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HivAbnormal\' in table \'PanamaDiagnosticTestSelect\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.HivAbnormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HivObservation {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.HivObservationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HivObservation\' in table \'PanamaDiagnosticTestSelect\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.HivObservationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Vdrl {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.VdrlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Vdrl\' in table \'PanamaDiagnosticTestSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.VdrlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VdrlNormal {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.VdrlNormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VdrlNormal\' in table \'PanamaDiagnosticTestSelect\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.VdrlNormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VdrlAbnormal {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.VdrlAbnormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VdrlAbnormal\' in table \'PanamaDiagnosticTestSelect\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.VdrlAbnormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VdrlObservation {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.VdrlObservationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VdrlObservation\' in table \'PanamaDiagnosticTestSelect\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.VdrlObservationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Gch {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.GchColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gch\' in table \'PanamaDiagnosticTestSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.GchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GchNormal {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.GchNormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GchNormal\' in table \'PanamaDiagnosticTestSelect\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.GchNormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GchAbnormal {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.GchAbnormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GchAbnormal\' in table \'PanamaDiagnosticTestSelect\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.GchAbnormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GchObservation {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.GchObservationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GchObservation\' in table \'PanamaDiagnosticTestSelect\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.GchObservationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GeneralUrien {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.GeneralUrienColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GeneralUrien\' in table \'PanamaDiagnosticTestSelect\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.GeneralUrienColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GeneralUrineNormal {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.GeneralUrineNormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GeneralUrineNormal\' in table \'PanamaDiagnosticTestSelect\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.GeneralUrineNormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GeneralUrineAbNormal {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.GeneralUrineAbNormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GeneralUrineAbNormal\' in table \'PanamaDiagnosticTestSelect\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.GeneralUrineAbNormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GeneralUrineObservation {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.GeneralUrineObservationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GeneralUrineObservation\' in table \'PanamaDiagnosticTestSele" +
                                "ct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.GeneralUrineObservationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Stool {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.StoolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Stool\' in table \'PanamaDiagnosticTestSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.StoolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string StoolNormal {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.StoolNormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StoolNormal\' in table \'PanamaDiagnosticTestSelect\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.StoolNormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string StoolAbNormal {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.StoolAbNormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StoolAbNormal\' in table \'PanamaDiagnosticTestSelect\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.StoolAbNormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string StoolObservation {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.StoolObservationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StoolObservation\' in table \'PanamaDiagnosticTestSelect\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.StoolObservationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Drugtest {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.DrugtestColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Drugtest\' in table \'PanamaDiagnosticTestSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.DrugtestColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DrugTestNormal {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.DrugTestNormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DrugTestNormal\' in table \'PanamaDiagnosticTestSelect\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.DrugTestNormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DrugTestAbNormal {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.DrugTestAbNormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DrugTestAbNormal\' in table \'PanamaDiagnosticTestSelect\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.DrugTestAbNormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DrugTestObservation {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.DrugTestObservationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DrugTestObservation\' in table \'PanamaDiagnosticTestSelect\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.DrugTestObservationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Alcohol {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.AlcoholColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Alcohol\' in table \'PanamaDiagnosticTestSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.AlcoholColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AlcoholNormal {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.AlcoholNormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AlcoholNormal\' in table \'PanamaDiagnosticTestSelect\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.AlcoholNormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AlcoholAbNormal {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.AlcoholAbNormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AlcoholAbNormal\' in table \'PanamaDiagnosticTestSelect\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.AlcoholAbNormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AlcoholObservation {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.AlcoholObservationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AlcoholObservation\' in table \'PanamaDiagnosticTestSelect\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.AlcoholObservationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Breast {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.BreastColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Breast\' in table \'PanamaDiagnosticTestSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.BreastColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BreastExaminationNormal {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.BreastExaminationNormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BreastExaminationNormal\' in table \'PanamaDiagnosticTestSele" +
                                "ct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.BreastExaminationNormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BreastExaminationAbNormal {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.BreastExaminationAbNormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BreastExaminationAbNormal\' in table \'PanamaDiagnosticTestSe" +
                                "lect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.BreastExaminationAbNormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BreastExaminationObservation {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.BreastExaminationObservationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BreastExaminationObservation\' in table \'PanamaDiagnosticTes" +
                                "tSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.BreastExaminationObservationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PapTest {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.PapTestColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PapTest\' in table \'PanamaDiagnosticTestSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.PapTestColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PaptestJNormal {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.PaptestJNormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaptestJNormal\' in table \'PanamaDiagnosticTestSelect\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.PaptestJNormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PapAbnormal {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.PapAbnormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PapAbnormal\' in table \'PanamaDiagnosticTestSelect\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.PapAbnormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PapObservation {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.PapObservationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PapObservation\' in table \'PanamaDiagnosticTestSelect\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.PapObservationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Psa {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.PsaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Psa\' in table \'PanamaDiagnosticTestSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.PsaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PsaNormal {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.PsaNormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PsaNormal\' in table \'PanamaDiagnosticTestSelect\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.PsaNormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PsaAbNormal {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.PsaAbNormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PsaAbNormal\' in table \'PanamaDiagnosticTestSelect\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.PsaAbNormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PsaObservation {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.PsaObservationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PsaObservation\' in table \'PanamaDiagnosticTestSelect\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.PsaObservationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Xray {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.XrayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Xray\' in table \'PanamaDiagnosticTestSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.XrayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string XrayDate {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.XrayDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'XrayDate\' in table \'PanamaDiagnosticTestSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.XrayDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string XrayObservation {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.XrayObservationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'XrayObservation\' in table \'PanamaDiagnosticTestSelect\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.XrayObservationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ekg {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.EkgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ekg\' in table \'PanamaDiagnosticTestSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.EkgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EkgDate {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.EkgDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EkgDate\' in table \'PanamaDiagnosticTestSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.EkgDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EkgObservation {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.EkgObservationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EkgObservation\' in table \'PanamaDiagnosticTestSelect\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.EkgObservationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SarsCovidByPcr {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.SarsCovidByPcrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SarsCovidByPcr\' in table \'PanamaDiagnosticTestSelect\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.SarsCovidByPcrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SarsCovidByAntigens {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.SarsCovidByAntigensColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SarsCovidByAntigens\' in table \'PanamaDiagnosticTestSelect\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.SarsCovidByAntigensColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OtherTest {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.OtherTestColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherTest\' in table \'PanamaDiagnosticTestSelect\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.OtherTestColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OtherTestResult {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.OtherTestResultColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherTestResult\' in table \'PanamaDiagnosticTestSelect\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.OtherTestResultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DiagnosticComment1 {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.DiagnosticComment1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiagnosticComment1\' in table \'PanamaDiagnosticTestSelect\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.DiagnosticComment1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DiagnosticComment2 {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.DiagnosticComment2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiagnosticComment2\' in table \'PanamaDiagnosticTestSelect\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.DiagnosticComment2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DiagnosticComment3 {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.DiagnosticComment3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiagnosticComment3\' in table \'PanamaDiagnosticTestSelect\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.DiagnosticComment3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DiagnosticComment4 {
                get {
                    try {
                        return ((string)(this[this.tablePanamaDiagnosticTestSelect.DiagnosticComment4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiagnosticComment4\' in table \'PanamaDiagnosticTestSelect\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaDiagnosticTestSelect.DiagnosticComment4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHemogramNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.HemogramColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHemogramNull() {
                this[this.tablePanamaDiagnosticTestSelect.HemogramColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHemogramNormalNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.HemogramNormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHemogramNormalNull() {
                this[this.tablePanamaDiagnosticTestSelect.HemogramNormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHemogramAbNormalNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.HemogramAbNormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHemogramAbNormalNull() {
                this[this.tablePanamaDiagnosticTestSelect.HemogramAbNormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHemogramOservationNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.HemogramOservationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHemogramOservationNull() {
                this[this.tablePanamaDiagnosticTestSelect.HemogramOservationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLipidNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.LipidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLipidNull() {
                this[this.tablePanamaDiagnosticTestSelect.LipidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLipidNormalNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.LipidNormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLipidNormalNull() {
                this[this.tablePanamaDiagnosticTestSelect.LipidNormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLipidAbNormalNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.LipidAbNormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLipidAbNormalNull() {
                this[this.tablePanamaDiagnosticTestSelect.LipidAbNormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLipidObservationNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.LipidObservationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLipidObservationNull() {
                this[this.tablePanamaDiagnosticTestSelect.LipidObservationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreatinineNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.CreatinineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreatinineNull() {
                this[this.tablePanamaDiagnosticTestSelect.CreatinineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreatinineNormalNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.CreatinineNormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreatinineNormalNull() {
                this[this.tablePanamaDiagnosticTestSelect.CreatinineNormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreatinineAbnormalNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.CreatinineAbnormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreatinineAbnormalNull() {
                this[this.tablePanamaDiagnosticTestSelect.CreatinineAbnormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreatinineObservationNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.CreatinineObservationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreatinineObservationNull() {
                this[this.tablePanamaDiagnosticTestSelect.CreatinineObservationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCholesterolNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.CholesterolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCholesterolNull() {
                this[this.tablePanamaDiagnosticTestSelect.CholesterolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCholesterolNormalNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.CholesterolNormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCholesterolNormalNull() {
                this[this.tablePanamaDiagnosticTestSelect.CholesterolNormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCholesterolAbnormalNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.CholesterolAbnormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCholesterolAbnormalNull() {
                this[this.tablePanamaDiagnosticTestSelect.CholesterolAbnormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCholesterolObservationNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.CholesterolObservationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCholesterolObservationNull() {
                this[this.tablePanamaDiagnosticTestSelect.CholesterolObservationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTriglyceridesNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.TriglyceridesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTriglyceridesNull() {
                this[this.tablePanamaDiagnosticTestSelect.TriglyceridesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTriglyceridesNormalNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.TriglyceridesNormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTriglyceridesNormalNull() {
                this[this.tablePanamaDiagnosticTestSelect.TriglyceridesNormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTriglyceridesAbnormalNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.TriglyceridesAbnormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTriglyceridesAbnormalNull() {
                this[this.tablePanamaDiagnosticTestSelect.TriglyceridesAbnormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTriglyceridesObservationNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.TriglyceridesObservationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTriglyceridesObservationNull() {
                this[this.tablePanamaDiagnosticTestSelect.TriglyceridesObservationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGlucoseNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.GlucoseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGlucoseNull() {
                this[this.tablePanamaDiagnosticTestSelect.GlucoseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGlucoseNormalNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.GlucoseNormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGlucoseNormalNull() {
                this[this.tablePanamaDiagnosticTestSelect.GlucoseNormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGlucoseAbNormalNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.GlucoseAbNormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGlucoseAbNormalNull() {
                this[this.tablePanamaDiagnosticTestSelect.GlucoseAbNormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGlucoseObservationNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.GlucoseObservationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGlucoseObservationNull() {
                this[this.tablePanamaDiagnosticTestSelect.GlucoseObservationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNitrogenNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.NitrogenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNitrogenNull() {
                this[this.tablePanamaDiagnosticTestSelect.NitrogenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNitrogenNormalNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.NitrogenNormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNitrogenNormalNull() {
                this[this.tablePanamaDiagnosticTestSelect.NitrogenNormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNitrogenAbnormalNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.NitrogenAbnormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNitrogenAbnormalNull() {
                this[this.tablePanamaDiagnosticTestSelect.NitrogenAbnormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNitrogenObservationNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.NitrogenObservationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNitrogenObservationNull() {
                this[this.tablePanamaDiagnosticTestSelect.NitrogenObservationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRhTypingNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.RhTypingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRhTypingNull() {
                this[this.tablePanamaDiagnosticTestSelect.RhTypingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRhTypingNormalNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.RhTypingNormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRhTypingNormalNull() {
                this[this.tablePanamaDiagnosticTestSelect.RhTypingNormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRhTypingAbnormalNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.RhTypingAbnormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRhTypingAbnormalNull() {
                this[this.tablePanamaDiagnosticTestSelect.RhTypingAbnormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRhTypingObservationNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.RhTypingObservationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRhTypingObservationNull() {
                this[this.tablePanamaDiagnosticTestSelect.RhTypingObservationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHivNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.HivColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHivNull() {
                this[this.tablePanamaDiagnosticTestSelect.HivColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHivNormalNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.HivNormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHivNormalNull() {
                this[this.tablePanamaDiagnosticTestSelect.HivNormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHivAbnormalNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.HivAbnormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHivAbnormalNull() {
                this[this.tablePanamaDiagnosticTestSelect.HivAbnormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHivObservationNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.HivObservationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHivObservationNull() {
                this[this.tablePanamaDiagnosticTestSelect.HivObservationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVdrlNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.VdrlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVdrlNull() {
                this[this.tablePanamaDiagnosticTestSelect.VdrlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVdrlNormalNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.VdrlNormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVdrlNormalNull() {
                this[this.tablePanamaDiagnosticTestSelect.VdrlNormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVdrlAbnormalNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.VdrlAbnormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVdrlAbnormalNull() {
                this[this.tablePanamaDiagnosticTestSelect.VdrlAbnormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVdrlObservationNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.VdrlObservationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVdrlObservationNull() {
                this[this.tablePanamaDiagnosticTestSelect.VdrlObservationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGchNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.GchColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGchNull() {
                this[this.tablePanamaDiagnosticTestSelect.GchColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGchNormalNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.GchNormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGchNormalNull() {
                this[this.tablePanamaDiagnosticTestSelect.GchNormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGchAbnormalNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.GchAbnormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGchAbnormalNull() {
                this[this.tablePanamaDiagnosticTestSelect.GchAbnormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGchObservationNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.GchObservationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGchObservationNull() {
                this[this.tablePanamaDiagnosticTestSelect.GchObservationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGeneralUrienNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.GeneralUrienColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGeneralUrienNull() {
                this[this.tablePanamaDiagnosticTestSelect.GeneralUrienColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGeneralUrineNormalNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.GeneralUrineNormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGeneralUrineNormalNull() {
                this[this.tablePanamaDiagnosticTestSelect.GeneralUrineNormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGeneralUrineAbNormalNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.GeneralUrineAbNormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGeneralUrineAbNormalNull() {
                this[this.tablePanamaDiagnosticTestSelect.GeneralUrineAbNormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGeneralUrineObservationNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.GeneralUrineObservationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGeneralUrineObservationNull() {
                this[this.tablePanamaDiagnosticTestSelect.GeneralUrineObservationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStoolNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.StoolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStoolNull() {
                this[this.tablePanamaDiagnosticTestSelect.StoolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStoolNormalNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.StoolNormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStoolNormalNull() {
                this[this.tablePanamaDiagnosticTestSelect.StoolNormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStoolAbNormalNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.StoolAbNormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStoolAbNormalNull() {
                this[this.tablePanamaDiagnosticTestSelect.StoolAbNormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStoolObservationNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.StoolObservationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStoolObservationNull() {
                this[this.tablePanamaDiagnosticTestSelect.StoolObservationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDrugtestNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.DrugtestColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDrugtestNull() {
                this[this.tablePanamaDiagnosticTestSelect.DrugtestColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDrugTestNormalNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.DrugTestNormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDrugTestNormalNull() {
                this[this.tablePanamaDiagnosticTestSelect.DrugTestNormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDrugTestAbNormalNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.DrugTestAbNormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDrugTestAbNormalNull() {
                this[this.tablePanamaDiagnosticTestSelect.DrugTestAbNormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDrugTestObservationNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.DrugTestObservationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDrugTestObservationNull() {
                this[this.tablePanamaDiagnosticTestSelect.DrugTestObservationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAlcoholNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.AlcoholColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAlcoholNull() {
                this[this.tablePanamaDiagnosticTestSelect.AlcoholColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAlcoholNormalNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.AlcoholNormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAlcoholNormalNull() {
                this[this.tablePanamaDiagnosticTestSelect.AlcoholNormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAlcoholAbNormalNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.AlcoholAbNormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAlcoholAbNormalNull() {
                this[this.tablePanamaDiagnosticTestSelect.AlcoholAbNormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAlcoholObservationNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.AlcoholObservationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAlcoholObservationNull() {
                this[this.tablePanamaDiagnosticTestSelect.AlcoholObservationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBreastNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.BreastColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBreastNull() {
                this[this.tablePanamaDiagnosticTestSelect.BreastColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBreastExaminationNormalNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.BreastExaminationNormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBreastExaminationNormalNull() {
                this[this.tablePanamaDiagnosticTestSelect.BreastExaminationNormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBreastExaminationAbNormalNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.BreastExaminationAbNormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBreastExaminationAbNormalNull() {
                this[this.tablePanamaDiagnosticTestSelect.BreastExaminationAbNormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBreastExaminationObservationNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.BreastExaminationObservationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBreastExaminationObservationNull() {
                this[this.tablePanamaDiagnosticTestSelect.BreastExaminationObservationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPapTestNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.PapTestColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPapTestNull() {
                this[this.tablePanamaDiagnosticTestSelect.PapTestColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPaptestJNormalNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.PaptestJNormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPaptestJNormalNull() {
                this[this.tablePanamaDiagnosticTestSelect.PaptestJNormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPapAbnormalNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.PapAbnormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPapAbnormalNull() {
                this[this.tablePanamaDiagnosticTestSelect.PapAbnormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPapObservationNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.PapObservationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPapObservationNull() {
                this[this.tablePanamaDiagnosticTestSelect.PapObservationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPsaNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.PsaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPsaNull() {
                this[this.tablePanamaDiagnosticTestSelect.PsaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPsaNormalNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.PsaNormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPsaNormalNull() {
                this[this.tablePanamaDiagnosticTestSelect.PsaNormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPsaAbNormalNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.PsaAbNormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPsaAbNormalNull() {
                this[this.tablePanamaDiagnosticTestSelect.PsaAbNormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPsaObservationNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.PsaObservationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPsaObservationNull() {
                this[this.tablePanamaDiagnosticTestSelect.PsaObservationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsXrayNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.XrayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetXrayNull() {
                this[this.tablePanamaDiagnosticTestSelect.XrayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsXrayDateNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.XrayDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetXrayDateNull() {
                this[this.tablePanamaDiagnosticTestSelect.XrayDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsXrayObservationNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.XrayObservationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetXrayObservationNull() {
                this[this.tablePanamaDiagnosticTestSelect.XrayObservationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEkgNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.EkgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEkgNull() {
                this[this.tablePanamaDiagnosticTestSelect.EkgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEkgDateNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.EkgDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEkgDateNull() {
                this[this.tablePanamaDiagnosticTestSelect.EkgDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEkgObservationNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.EkgObservationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEkgObservationNull() {
                this[this.tablePanamaDiagnosticTestSelect.EkgObservationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSarsCovidByPcrNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.SarsCovidByPcrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSarsCovidByPcrNull() {
                this[this.tablePanamaDiagnosticTestSelect.SarsCovidByPcrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSarsCovidByAntigensNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.SarsCovidByAntigensColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSarsCovidByAntigensNull() {
                this[this.tablePanamaDiagnosticTestSelect.SarsCovidByAntigensColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOtherTestNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.OtherTestColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOtherTestNull() {
                this[this.tablePanamaDiagnosticTestSelect.OtherTestColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOtherTestResultNull() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.OtherTestResultColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOtherTestResultNull() {
                this[this.tablePanamaDiagnosticTestSelect.OtherTestResultColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDiagnosticComment1Null() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.DiagnosticComment1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDiagnosticComment1Null() {
                this[this.tablePanamaDiagnosticTestSelect.DiagnosticComment1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDiagnosticComment2Null() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.DiagnosticComment2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDiagnosticComment2Null() {
                this[this.tablePanamaDiagnosticTestSelect.DiagnosticComment2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDiagnosticComment3Null() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.DiagnosticComment3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDiagnosticComment3Null() {
                this[this.tablePanamaDiagnosticTestSelect.DiagnosticComment3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDiagnosticComment4Null() {
                return this.IsNull(this.tablePanamaDiagnosticTestSelect.DiagnosticComment4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDiagnosticComment4Null() {
                this[this.tablePanamaDiagnosticTestSelect.DiagnosticComment4Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PanamaResultMainSelectRow : global::System.Data.DataRow {
            
            private PanamaResultMainSelectDataTable tablePanamaResultMainSelect;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PanamaResultMainSelectRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePanamaResultMainSelect = ((PanamaResultMainSelectDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long RecId {
                get {
                    return ((long)(this[this.tablePanamaResultMainSelect.RecIdColumn]));
                }
                set {
                    this[this.tablePanamaResultMainSelect.RecIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ResultId {
                get {
                    return ((string)(this[this.tablePanamaResultMainSelect.ResultIdColumn]));
                }
                set {
                    this[this.tablePanamaResultMainSelect.ResultIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Papin {
                get {
                    try {
                        return ((string)(this[this.tablePanamaResultMainSelect.PapinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Papin\' in table \'PanamaResultMainSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaResultMainSelect.PapinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FitForLookOut {
                get {
                    try {
                        return ((string)(this[this.tablePanamaResultMainSelect.FitForLookOutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FitForLookOut\' in table \'PanamaResultMainSelect\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablePanamaResultMainSelect.FitForLookOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NonFitForLookOut {
                get {
                    try {
                        return ((string)(this[this.tablePanamaResultMainSelect.NonFitForLookOutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NonFitForLookOut\' in table \'PanamaResultMainSelect\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePanamaResultMainSelect.NonFitForLookOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DeckServiceFit {
                get {
                    try {
                        return ((string)(this[this.tablePanamaResultMainSelect.DeckServiceFitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeckServiceFit\' in table \'PanamaResultMainSelect\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablePanamaResultMainSelect.DeckServiceFitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EngineFit {
                get {
                    try {
                        return ((string)(this[this.tablePanamaResultMainSelect.EngineFitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EngineFit\' in table \'PanamaResultMainSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaResultMainSelect.EngineFitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CateringFit {
                get {
                    try {
                        return ((string)(this[this.tablePanamaResultMainSelect.CateringFitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CateringFit\' in table \'PanamaResultMainSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaResultMainSelect.CateringFitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OtherServiceFit {
                get {
                    try {
                        return ((string)(this[this.tablePanamaResultMainSelect.OtherServiceFitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherServiceFit\' in table \'PanamaResultMainSelect\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePanamaResultMainSelect.OtherServiceFitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DeckServiceUnFit {
                get {
                    try {
                        return ((string)(this[this.tablePanamaResultMainSelect.DeckServiceUnFitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeckServiceUnFit\' in table \'PanamaResultMainSelect\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePanamaResultMainSelect.DeckServiceUnFitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EngineUnFit {
                get {
                    try {
                        return ((string)(this[this.tablePanamaResultMainSelect.EngineUnFitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EngineUnFit\' in table \'PanamaResultMainSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaResultMainSelect.EngineUnFitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CateringUnFit {
                get {
                    try {
                        return ((string)(this[this.tablePanamaResultMainSelect.CateringUnFitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CateringUnFit\' in table \'PanamaResultMainSelect\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablePanamaResultMainSelect.CateringUnFitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OtherUnFit {
                get {
                    try {
                        return ((string)(this[this.tablePanamaResultMainSelect.OtherUnFitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherUnFit\' in table \'PanamaResultMainSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaResultMainSelect.OtherUnFitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string WithOutRestrictions {
                get {
                    try {
                        return ((string)(this[this.tablePanamaResultMainSelect.WithOutRestrictionsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WithOutRestrictions\' in table \'PanamaResultMainSelect\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaResultMainSelect.WithOutRestrictionsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cbVisualAidRequiredYes {
                get {
                    try {
                        return ((string)(this[this.tablePanamaResultMainSelect.cbVisualAidRequiredYesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cbVisualAidRequiredYes\' in table \'PanamaResultMainSelect\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaResultMainSelect.cbVisualAidRequiredYesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cbVisualAidRequiredNo {
                get {
                    try {
                        return ((string)(this[this.tablePanamaResultMainSelect.cbVisualAidRequiredNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cbVisualAidRequiredNo\' in table \'PanamaResultMainSelect\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaResultMainSelect.cbVisualAidRequiredNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string assessmentComment1 {
                get {
                    try {
                        return ((string)(this[this.tablePanamaResultMainSelect.assessmentComment1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'assessmentComment1\' in table \'PanamaResultMainSelect\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePanamaResultMainSelect.assessmentComment1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MedicalCertificateExpiration {
                get {
                    try {
                        return ((string)(this[this.tablePanamaResultMainSelect.MedicalCertificateExpirationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MedicalCertificateExpiration\' in table \'PanamaResultMainSel" +
                                "ect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaResultMainSelect.MedicalCertificateExpirationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MedicalCertificateIssued {
                get {
                    try {
                        return ((string)(this[this.tablePanamaResultMainSelect.MedicalCertificateIssuedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MedicalCertificateIssued\' in table \'PanamaResultMainSelect\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaResultMainSelect.MedicalCertificateIssuedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NumberOfMedicalCertificate {
                get {
                    try {
                        return ((string)(this[this.tablePanamaResultMainSelect.NumberOfMedicalCertificateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberOfMedicalCertificate\' in table \'PanamaResultMainSelec" +
                                "t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePanamaResultMainSelect.NumberOfMedicalCertificateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PhysicianName {
                get {
                    try {
                        return ((string)(this[this.tablePanamaResultMainSelect.PhysicianNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhysicianName\' in table \'PanamaResultMainSelect\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablePanamaResultMainSelect.PhysicianNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string WithRestrictions {
                get {
                    try {
                        return ((string)(this[this.tablePanamaResultMainSelect.WithRestrictionsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WithRestrictions\' in table \'PanamaResultMainSelect\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePanamaResultMainSelect.WithRestrictionsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string assessmentComment2 {
                get {
                    try {
                        return ((string)(this[this.tablePanamaResultMainSelect.assessmentComment2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'assessmentComment2\' in table \'PanamaResultMainSelect\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePanamaResultMainSelect.assessmentComment2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string assessmentComment3 {
                get {
                    try {
                        return ((string)(this[this.tablePanamaResultMainSelect.assessmentComment3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'assessmentComment3\' in table \'PanamaResultMainSelect\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePanamaResultMainSelect.assessmentComment3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string assessmentComment4 {
                get {
                    try {
                        return ((string)(this[this.tablePanamaResultMainSelect.assessmentComment4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'assessmentComment4\' in table \'PanamaResultMainSelect\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePanamaResultMainSelect.assessmentComment4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string assessmentComment5 {
                get {
                    try {
                        return ((string)(this[this.tablePanamaResultMainSelect.assessmentComment5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'assessmentComment5\' in table \'PanamaResultMainSelect\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePanamaResultMainSelect.assessmentComment5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPapinNull() {
                return this.IsNull(this.tablePanamaResultMainSelect.PapinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPapinNull() {
                this[this.tablePanamaResultMainSelect.PapinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFitForLookOutNull() {
                return this.IsNull(this.tablePanamaResultMainSelect.FitForLookOutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFitForLookOutNull() {
                this[this.tablePanamaResultMainSelect.FitForLookOutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNonFitForLookOutNull() {
                return this.IsNull(this.tablePanamaResultMainSelect.NonFitForLookOutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNonFitForLookOutNull() {
                this[this.tablePanamaResultMainSelect.NonFitForLookOutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeckServiceFitNull() {
                return this.IsNull(this.tablePanamaResultMainSelect.DeckServiceFitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeckServiceFitNull() {
                this[this.tablePanamaResultMainSelect.DeckServiceFitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEngineFitNull() {
                return this.IsNull(this.tablePanamaResultMainSelect.EngineFitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEngineFitNull() {
                this[this.tablePanamaResultMainSelect.EngineFitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCateringFitNull() {
                return this.IsNull(this.tablePanamaResultMainSelect.CateringFitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCateringFitNull() {
                this[this.tablePanamaResultMainSelect.CateringFitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOtherServiceFitNull() {
                return this.IsNull(this.tablePanamaResultMainSelect.OtherServiceFitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOtherServiceFitNull() {
                this[this.tablePanamaResultMainSelect.OtherServiceFitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeckServiceUnFitNull() {
                return this.IsNull(this.tablePanamaResultMainSelect.DeckServiceUnFitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeckServiceUnFitNull() {
                this[this.tablePanamaResultMainSelect.DeckServiceUnFitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEngineUnFitNull() {
                return this.IsNull(this.tablePanamaResultMainSelect.EngineUnFitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEngineUnFitNull() {
                this[this.tablePanamaResultMainSelect.EngineUnFitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCateringUnFitNull() {
                return this.IsNull(this.tablePanamaResultMainSelect.CateringUnFitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCateringUnFitNull() {
                this[this.tablePanamaResultMainSelect.CateringUnFitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOtherUnFitNull() {
                return this.IsNull(this.tablePanamaResultMainSelect.OtherUnFitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOtherUnFitNull() {
                this[this.tablePanamaResultMainSelect.OtherUnFitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWithOutRestrictionsNull() {
                return this.IsNull(this.tablePanamaResultMainSelect.WithOutRestrictionsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWithOutRestrictionsNull() {
                this[this.tablePanamaResultMainSelect.WithOutRestrictionsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscbVisualAidRequiredYesNull() {
                return this.IsNull(this.tablePanamaResultMainSelect.cbVisualAidRequiredYesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcbVisualAidRequiredYesNull() {
                this[this.tablePanamaResultMainSelect.cbVisualAidRequiredYesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscbVisualAidRequiredNoNull() {
                return this.IsNull(this.tablePanamaResultMainSelect.cbVisualAidRequiredNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcbVisualAidRequiredNoNull() {
                this[this.tablePanamaResultMainSelect.cbVisualAidRequiredNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsassessmentComment1Null() {
                return this.IsNull(this.tablePanamaResultMainSelect.assessmentComment1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetassessmentComment1Null() {
                this[this.tablePanamaResultMainSelect.assessmentComment1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMedicalCertificateExpirationNull() {
                return this.IsNull(this.tablePanamaResultMainSelect.MedicalCertificateExpirationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMedicalCertificateExpirationNull() {
                this[this.tablePanamaResultMainSelect.MedicalCertificateExpirationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMedicalCertificateIssuedNull() {
                return this.IsNull(this.tablePanamaResultMainSelect.MedicalCertificateIssuedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMedicalCertificateIssuedNull() {
                this[this.tablePanamaResultMainSelect.MedicalCertificateIssuedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumberOfMedicalCertificateNull() {
                return this.IsNull(this.tablePanamaResultMainSelect.NumberOfMedicalCertificateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumberOfMedicalCertificateNull() {
                this[this.tablePanamaResultMainSelect.NumberOfMedicalCertificateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPhysicianNameNull() {
                return this.IsNull(this.tablePanamaResultMainSelect.PhysicianNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPhysicianNameNull() {
                this[this.tablePanamaResultMainSelect.PhysicianNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWithRestrictionsNull() {
                return this.IsNull(this.tablePanamaResultMainSelect.WithRestrictionsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWithRestrictionsNull() {
                this[this.tablePanamaResultMainSelect.WithRestrictionsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsassessmentComment2Null() {
                return this.IsNull(this.tablePanamaResultMainSelect.assessmentComment2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetassessmentComment2Null() {
                this[this.tablePanamaResultMainSelect.assessmentComment2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsassessmentComment3Null() {
                return this.IsNull(this.tablePanamaResultMainSelect.assessmentComment3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetassessmentComment3Null() {
                this[this.tablePanamaResultMainSelect.assessmentComment3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsassessmentComment4Null() {
                return this.IsNull(this.tablePanamaResultMainSelect.assessmentComment4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetassessmentComment4Null() {
                this[this.tablePanamaResultMainSelect.assessmentComment4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsassessmentComment5Null() {
                return this.IsNull(this.tablePanamaResultMainSelect.assessmentComment5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetassessmentComment5Null() {
                this[this.tablePanamaResultMainSelect.assessmentComment5Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Panama_patientRowChangeEvent : global::System.EventArgs {
            
            private Panama_patientRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Panama_patientRowChangeEvent(Panama_patientRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Panama_patientRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class PanamaExamineePersonalDeclarationSelectRowChangeEvent : global::System.EventArgs {
            
            private PanamaExamineePersonalDeclarationSelectRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PanamaExamineePersonalDeclarationSelectRowChangeEvent(PanamaExamineePersonalDeclarationSelectRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PanamaExamineePersonalDeclarationSelectRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class PanamaClinicalDataSelectRowChangeEvent : global::System.EventArgs {
            
            private PanamaClinicalDataSelectRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PanamaClinicalDataSelectRowChangeEvent(PanamaClinicalDataSelectRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PanamaClinicalDataSelectRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class PanamaPhysicalExplorationSelectRowChangeEvent : global::System.EventArgs {
            
            private PanamaPhysicalExplorationSelectRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PanamaPhysicalExplorationSelectRowChangeEvent(PanamaPhysicalExplorationSelectRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PanamaPhysicalExplorationSelectRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class PanamaDiagnosticTestSelectRowChangeEvent : global::System.EventArgs {
            
            private PanamaDiagnosticTestSelectRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PanamaDiagnosticTestSelectRowChangeEvent(PanamaDiagnosticTestSelectRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PanamaDiagnosticTestSelectRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class PanamaResultMainSelectRowChangeEvent : global::System.EventArgs {
            
            private PanamaResultMainSelectRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PanamaResultMainSelectRowChangeEvent(PanamaResultMainSelectRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PanamaResultMainSelectRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace MedicalManagementSoftware.Panama.DataSetPanamaTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Panama_patientTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Panama_patientTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Panama_patient";
            tableMapping.ColumnMappings.Add("papin", "papin");
            tableMapping.ColumnMappings.Add("Fullname", "Fullname");
            tableMapping.ColumnMappings.Add("HomeAddress", "HomeAddress");
            tableMapping.ColumnMappings.Add("Department", "Department");
            tableMapping.ColumnMappings.Add("position", "position");
            tableMapping.ColumnMappings.Add("gender", "gender");
            tableMapping.ColumnMappings.Add("birthdate", "birthdate");
            tableMapping.ColumnMappings.Add("PassportSeamanBookNo", "PassportSeamanBookNo");
            tableMapping.ColumnMappings.Add("RhTyping", "RhTyping");
            tableMapping.ColumnMappings.Add("LookOutDuties", "LookOutDuties");
            tableMapping.ColumnMappings.Add("EmergencyDuties", "EmergencyDuties");
            tableMapping.ColumnMappings.Add("TypeOfShip", "TypeOfShip");
            tableMapping.ColumnMappings.Add("TradeArea", "TradeArea");
            tableMapping.ColumnMappings.Add("specimen_no", "specimen_no");
            tableMapping.ColumnMappings.Add("fitness_date", "fitness_date");
            tableMapping.ColumnMappings.Add("pathologist", "pathologist");
            tableMapping.ColumnMappings.Add("valid_until", "valid_until");
            tableMapping.ColumnMappings.Add("resultid", "resultid");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MedicalManagementSoftware.Properties.Settings.Default.Centerport_MedicalConnectionString2;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.Panama_patient";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Papin", global::System.Data.SqlDbType.VarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetPanama.Panama_patientDataTable dataTable, string Papin) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Papin == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(Papin));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetPanama.Panama_patientDataTable GetData(string Papin) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Papin == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(Papin));
            }
            DataSetPanama.Panama_patientDataTable dataTable = new DataSetPanama.Panama_patientDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PanamaExamineePersonalDeclarationSelectTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PanamaExamineePersonalDeclarationSelectTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PanamaExamineePersonalDeclarationSelect";
            tableMapping.ColumnMappings.Add("RecId", "RecId");
            tableMapping.ColumnMappings.Add("HighBloodPressure", "HighBloodPressure");
            tableMapping.ColumnMappings.Add("Eyeproblem", "Eyeproblem");
            tableMapping.ColumnMappings.Add("EarNoseThroat", "EarNoseThroat");
            tableMapping.ColumnMappings.Add("HeartSurgery", "HeartSurgery");
            tableMapping.ColumnMappings.Add("Varicoseveins", "Varicoseveins");
            tableMapping.ColumnMappings.Add("AsthmaBronchitis", "AsthmaBronchitis");
            tableMapping.ColumnMappings.Add("BloodDisorder", "BloodDisorder");
            tableMapping.ColumnMappings.Add("Diabetes", "Diabetes");
            tableMapping.ColumnMappings.Add("ThyroidProblem", "ThyroidProblem");
            tableMapping.ColumnMappings.Add("DigestiveDisorders", "DigestiveDisorders");
            tableMapping.ColumnMappings.Add("KidneyDisorders", "KidneyDisorders");
            tableMapping.ColumnMappings.Add("SkinProblem", "SkinProblem");
            tableMapping.ColumnMappings.Add("Allergies", "Allergies");
            tableMapping.ColumnMappings.Add("Epilipsy", "Epilipsy");
            tableMapping.ColumnMappings.Add("SickleCell", "SickleCell");
            tableMapping.ColumnMappings.Add("Herinas", "Herinas");
            tableMapping.ColumnMappings.Add("GenitalDisorders", "GenitalDisorders");
            tableMapping.ColumnMappings.Add("Pregnancy", "Pregnancy");
            tableMapping.ColumnMappings.Add("Sleepproblem", "Sleepproblem");
            tableMapping.ColumnMappings.Add("DoyouSmoke", "DoyouSmoke");
            tableMapping.ColumnMappings.Add("Surgeries", "Surgeries");
            tableMapping.ColumnMappings.Add("Infectious", "Infectious");
            tableMapping.ColumnMappings.Add("DizzinessFainting", "DizzinessFainting");
            tableMapping.ColumnMappings.Add("Lossofconsciousness", "Lossofconsciousness");
            tableMapping.ColumnMappings.Add("PsychiatricProblem", "PsychiatricProblem");
            tableMapping.ColumnMappings.Add("Depression", "Depression");
            tableMapping.ColumnMappings.Add("Attemptedsuicide", "Attemptedsuicide");
            tableMapping.ColumnMappings.Add("Lossofmemory", "Lossofmemory");
            tableMapping.ColumnMappings.Add("BalanceProblems", "BalanceProblems");
            tableMapping.ColumnMappings.Add("SevereHeadAches", "SevereHeadAches");
            tableMapping.ColumnMappings.Add("Vasculardisease", "Vasculardisease");
            tableMapping.ColumnMappings.Add("RestrictedMobility", "RestrictedMobility");
            tableMapping.ColumnMappings.Add("BackJointProblem", "BackJointProblem");
            tableMapping.ColumnMappings.Add("Amputation", "Amputation");
            tableMapping.ColumnMappings.Add("FracturesDislocation", "FracturesDislocation");
            tableMapping.ColumnMappings.Add("Covid19", "Covid19");
            tableMapping.ColumnMappings.Add("Repatriated", "Repatriated");
            tableMapping.ColumnMappings.Add("Hospitalized", "Hospitalized");
            tableMapping.ColumnMappings.Add("SeaDuty", "SeaDuty");
            tableMapping.ColumnMappings.Add("Revoke", "Revoke");
            tableMapping.ColumnMappings.Add("ConsiderDisease", "ConsiderDisease");
            tableMapping.ColumnMappings.Add("FitToPerformDuries", "FitToPerformDuries");
            tableMapping.ColumnMappings.Add("AllergicToAnyMedication", "AllergicToAnyMedication");
            tableMapping.ColumnMappings.Add("AlternativeSupliment", "AlternativeSupliment");
            tableMapping.ColumnMappings.Add("AlternativeSuplimentComment1", "AlternativeSuplimentComment1");
            tableMapping.ColumnMappings.Add("TakenMedications", "TakenMedications");
            tableMapping.ColumnMappings.Add("TakenMedicationsComment1", "TakenMedicationsComment1");
            tableMapping.ColumnMappings.Add("Comment1", "Comment1");
            tableMapping.ColumnMappings.Add("ResultID", "ResultID");
            tableMapping.ColumnMappings.Add("Comment2", "Comment2");
            tableMapping.ColumnMappings.Add("Comment3", "Comment3");
            tableMapping.ColumnMappings.Add("Comment4", "Comment4");
            tableMapping.ColumnMappings.Add("Comment5", "Comment5");
            tableMapping.ColumnMappings.Add("AlternativeSuplimentComment2", "AlternativeSuplimentComment2");
            tableMapping.ColumnMappings.Add("AlternativeSuplimentComment3", "AlternativeSuplimentComment3");
            tableMapping.ColumnMappings.Add("AlternativeSuplimentComment4", "AlternativeSuplimentComment4");
            tableMapping.ColumnMappings.Add("AlternativeSuplimentComment5", "AlternativeSuplimentComment5");
            tableMapping.ColumnMappings.Add("TakenMedicationsComment2", "TakenMedicationsComment2");
            tableMapping.ColumnMappings.Add("TakenMedicationsComment3", "TakenMedicationsComment3");
            tableMapping.ColumnMappings.Add("TakenMedicationsComment4", "TakenMedicationsComment4");
            tableMapping.ColumnMappings.Add("TakenMedicationsComment5", "TakenMedicationsComment5");
            tableMapping.ColumnMappings.Add("AlternativeSuplimentComment6", "AlternativeSuplimentComment6");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MedicalManagementSoftware.Properties.Settings.Default.Centerport_MedicalConnectionString2;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.PanamaExamineePersonalDeclarationSelect";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Papin", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ResultMainUID", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetPanama.PanamaExamineePersonalDeclarationSelectDataTable dataTable, string Papin, string ResultMainUID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Papin == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(Papin));
            }
            if ((ResultMainUID == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(ResultMainUID));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetPanama.PanamaExamineePersonalDeclarationSelectDataTable GetData(string Papin, string ResultMainUID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Papin == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(Papin));
            }
            if ((ResultMainUID == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(ResultMainUID));
            }
            DataSetPanama.PanamaExamineePersonalDeclarationSelectDataTable dataTable = new DataSetPanama.PanamaExamineePersonalDeclarationSelectDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PanamaClinicalDataSelectTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PanamaClinicalDataSelectTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PanamaClinicalDataSelect";
            tableMapping.ColumnMappings.Add("RecId", "RecId");
            tableMapping.ColumnMappings.Add("ResultMainUID", "ResultMainUID");
            tableMapping.ColumnMappings.Add("Height", "Height");
            tableMapping.ColumnMappings.Add("Weight", "Weight");
            tableMapping.ColumnMappings.Add("BMI", "BMI");
            tableMapping.ColumnMappings.Add("Oxygen", "Oxygen");
            tableMapping.ColumnMappings.Add("HeartRate", "HeartRate");
            tableMapping.ColumnMappings.Add("Respiratory", "Respiratory");
            tableMapping.ColumnMappings.Add("BloodPressure", "BloodPressure");
            tableMapping.ColumnMappings.Add("Diatolic", "Diatolic");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MedicalManagementSoftware.Properties.Settings.Default.Centerport_MedicalConnectionString2;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.PanamaClinicalDataSelect";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Papin", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ResultMainUID", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetPanama.PanamaClinicalDataSelectDataTable dataTable, string Papin, string ResultMainUID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Papin == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(Papin));
            }
            if ((ResultMainUID == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(ResultMainUID));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetPanama.PanamaClinicalDataSelectDataTable GetData(string Papin, string ResultMainUID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Papin == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(Papin));
            }
            if ((ResultMainUID == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(ResultMainUID));
            }
            DataSetPanama.PanamaClinicalDataSelectDataTable dataTable = new DataSetPanama.PanamaClinicalDataSelectDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PanamaPhysicalExplorationSelectTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PanamaPhysicalExplorationSelectTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PanamaPhysicalExplorationSelect";
            tableMapping.ColumnMappings.Add("RecID", "RecID");
            tableMapping.ColumnMappings.Add("Head", "Head");
            tableMapping.ColumnMappings.Add("Mouth", "Mouth");
            tableMapping.ColumnMappings.Add("Dental", "Dental");
            tableMapping.ColumnMappings.Add("Ears", "Ears");
            tableMapping.ColumnMappings.Add("Tympanic", "Tympanic");
            tableMapping.ColumnMappings.Add("Eyes", "Eyes");
            tableMapping.ColumnMappings.Add("Pupils", "Pupils");
            tableMapping.ColumnMappings.Add("OfThalmoscopy", "OfThalmoscopy");
            tableMapping.ColumnMappings.Add("EyeMovement", "EyeMovement");
            tableMapping.ColumnMappings.Add("Lungs", "Lungs");
            tableMapping.ColumnMappings.Add("Breast", "Breast");
            tableMapping.ColumnMappings.Add("Heart", "Heart");
            tableMapping.ColumnMappings.Add("Skin", "Skin");
            tableMapping.ColumnMappings.Add("VaricoseVenis", "VaricoseVenis");
            tableMapping.ColumnMappings.Add("Vascular", "Vascular");
            tableMapping.ColumnMappings.Add("Abdomen", "Abdomen");
            tableMapping.ColumnMappings.Add("Hernias", "Hernias");
            tableMapping.ColumnMappings.Add("Anus", "Anus");
            tableMapping.ColumnMappings.Add("Gu", "Gu");
            tableMapping.ColumnMappings.Add("Upper", "Upper");
            tableMapping.ColumnMappings.Add("Spine", "Spine");
            tableMapping.ColumnMappings.Add("Neurologic", "Neurologic");
            tableMapping.ColumnMappings.Add("Psychiatric", "Psychiatric");
            tableMapping.ColumnMappings.Add("GeneralAppearance", "GeneralAppearance");
            tableMapping.ColumnMappings.Add("PhysicalExplorationComment1", "PhysicalExplorationComment1");
            tableMapping.ColumnMappings.Add("PhysicalExplorationComment2", "PhysicalExplorationComment2");
            tableMapping.ColumnMappings.Add("PhysicalExplorationComment3", "PhysicalExplorationComment3");
            tableMapping.ColumnMappings.Add("PhysicalExplorationComment4", "PhysicalExplorationComment4");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MedicalManagementSoftware.Properties.Settings.Default.Centerport_MedicalConnectionString2;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.PanamaPhysicalExplorationSelect";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Papin", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ResultID", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetPanama.PanamaPhysicalExplorationSelectDataTable dataTable, string Papin, string ResultID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Papin == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(Papin));
            }
            if ((ResultID == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(ResultID));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetPanama.PanamaPhysicalExplorationSelectDataTable GetData(string Papin, string ResultID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Papin == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(Papin));
            }
            if ((ResultID == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(ResultID));
            }
            DataSetPanama.PanamaPhysicalExplorationSelectDataTable dataTable = new DataSetPanama.PanamaPhysicalExplorationSelectDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PanamaDiagnosticTestSelectTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PanamaDiagnosticTestSelectTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PanamaDiagnosticTestSelect";
            tableMapping.ColumnMappings.Add("RecID", "RecID");
            tableMapping.ColumnMappings.Add("ResultMainUID", "ResultMainUID");
            tableMapping.ColumnMappings.Add("Hemogram", "Hemogram");
            tableMapping.ColumnMappings.Add("HemogramNormal", "HemogramNormal");
            tableMapping.ColumnMappings.Add("HemogramAbNormal", "HemogramAbNormal");
            tableMapping.ColumnMappings.Add("HemogramOservation", "HemogramOservation");
            tableMapping.ColumnMappings.Add("Lipid", "Lipid");
            tableMapping.ColumnMappings.Add("LipidNormal", "LipidNormal");
            tableMapping.ColumnMappings.Add("LipidAbNormal", "LipidAbNormal");
            tableMapping.ColumnMappings.Add("LipidObservation", "LipidObservation");
            tableMapping.ColumnMappings.Add("Creatinine", "Creatinine");
            tableMapping.ColumnMappings.Add("CreatinineNormal", "CreatinineNormal");
            tableMapping.ColumnMappings.Add("CreatinineAbnormal", "CreatinineAbnormal");
            tableMapping.ColumnMappings.Add("CreatinineObservation", "CreatinineObservation");
            tableMapping.ColumnMappings.Add("Cholesterol", "Cholesterol");
            tableMapping.ColumnMappings.Add("CholesterolNormal", "CholesterolNormal");
            tableMapping.ColumnMappings.Add("CholesterolAbnormal", "CholesterolAbnormal");
            tableMapping.ColumnMappings.Add("CholesterolObservation", "CholesterolObservation");
            tableMapping.ColumnMappings.Add("Triglycerides", "Triglycerides");
            tableMapping.ColumnMappings.Add("TriglyceridesNormal", "TriglyceridesNormal");
            tableMapping.ColumnMappings.Add("TriglyceridesAbnormal", "TriglyceridesAbnormal");
            tableMapping.ColumnMappings.Add("TriglyceridesObservation", "TriglyceridesObservation");
            tableMapping.ColumnMappings.Add("Glucose", "Glucose");
            tableMapping.ColumnMappings.Add("GlucoseNormal", "GlucoseNormal");
            tableMapping.ColumnMappings.Add("GlucoseAbNormal", "GlucoseAbNormal");
            tableMapping.ColumnMappings.Add("GlucoseObservation", "GlucoseObservation");
            tableMapping.ColumnMappings.Add("Nitrogen", "Nitrogen");
            tableMapping.ColumnMappings.Add("NitrogenNormal", "NitrogenNormal");
            tableMapping.ColumnMappings.Add("NitrogenAbnormal", "NitrogenAbnormal");
            tableMapping.ColumnMappings.Add("NitrogenObservation", "NitrogenObservation");
            tableMapping.ColumnMappings.Add("RhTyping", "RhTyping");
            tableMapping.ColumnMappings.Add("RhTypingNormal", "RhTypingNormal");
            tableMapping.ColumnMappings.Add("RhTypingAbnormal", "RhTypingAbnormal");
            tableMapping.ColumnMappings.Add("RhTypingObservation", "RhTypingObservation");
            tableMapping.ColumnMappings.Add("Hiv", "Hiv");
            tableMapping.ColumnMappings.Add("HivNormal", "HivNormal");
            tableMapping.ColumnMappings.Add("HivAbnormal", "HivAbnormal");
            tableMapping.ColumnMappings.Add("HivObservation", "HivObservation");
            tableMapping.ColumnMappings.Add("Vdrl", "Vdrl");
            tableMapping.ColumnMappings.Add("VdrlNormal", "VdrlNormal");
            tableMapping.ColumnMappings.Add("VdrlAbnormal", "VdrlAbnormal");
            tableMapping.ColumnMappings.Add("VdrlObservation", "VdrlObservation");
            tableMapping.ColumnMappings.Add("Gch", "Gch");
            tableMapping.ColumnMappings.Add("GchNormal", "GchNormal");
            tableMapping.ColumnMappings.Add("GchAbnormal", "GchAbnormal");
            tableMapping.ColumnMappings.Add("GchObservation", "GchObservation");
            tableMapping.ColumnMappings.Add("GeneralUrien", "GeneralUrien");
            tableMapping.ColumnMappings.Add("GeneralUrineNormal", "GeneralUrineNormal");
            tableMapping.ColumnMappings.Add("GeneralUrineAbNormal", "GeneralUrineAbNormal");
            tableMapping.ColumnMappings.Add("GeneralUrineObservation", "GeneralUrineObservation");
            tableMapping.ColumnMappings.Add("Stool", "Stool");
            tableMapping.ColumnMappings.Add("StoolNormal", "StoolNormal");
            tableMapping.ColumnMappings.Add("StoolAbNormal", "StoolAbNormal");
            tableMapping.ColumnMappings.Add("StoolObservation", "StoolObservation");
            tableMapping.ColumnMappings.Add("Drugtest", "Drugtest");
            tableMapping.ColumnMappings.Add("DrugTestNormal", "DrugTestNormal");
            tableMapping.ColumnMappings.Add("DrugTestAbNormal", "DrugTestAbNormal");
            tableMapping.ColumnMappings.Add("DrugTestObservation", "DrugTestObservation");
            tableMapping.ColumnMappings.Add("Alcohol", "Alcohol");
            tableMapping.ColumnMappings.Add("AlcoholNormal", "AlcoholNormal");
            tableMapping.ColumnMappings.Add("AlcoholAbNormal", "AlcoholAbNormal");
            tableMapping.ColumnMappings.Add("AlcoholObservation", "AlcoholObservation");
            tableMapping.ColumnMappings.Add("Breast", "Breast");
            tableMapping.ColumnMappings.Add("BreastExaminationNormal", "BreastExaminationNormal");
            tableMapping.ColumnMappings.Add("BreastExaminationAbNormal", "BreastExaminationAbNormal");
            tableMapping.ColumnMappings.Add("BreastExaminationObservation", "BreastExaminationObservation");
            tableMapping.ColumnMappings.Add("PapTest", "PapTest");
            tableMapping.ColumnMappings.Add("PaptestJNormal", "PaptestJNormal");
            tableMapping.ColumnMappings.Add("PapAbnormal", "PapAbnormal");
            tableMapping.ColumnMappings.Add("PapObservation", "PapObservation");
            tableMapping.ColumnMappings.Add("Psa", "Psa");
            tableMapping.ColumnMappings.Add("PsaNormal", "PsaNormal");
            tableMapping.ColumnMappings.Add("PsaAbNormal", "PsaAbNormal");
            tableMapping.ColumnMappings.Add("PsaObservation", "PsaObservation");
            tableMapping.ColumnMappings.Add("Xray", "Xray");
            tableMapping.ColumnMappings.Add("XrayDate", "XrayDate");
            tableMapping.ColumnMappings.Add("XrayObservation", "XrayObservation");
            tableMapping.ColumnMappings.Add("Ekg", "Ekg");
            tableMapping.ColumnMappings.Add("EkgDate", "EkgDate");
            tableMapping.ColumnMappings.Add("EkgObservation", "EkgObservation");
            tableMapping.ColumnMappings.Add("SarsCovidByPcr", "SarsCovidByPcr");
            tableMapping.ColumnMappings.Add("SarsCovidByAntigens", "SarsCovidByAntigens");
            tableMapping.ColumnMappings.Add("OtherTest", "OtherTest");
            tableMapping.ColumnMappings.Add("OtherTestResult", "OtherTestResult");
            tableMapping.ColumnMappings.Add("DiagnosticComment1", "DiagnosticComment1");
            tableMapping.ColumnMappings.Add("DiagnosticComment2", "DiagnosticComment2");
            tableMapping.ColumnMappings.Add("DiagnosticComment3", "DiagnosticComment3");
            tableMapping.ColumnMappings.Add("DiagnosticComment4", "DiagnosticComment4");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MedicalManagementSoftware.Properties.Settings.Default.Centerport_MedicalConnectionString2;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.PanamaDiagnosticTestSelect";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ResultMainUID", global::System.Data.SqlDbType.VarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Papin", global::System.Data.SqlDbType.VarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetPanama.PanamaDiagnosticTestSelectDataTable dataTable, string ResultMainUID, string Papin) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((ResultMainUID == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(ResultMainUID));
            }
            if ((Papin == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(Papin));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetPanama.PanamaDiagnosticTestSelectDataTable GetData(string ResultMainUID, string Papin) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((ResultMainUID == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(ResultMainUID));
            }
            if ((Papin == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(Papin));
            }
            DataSetPanama.PanamaDiagnosticTestSelectDataTable dataTable = new DataSetPanama.PanamaDiagnosticTestSelectDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PanamaResultMainSelectTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PanamaResultMainSelectTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PanamaResultMainSelect";
            tableMapping.ColumnMappings.Add("RecId", "RecId");
            tableMapping.ColumnMappings.Add("ResultId", "ResultId");
            tableMapping.ColumnMappings.Add("Papin", "Papin");
            tableMapping.ColumnMappings.Add("FitForLookOut", "FitForLookOut");
            tableMapping.ColumnMappings.Add("NonFitForLookOut", "NonFitForLookOut");
            tableMapping.ColumnMappings.Add("DeckServiceFit", "DeckServiceFit");
            tableMapping.ColumnMappings.Add("EngineFit", "EngineFit");
            tableMapping.ColumnMappings.Add("CateringFit", "CateringFit");
            tableMapping.ColumnMappings.Add("OtherServiceFit", "OtherServiceFit");
            tableMapping.ColumnMappings.Add("DeckServiceUnFit", "DeckServiceUnFit");
            tableMapping.ColumnMappings.Add("EngineUnFit", "EngineUnFit");
            tableMapping.ColumnMappings.Add("CateringUnFit", "CateringUnFit");
            tableMapping.ColumnMappings.Add("OtherUnFit", "OtherUnFit");
            tableMapping.ColumnMappings.Add("WithOutRestrictions", "WithOutRestrictions");
            tableMapping.ColumnMappings.Add("cbVisualAidRequiredYes", "cbVisualAidRequiredYes");
            tableMapping.ColumnMappings.Add("cbVisualAidRequiredNo", "cbVisualAidRequiredNo");
            tableMapping.ColumnMappings.Add("assessmentComment1", "assessmentComment1");
            tableMapping.ColumnMappings.Add("MedicalCertificateExpiration", "MedicalCertificateExpiration");
            tableMapping.ColumnMappings.Add("MedicalCertificateIssued", "MedicalCertificateIssued");
            tableMapping.ColumnMappings.Add("NumberOfMedicalCertificate", "NumberOfMedicalCertificate");
            tableMapping.ColumnMappings.Add("PhysicianName", "PhysicianName");
            tableMapping.ColumnMappings.Add("WithRestrictions", "WithRestrictions");
            tableMapping.ColumnMappings.Add("assessmentComment2", "assessmentComment2");
            tableMapping.ColumnMappings.Add("assessmentComment3", "assessmentComment3");
            tableMapping.ColumnMappings.Add("assessmentComment4", "assessmentComment4");
            tableMapping.ColumnMappings.Add("assessmentComment5", "assessmentComment5");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MedicalManagementSoftware.Properties.Settings.Default.Centerport_MedicalConnectionString2;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.PanamaResultMainSelect";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ResultMainUID", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Papin", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetPanama.PanamaResultMainSelectDataTable dataTable, string ResultMainUID, string Papin) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((ResultMainUID == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(ResultMainUID));
            }
            if ((Papin == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(Papin));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetPanama.PanamaResultMainSelectDataTable GetData(string ResultMainUID, string Papin) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((ResultMainUID == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(ResultMainUID));
            }
            if ((Papin == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(Papin));
            }
            DataSetPanama.PanamaResultMainSelectDataTable dataTable = new DataSetPanama.PanamaResultMainSelectDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(DataSetPanama dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(DataSetPanama dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(DataSetPanama dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(DataSetPanama dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591